{
    "schema": "olm.package",
    "name": "cluster-kube-descheduler-operator",
    "defaultChannel": "stable",
    "icon": {
        "base64data": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAGEQAABhEBFmutAgAAABJ0RVh0U29mdHdhcmUAZXpnaWYuY29toMOzWAAADjBJREFUaIHFm3lgFNUdxz+zM3vmZJPNTZAgd+WKQRAICEiwKEghFhFFjooFueQQKFZRwAqo5bBQL/AGxbMVAoISUWlNuBQISEIgkGDIHbLZc2b6x+qGJQhks2u/f+2+ee/3vt99b37Hm1lBVVWV/xOqKiuprKpCVVUMBgOxsbFotdqgzikF1fplqK2tZet7W8j6bCtHjh4nIlQiMkyHVhS4WC9TWmknLDyUtLSeDM4YzpAhGZhMpoByEH6LFb5w4QL/XL+ad99+iyGpIQxL03NzeyM6rRZBF4Eg6kEQQXZSWHSeXftryD6qcORUPX8ccw+PzJxPTExMQLgEVbCiKLz6ygZeWPUsmemhTBwSjsUcihTdE435JsSQZBQ07MrO4dPte9mdnYPD6UQniSiqjOx2YXfKCILIA+PHs3z5CgRBaBanoAkuKjrDjKmTUKxnWDGpBckJUUhx/ZFibkUQDTidTjZ/uIuVa9/CZrdz8WL9r9rSAIJGIDo6muy9+zCbzX7zCorg/bm5jB+XyUN3hDAhIxKdpSfaViMQRCMAe/cd4s+PPku9zYa13n7ddkWNgDEkhB9+yCMkJMQvbgEXnJW1jdnTH+bZSS0Y3DMeXcq9iBEdAai32fnL0g188lk21nqbX/Y1GoGuXbuxY+duv8YHVPDOnTuYOW0yr8yOpUfnluja/QmNIRqAC+VV/GHcfIqKS3E4nL4kBGgaC4Ft27O4+ea0JnPUNHnEr+DQoYNMnzqJ9dMt9OjaHn3HGV6x+YXnGDh8KqeLzvuIFQQY1S+Sr15oy6tzk9FKHoeUEH31WCxqYNmyp/ziGZAVLi4uZujgfiweE8bw29qi7zTde7+eLirh9pHTqbPaUBTFO6ZTKwNPjo8jtW1DnN36VTU7ci9iiRDZsqf6qnOGmEwUnjnXZK7NXmFVVZk+bTIjeuu5Kz0JffuHvGIrq2oYOW4+1no7iqIwdmALoiNEADokG+iaYvSxNTo9khdnJFFQ4mw0z+Wot/vpA/wadQlefeWfXDiXx5xMC/q2kxB0kQA4nS5Gj19IWXk1siwzoGsoT0+I583HbsAcJvHh3mqe2HS+kT2dJJBf4rjmvKqi4s/mbJbg4uJili9dwvMPRROSPBRNSJL32rOr36Sg8BwutxuAcYM9sbNdSz0b57UEYPOeajbuqPCxWVbjprpOBvDe01eCIIAsy03m3CzBL6x6hqFp4dzUuQPa+EHe9v2HjvPS6x9h/9lBJURrSe/SEDfPlbu9n5955wKH8hu258liz+qmdwnlwyWtCTeJV5xbrzcgSU0vBfwuHs6cOc37W98na/kN6FqN8vzkgNst86dZy3C6GkTdN7AFoqZhtd7eXen9fFOKgZQEHV8cvMgXB+vYdeAibZP0rJmWRJhJw/pZSUxYcRanu8HhASQkJPrF22/BG9av485eEaR0SEUT0jD5e5/spqKq1htYdZLA6PQW3uunf3Kw75jV+93uULll2kmvoJhIidfmJBNm8my+Xh1DWDElgdn/OOeN1aJGQ2pqql+8/drSbrebTz76gFF9Q5ESM7ztLpeb5as2Yrc1OJ2MtHCvZwZ4c1e1T5Jx/KzdZ/Xm3hPTKA7/vmcYLS0673edXs+wYXf6Q92/Ff56714kjYteqZ3RGOO97R/9ew91Vt8ioEdbI0cKPfeorAh8uPfq8XXFllJu6WAi6WeBp847eebdUs6WOYmOECmvkXG5XPQfcJs/1P0T/PnOLAZ3NyFF9/Bpf/v9LGx235Cy5I2fmmS7vEZm4qoi/jEzmTd2VrBlTzXtEvVsmteKxzedR6NR6du3n9/Fg19b+uiRA3RM1iGZu3rbKiqryTl47Ir9zWES62a0xKC9di0bb5YoKHGS8Vg++3+0sWZaIp8uTaHOrlB0wYkkaZk5a7Y/tAE/BR8/fpKOKXEI2lBv2649Oej1ukZ9e7Y38e9lKdyRFsZt3UIbXb8UoUYNT46Pp22inuemJPDp0tZkpIUjCPDK9nIQoM2NbejTp68/tAE/trTNZqOyupbk5JY+7UePn8J5WWEwfkgUC8bEeBOIu3pHsD3n4q/aXjQ2jv5dQhnYPYxLohjfHq3j4EkbBoOBBY8tbCplHzRZ8C/ZjTY01qf94A8ncMsebxsZJvLclEQGdPVd0QHdwgg3idTWN86Q0ruEck//SC4/wTlWZOexlz0pqMUSTcbQO5pK2QdNFixJEoIg4JB9h54tLvV+toRLfJ5bS/8uoV4Bhwts/FBoIzFaS22Rr+Awk4ZlE+N9xBaXu1j/aTnvf1WNW1YxGo3Mn78QjaZ56X+TBRsMBhLjLRScqaRVl4Z2RW4IrieLHQxODfMRsOTN8xwuuPJxztzMGBKiPLFXVlT+8up5PvqmBvclNk0mEyP/MKqpdBvBr5+ra7fu5Hyf79Mmig2mtJLAfYMaDtr+k2f1iu18g5En74/zGbv8nVKmrz3HgZOeeP3Lqv4Co9HI7EfnoNM1dopNhV+CR2eO5f0dJ1Fkl7etTeuGSml47wjizQ2b59XtlbRP0rN2ehKfPNWawTeH+9hzuFS2fVdL5lOFZD512sdhAWhEkXHjHvCHaiP4JXhIxlAMpgheWjkDV/EOVJeVnj06o9d5tuUvpSB4MqXEKC2fLW/D73t6QozuKjfS4QIbyiWpp8FoYNq0RwL2BMIvwVqtlnUbNrJqSwn5B/6F7fDT3NWtDpfb44xaxTbkwpt2VPDQsCif+7mqTrnc5K9DhcmTH/KH5hXht8vr3r07EyZNYcFrlaiyk1bGk/TqYEQrCbzwQRkAlRfd2J2qtxg4X+nm6bdKGb644Lrm0Ov1PDhhIpGRkf7SbIRmHeI5nQ4G9e/N/elO7hsYyU9VbgbNzafeobBorMcxpbU3EdtCYsO/ytn8ZXWjuvZq0Gq17D9wmLi4uGt3vk40+9Ryf24uYzKHs21ZSxKitGzdW83i137C5VaIiZS4pVMIO76rxe5q2jRarZZRo0azZu2LzaHXCAE5pl24YC4FBz5h4xxP9jVm6WkOnLThkv03LUkSX3+zj5SUNs2l54OAHMQ//tenKCzT8fE3NQA893Ai4pWPoq4Loihy++1DAi4WAiTYZDLx/Jr1LHmnkvIamcRoLQv+GItB59+jTY1Gw5y58wJBrbHtQBnq1y+doRl3suRtzwHd/UPMtE00IF2eRVwDgkYgLS2NLl26XruzHwiYYIClz6xkf4HCjpxaNAKsnpZIU3N9naTjsQWLAknLBwEVHB4ezorn1vL4G5XUWGVax+mYMdKCQXf907Ruk0Lv3rcGkpYPAioYICNjKL1uTWfZu1UATLkzipYWrc+59K/BYDSwePFfA03JBwEXDLDy+bV8cdjOVz9YkUSBNY9c39a2RFsYPPj2YFDyIiiCzeYoljz9NxZtqsBqV+jQ0sDkO8xX9doGo4GFixY3u8C/FoL6Fs+994ygpe4ET9wfjdOtMHh+AcVlLp9q6BdYLDEc/v6IX8+LmoKg/pzPr97Ax/us5JyoRydpWDM1CVFsvMqSJDFnztygi4UgC46Pj2fhoidY8FoFdpdKtxuNjBnQopHX1un0jL1vXDCpeBHcGwYYP2EisYntWP2RJyFZODaWCJPoUx9Pnz4Dg8EQbCrAb/Tq4alTBYy/PxNJvsi96XrizCJTV5/D6VYRRZHjJ/KJiIgINg0gyIJVZzVyRS5K1WEUayG5B/PY/PkZdh+oJdQgUFTmIr1bFG8uvxNNWBtEc3c05h7ed0SCgaAIVqqP4Dz9DvKFb0F1gyDhEOOothups4uU1brY9e1p3tmex8Yn+9GjNWjlMlAVBMmEGDcQbetxaExJ156siQisYNmB49gq3CVZqILEiQoLm3eX8sHOPOps7qsOtbQwct+w3zEqPZKkkPMgiOhSHkDb5kGgeS+UXorACVYV7LmzkCsPcLQkhCkrD1Nc5qRjx07065dOt+7dSUlpQ1SUmfDwCBRFpq6ujpKSEk6dOsX+3Byys7M5e7aIbjeGsWFuB2JDrWhbZaLrMDMgFD08AwTXuc/Uuqw+6raVqWpCXLT6yCNT1aNHjzR0UFyqs/Bdtf4/D6vWL0eo1j0jVVvObNVVnNXQRVHUr7/eq44ePVK9ISlKzXurt1qX1VeVa04EiqYasEhfe+5b9MDmPbW8u3kr6f37+1x35m/Edep1nzbZfgG54jvQSEhxgxAEgT59+tKnT19e37SRzV/8jXn3WHCU5WIMbxcQngGLw9/nnQFg4tiMRmIBCiqjKK9tfGJ5ugzK7JZG7eMfnMCgW9sCcOjYmUDRDNx/Hr48ZqSzWaFH1FHkilzEqJt9rn+8O4+1a07QJcVAcowOt6xSUOIkr8jOSy8XcPcNXXz6u89+TI+kGs6UOjlqC6N3gHgGbIU79hjAlL+fxeV2Yd//KI4jy1EuNhy4z503n8WPL0ET+Tv25Rs4UBRKTEovXnxxPXffPfLnXipy5SHsuY/iOLaK0hqFyc+fJa2X/0/8L0fAvLSiKIweNZKiH//L32fdRPdkO6D+nFCkoonoiMaU6HkXUwoDVUZ1W1EdZaj1xcjVR5ArclFt51ER2bZfYfHLx8m8dzLLlj8TCIpAgOOw3W5n3rw5vLdlM+2SQ5n/YCq92omYKAX1Gk8cNFqq3XHsPljHik3fUW0VmDX7UebMmdfsP3ZciqBkWjk537Fu3Vp2fb4Tl8uFOcLAoN7t6HxjFDFmE6FGj+uosTopKbNyKK+U7P/mU++QCQkJYcSIu5kxc1ZQzqWDmktXVJSTnZ3Nvn3f8uOJExQWnqKqqgqHw/Mul8lkIjraQuuU1nTq2Ik+ffvRt2+/gP8561L8JtXS5VBVNaDbtCn4H7TQCKS4b8RQAAAANXRFWHRDb21tZW50AENvbnZlcnRlZCB3aXRoIGV6Z2lmLmNvbSBTVkcgdG8gUE5HIGNvbnZlcnRlciwp4yMAAAAASUVORK5CYII=",
        "mediatype": "image/png"
    }
}
{
    "schema": "olm.channel",
    "name": "4.13",
    "package": "cluster-kube-descheduler-operator",
    "entries": [
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202304190216",
            "skipRange": ">=4.10.0 <4.13.0-202304190216"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202305220955",
            "skipRange": ">=4.10.0 <4.13.0-202305220955"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202305262054",
            "skipRange": ">=4.10.0 <4.13.0-202305262054"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202306070816",
            "skipRange": ">=4.10.0 <4.13.0-202306070816"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202307131743",
            "skipRange": ">=4.10.0 <4.13.0-202307131743"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202307170916",
            "skipRange": ">=4.10.0 <4.13.0-202307170916"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202307242035",
            "skipRange": ">=4.10.0 <4.13.0-202307242035"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202308221627",
            "skipRange": ">=4.10.0 <4.13.0-202308221627"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202308281305",
            "skipRange": ">=4.10.0 <4.13.0-202308281305"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202309181427",
            "skipRange": ">=4.10.0 <4.13.0-202309181427"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202310101544",
            "skipRange": ">=4.10.0 <4.13.0-202310101544"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202310162157",
            "skipRange": ">=4.10.0 <4.13.0-202310162157"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202310210425",
            "skipRange": ">=4.10.0 <4.13.0-202310210425"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202311021930",
            "skipRange": ">=4.10.0 <4.13.0-202311021930"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202311130830",
            "skipRange": ">=4.10.0 <4.13.0-202311130830"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202311211131",
            "skipRange": ">=4.10.0 <4.13.0-202311211131"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202401161111",
            "skipRange": ">=4.10.0 <4.13.0-202401161111"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202401292134",
            "skipRange": ">=4.10.0 <4.13.0-202401292134"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202402011837",
            "skipRange": ">=4.10.0 <4.13.0-202402011837"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202402081808",
            "skipRange": ">=4.10.0 <4.13.0-202402081808"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202404200313",
            "skipRange": ">=4.10.0 <4.13.0-202404200313"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202405141537",
            "skipRange": ">=4.10.0 <4.13.0-202405141537"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202407081338",
            "skipRange": ">=4.10.0 <4.13.0-202407081338"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202408131940",
            "skipRange": ">=4.10.0 <4.13.0-202408131940"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202408260940",
            "skipRange": ">=4.10.0 <4.13.0-202408260940"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202409240037",
            "skipRange": ">=4.10.0 <4.13.0-202409240037"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202410190100",
            "skipRange": ">=4.10.0 <4.13.0-202410190100"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202411300029",
            "skipRange": ">=4.10.0 <4.13.0-202411300029"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202502010028",
            "skipRange": ">=4.10.0 <4.13.0-202502010028"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202503111300",
            "skipRange": ">=4.10.0 <4.13.0-202503111300"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202503310300",
            "skipRange": ">=4.10.0 <4.13.0-202503310300"
        },
        {
            "name": "clusterkubedescheduleroperator.v4.13.1",
            "skips": [
                "clusterkubedescheduleroperator.4.13.0-202405141537",
                "clusterkubedescheduleroperator.4.13.0-202502010028",
                "clusterkubedescheduleroperator.4.13.0-202305220955",
                "clusterkubedescheduleroperator.4.13.0-202303281554",
                "clusterkubedescheduleroperator.4.13.0-202501180028",
                "clusterkubedescheduleroperator.4.13.0-202401231733",
                "clusterkubedescheduleroperator.4.13.0-202403080939",
                "clusterkubedescheduleroperator.4.13.0-202503121529",
                "clusterkubedescheduleroperator.4.13.0-202308221627",
                "clusterkubedescheduleroperator.4.13.0-202503170804",
                "clusterkubedescheduleroperator.4.13.0-202302091829",
                "clusterkubedescheduleroperator.4.13.0-202408131940",
                "clusterkubedescheduleroperator.4.13.0-202404200313",
                "clusterkubedescheduleroperator.4.13.0-202308281305",
                "clusterkubedescheduleroperator.4.13.0-202411300029",
                "clusterkubedescheduleroperator.4.13.0-202502150028",
                "clusterkubedescheduleroperator.4.13.0-202502220031",
                "clusterkubedescheduleroperator.4.13.0-202310162157",
                "clusterkubedescheduleroperator.4.13.0-202306070816",
                "clusterkubedescheduleroperator.4.13.0-202410190100",
                "clusterkubedescheduleroperator.4.13.0-202310101544",
                "clusterkubedescheduleroperator.4.13.0-202408211739",
                "clusterkubedescheduleroperator.4.13.0-202401161111",
                "clusterkubedescheduleroperator.4.13.0-202403051607",
                "clusterkubedescheduleroperator.4.13.0-202305262054",
                "clusterkubedescheduleroperator.4.13.0-202309181427",
                "clusterkubedescheduleroperator.4.13.0-202408260940",
                "clusterkubedescheduleroperator.4.13.0-202311130830",
                "clusterkubedescheduleroperator.4.13.0-202401292134",
                "clusterkubedescheduleroperator.4.13.0-202405222206",
                "clusterkubedescheduleroperator.4.13.0-202302061816",
                "clusterkubedescheduleroperator.4.13.0-202306261929",
                "clusterkubedescheduleroperator.4.13.0-202409240037",
                "clusterkubedescheduleroperator.4.13.0-202310210425",
                "clusterkubedescheduleroperator.4.13.0-202303231342",
                "clusterkubedescheduleroperator.4.13.0-202304190216",
                "clusterkubedescheduleroperator.4.13.0-202402081808",
                "clusterkubedescheduleroperator.4.13.0-202307131743",
                "clusterkubedescheduleroperator.4.13.0-202307170916",
                "clusterkubedescheduleroperator.4.13.0-202404030309",
                "clusterkubedescheduleroperator.4.13.0-202402011837",
                "clusterkubedescheduleroperator.4.13.0-202311021930",
                "clusterkubedescheduleroperator.4.13.0-202303180002",
                "clusterkubedescheduleroperator.4.13.0-202303301516",
                "clusterkubedescheduleroperator.4.13.0-202307242035",
                "clusterkubedescheduleroperator.4.13.0-202311211131",
                "clusterkubedescheduleroperator.4.13.0-202503111300",
                "clusterkubedescheduleroperator.4.13.0-202407081338",
                "clusterkubedescheduleroperator.4.13.0-202503310300"
            ],
            "skipRange": ">=4.10.0 <4.13.1"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "stable",
    "package": "cluster-kube-descheduler-operator",
    "entries": [
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202304190216",
            "skipRange": ">=4.10.0 <4.13.0-202304190216"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202305220955",
            "skipRange": ">=4.10.0 <4.13.0-202305220955"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202305262054",
            "skipRange": ">=4.10.0 <4.13.0-202305262054"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202306070816",
            "skipRange": ">=4.10.0 <4.13.0-202306070816"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202307131743",
            "skipRange": ">=4.10.0 <4.13.0-202307131743"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202307170916",
            "skipRange": ">=4.10.0 <4.13.0-202307170916"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202307242035",
            "skipRange": ">=4.10.0 <4.13.0-202307242035"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202308221627",
            "skipRange": ">=4.10.0 <4.13.0-202308221627"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202308281305",
            "skipRange": ">=4.10.0 <4.13.0-202308281305"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202309181427",
            "skipRange": ">=4.10.0 <4.13.0-202309181427"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202310101544",
            "skipRange": ">=4.10.0 <4.13.0-202310101544"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202310162157",
            "skipRange": ">=4.10.0 <4.13.0-202310162157"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202310210425",
            "skipRange": ">=4.10.0 <4.13.0-202310210425"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202311021930",
            "skipRange": ">=4.10.0 <4.13.0-202311021930"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202311130830",
            "skipRange": ">=4.10.0 <4.13.0-202311130830"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202311211131",
            "skipRange": ">=4.10.0 <4.13.0-202311211131"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202401161111",
            "skipRange": ">=4.10.0 <4.13.0-202401161111"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202401292134",
            "skipRange": ">=4.10.0 <4.13.0-202401292134"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202402011837",
            "skipRange": ">=4.10.0 <4.13.0-202402011837"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202402081808",
            "skipRange": ">=4.10.0 <4.13.0-202402081808"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202404200313",
            "skipRange": ">=4.10.0 <4.13.0-202404200313"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202405141537",
            "skipRange": ">=4.10.0 <4.13.0-202405141537"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202407081338",
            "skipRange": ">=4.10.0 <4.13.0-202407081338"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202408131940",
            "skipRange": ">=4.10.0 <4.13.0-202408131940"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202408260940",
            "skipRange": ">=4.10.0 <4.13.0-202408260940"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202409240037",
            "skipRange": ">=4.10.0 <4.13.0-202409240037"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202410190100",
            "skipRange": ">=4.10.0 <4.13.0-202410190100"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202411300029",
            "skipRange": ">=4.10.0 <4.13.0-202411300029"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202502010028",
            "skipRange": ">=4.10.0 <4.13.0-202502010028"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202503111300",
            "skipRange": ">=4.10.0 <4.13.0-202503111300"
        },
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202503310300",
            "skipRange": ">=4.10.0 <4.13.0-202503310300"
        },
        {
            "name": "clusterkubedescheduleroperator.v4.13.1",
            "skips": [
                "clusterkubedescheduleroperator.4.13.0-202405141537",
                "clusterkubedescheduleroperator.4.13.0-202502010028",
                "clusterkubedescheduleroperator.4.13.0-202305220955",
                "clusterkubedescheduleroperator.4.13.0-202303281554",
                "clusterkubedescheduleroperator.4.13.0-202501180028",
                "clusterkubedescheduleroperator.4.13.0-202401231733",
                "clusterkubedescheduleroperator.4.13.0-202403080939",
                "clusterkubedescheduleroperator.4.13.0-202503121529",
                "clusterkubedescheduleroperator.4.13.0-202308221627",
                "clusterkubedescheduleroperator.4.13.0-202503170804",
                "clusterkubedescheduleroperator.4.13.0-202302091829",
                "clusterkubedescheduleroperator.4.13.0-202408131940",
                "clusterkubedescheduleroperator.4.13.0-202404200313",
                "clusterkubedescheduleroperator.4.13.0-202308281305",
                "clusterkubedescheduleroperator.4.13.0-202411300029",
                "clusterkubedescheduleroperator.4.13.0-202502150028",
                "clusterkubedescheduleroperator.4.13.0-202502220031",
                "clusterkubedescheduleroperator.4.13.0-202310162157",
                "clusterkubedescheduleroperator.4.13.0-202306070816",
                "clusterkubedescheduleroperator.4.13.0-202410190100",
                "clusterkubedescheduleroperator.4.13.0-202310101544",
                "clusterkubedescheduleroperator.4.13.0-202408211739",
                "clusterkubedescheduleroperator.4.13.0-202401161111",
                "clusterkubedescheduleroperator.4.13.0-202403051607",
                "clusterkubedescheduleroperator.4.13.0-202305262054",
                "clusterkubedescheduleroperator.4.13.0-202309181427",
                "clusterkubedescheduleroperator.4.13.0-202408260940",
                "clusterkubedescheduleroperator.4.13.0-202311130830",
                "clusterkubedescheduleroperator.4.13.0-202401292134",
                "clusterkubedescheduleroperator.4.13.0-202405222206",
                "clusterkubedescheduleroperator.4.13.0-202302061816",
                "clusterkubedescheduleroperator.4.13.0-202306261929",
                "clusterkubedescheduleroperator.4.13.0-202409240037",
                "clusterkubedescheduleroperator.4.13.0-202310210425",
                "clusterkubedescheduleroperator.4.13.0-202303231342",
                "clusterkubedescheduleroperator.4.13.0-202304190216",
                "clusterkubedescheduleroperator.4.13.0-202402081808",
                "clusterkubedescheduleroperator.4.13.0-202307131743",
                "clusterkubedescheduleroperator.4.13.0-202307170916",
                "clusterkubedescheduleroperator.4.13.0-202404030309",
                "clusterkubedescheduleroperator.4.13.0-202402011837",
                "clusterkubedescheduleroperator.4.13.0-202311021930",
                "clusterkubedescheduleroperator.4.13.0-202303180002",
                "clusterkubedescheduleroperator.4.13.0-202303301516",
                "clusterkubedescheduleroperator.4.13.0-202307242035",
                "clusterkubedescheduleroperator.4.13.0-202311211131",
                "clusterkubedescheduleroperator.4.13.0-202503111300",
                "clusterkubedescheduleroperator.4.13.0-202407081338",
                "clusterkubedescheduleroperator.4.13.0-202503310300"
            ],
            "skipRange": ">=4.10.0 <4.13.1"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202304190216",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:3926dba07403d5de39868d1c58f046369822dee5a33c36bc36b432e48aa194d8",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202304190216"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:3926dba07403d5de39868d1c58f046369822dee5a33c36bc36b432e48aa194d8"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:37e919d5bef6ca3228e375ce0501e24de7453ae88f550cc8fbec0d49664b36be"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:39d7d407c59e7a2420b0207b99ab249450b18e8c553b7a4f2a8ee75e79b34a82"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202305220955",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:6c7c69739cda070c436f1a04e7a848683caf95faf5576ab255aab1b947101c9b",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202305220955"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:6c7c69739cda070c436f1a04e7a848683caf95faf5576ab255aab1b947101c9b"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:7e5af658394da01e861d0fe7018d50f75ad0c60a100bef646aa3fd04970480a0"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:39d7d407c59e7a2420b0207b99ab249450b18e8c553b7a4f2a8ee75e79b34a82"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202305262054",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:818f519064cb2d262b8ac0d5761a6dee4af5359efd18b64fee93ed9110cd3876",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202305262054"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:818f519064cb2d262b8ac0d5761a6dee4af5359efd18b64fee93ed9110cd3876"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:41ea8b52081fb997584706c77b24b8982a77e6a5f6ce9572793e78bbba55f6a5"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:cc2f6cb1288b4c2e52881b7caedf109ab788f521c39cf245136a386360f008bd"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202306070816",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:498469d3bbafde6f115fd4bd368ec51effd16cb14717f7d63fa38379a359da82",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202306070816"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:498469d3bbafde6f115fd4bd368ec51effd16cb14717f7d63fa38379a359da82"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:9f63b74b1808cca306af9150efd01ba4a332a464b66c065fab194b5af445555e"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:22e6b8892bc1d9ef7ce723c9b1d39a32b9eb531012dd2e633cca6250f92f1e6c"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202307131743",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:b65096652948111acf169bbc5bc198dc5ad044d170dcf6155aeb591380d462c4",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202307131743"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:b65096652948111acf169bbc5bc198dc5ad044d170dcf6155aeb591380d462c4"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:799b6c7b15798764eba53fe041c017efc88e3621eee73298ec5523b489e989bd"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:9ada2000ea8937ed66df2bf47640efa570abcff1751515cd561533d382df4ddc"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202307170916",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:6b45df4474cfd8be4ca58aa3b741658f7153c7046e49069c07d4375486fa097d",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202307170916"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:6b45df4474cfd8be4ca58aa3b741658f7153c7046e49069c07d4375486fa097d"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:2772decfdb34673013704c6bca667fd4e8e67068c33e30432c1c510fb2215ac8"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:9ada2000ea8937ed66df2bf47640efa570abcff1751515cd561533d382df4ddc"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202307242035",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:751fcf96ddc842dbd5d8788f45cb51e8439f6284d8094c5523c7dbc8e87de1c8",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202307242035"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:751fcf96ddc842dbd5d8788f45cb51e8439f6284d8094c5523c7dbc8e87de1c8"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:9ade64cacbc510f5a9412f015254b8d46a6a33c777d4b25581f323842447c78a"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:c098b61cec728eae74e57f883d4a8a01a5db3c0ffbe9e984581571d7d91c0cde"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202308221627",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:c5381698ab37b3286e9d10b7f5139229a3926391f193cc29d2034db054d7e016",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202308221627"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6Imt1YmVkZXNjaGVkdWxlcnMub3BlcmF0b3Iub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJvcGVyYXRvci5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiS3ViZURlc2NoZWR1bGVyIiwibGlzdEtpbmQiOiJLdWJlRGVzY2hlZHVsZXJMaXN0IiwicGx1cmFsIjoia3ViZWRlc2NoZWR1bGVycyIsInNpbmd1bGFyIjoia3ViZWRlc2NoZWR1bGVyIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiS3ViZURlc2NoZWR1bGVyIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBkZXNjaGVkdWxlcnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJzcGVjIGhvbGRzIHVzZXIgc2V0dGFibGUgdmFsdWVzIGZvciBjb25maWd1cmF0aW9uIiwicHJvcGVydGllcyI6eyJkZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMgaXMgdGhlIG51bWJlciBvZiBzZWNvbmRzIGJldHdlZW4gZGVzY2hlZHVsZXIgcnVucyIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwibG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoibG9nTGV2ZWwgaXMgYW4gaW50ZW50IGJhc2VkIGxvZ2dpbmcgZm9yIGFuIG92ZXJhbGwgY29tcG9uZW50LiAgSXQgZG9lcyBub3QgZ2l2ZSBmaW5lIGdyYWluZWQgY29udHJvbCwgYnV0IGl0IGlzIGEgc2ltcGxlIHdheSB0byBtYW5hZ2UgY29hcnNlIGdyYWluZWQgbG9nZ2luZyBjaG9pY2VzIHRoYXQgb3BlcmF0b3JzIGhhdmUgdG8gaW50ZXJwcmV0IGZvciB0aGVpciBvcGVyYW5kcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sIm1hbmFnZW1lbnRTdGF0ZSI6eyJkZXNjcmlwdGlvbiI6Im1hbmFnZW1lbnRTdGF0ZSBpbmRpY2F0ZXMgd2hldGhlciBhbmQgaG93IHRoZSBvcGVyYXRvciBzaG91bGQgbWFuYWdlIHRoZSBjb21wb25lbnQiLCJwYXR0ZXJuIjoiXihNYW5hZ2VkfFVubWFuYWdlZHxGb3JjZXxSZW1vdmVkKSQiLCJ0eXBlIjoic3RyaW5nIn0sIm1vZGUiOnsiZGVmYXVsdCI6IlByZWRpY3RpdmUiLCJkZXNjcmlwdGlvbiI6Ik1vZGUgY29uZmlndXJlcyB0aGUgZGVzY2hlZHVsZXIgdG8gZWl0aGVyIGV2aWN0IHBvZHMgKEF1dG9tYXRpYykgb3IgdG8gc2ltdWxhdGUgdGhlIGV2aWN0aW9uIChQcmVkaWN0aXZlKSIsImVudW0iOlsiQXV0b21hdGljIiwiUHJlZGljdGl2ZSJdLCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkQ29uZmlnIjp7ImRlc2NyaXB0aW9uIjoib2JzZXJ2ZWRDb25maWcgaG9sZHMgYSBzcGFyc2UgY29uZmlnIHRoYXQgY29udHJvbGxlciBoYXMgb2JzZXJ2ZWQgZnJvbSB0aGUgY2x1c3RlciBzdGF0ZS4gIEl0IGV4aXN0cyBpbiBzcGVjIGJlY2F1c2UgaXQgaXMgYW4gaW5wdXQgdG8gdGhlIGxldmVsIGZvciB0aGUgb3BlcmF0b3IiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sIm9wZXJhdG9yTG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoib3BlcmF0b3JMb2dMZXZlbCBpcyBhbiBpbnRlbnQgYmFzZWQgbG9nZ2luZyBmb3IgdGhlIG9wZXJhdG9yIGl0c2VsZi4gIEl0IGRvZXMgbm90IGdpdmUgZmluZSBncmFpbmVkIGNvbnRyb2wsIGJ1dCBpdCBpcyBhIHNpbXBsZSB3YXkgdG8gbWFuYWdlIGNvYXJzZSBncmFpbmVkIGxvZ2dpbmcgY2hvaWNlcyB0aGF0IG9wZXJhdG9ycyBoYXZlIHRvIGludGVycHJldCBmb3IgdGhlbXNlbHZlcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sInByb2ZpbGVDdXN0b21pemF0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVDdXN0b21pemF0aW9ucyBjb250YWlucyB2YXJpb3VzIHBhcmFtZXRlcnMgZm9yIG1vZGlmeWluZyB0aGUgZGVmYXVsdCBiZWhhdmlvciBvZiBjZXJ0YWluIHByb2ZpbGVzIiwicHJvcGVydGllcyI6eyJkZXZMb3dOb2RlVXRpbGl6YXRpb25UaHJlc2hvbGRzIjp7ImRlZmF1bHQiOiJNZWRpdW0iLCJkZXNjcmlwdGlvbiI6Ikxvd05vZGVVdGlsaXphdGlvblRocmVzaG9sZHMgZW51bWVyYXRlcyBwcmVkZWZpbmVkIGV4cGVyaW1lbnRhbCB0aHJlc2hvbGRzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlcyBvdmVycmlkZXMgaW5jbHVkZWQgYW5kIGV4Y2x1ZGVkIG5hbWVzcGFjZXMgd2hpbGUga2VlcGluZyB0aGUgZGVmYXVsdCBleGNsdXNpb24gb2YgYWxsIG9wZW5zaGlmdC0qLCBrdWJlLXN5c3RlbSBhbmQgaHlwZXJzaGlmdCBuYW1lc3BhY2VzIiwicHJvcGVydGllcyI6eyJleGNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJpbmNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwb2RMaWZldGltZSI6eyJkZXNjcmlwdGlvbiI6IlBvZExpZmV0aW1lIGlzIHRoZSBsZW5ndGggb2YgdGltZSBhZnRlciB3aGljaCBwb2RzIHNob3VsZCBiZSBldmljdGVkIFRoaXMgZmllbGQgc2hvdWxkIGJlIHVzZWQgd2l0aCBwcm9maWxlcyB0aGF0IGVuYWJsZSB0aGUgUG9kTGlmZXRpbWUgc3RyYXRlZ3ksIHN1Y2ggYXMgTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJmb3JtYXQiOiJkdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwidGhyZXNob2xkUHJpb3JpdHkiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidGhyZXNob2xkUHJpb3JpdHlDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eSIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicHJvZmlsZXMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlcyBzZXRzIHdoaWNoIGRlc2NoZWR1bGVyIHN0cmF0ZWd5IHByb2ZpbGVzIGFyZSBlbmFibGVkIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxlclByb2ZpbGUgYWxsb3dzIGNvbmZpZ3VyaW5nIHRoZSBlbmFibGVkIHN0cmF0ZWd5IHByb2ZpbGVzIGZvciB0aGUgZGVzY2hlZHVsZXIgaXQgYWxsb3dzIG11bHRpcGxlIHByb2ZpbGVzIHRvIGJlIGVuYWJsZWQgYXQgb25jZSwgd2hpY2ggd2lsbCBoYXZlIGN1bXVsYXRpdmUgZWZmZWN0cyBvbiB0aGUgY2x1c3Rlci4iLCJlbnVtIjpbIkFmZmluaXR5QW5kVGFpbnRzIiwiVG9wb2xvZ3lBbmREdXBsaWNhdGVzIiwiTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJEZXZQcmV2aWV3TG9uZ0xpZmVjeWNsZSIsIlNvZnRUb3BvbG9neUFuZER1cGxpY2F0ZXMiLCJFdmljdFBvZHNXaXRoTG9jYWxTdG9yYWdlIiwiRXZpY3RQb2RzV2l0aFBWQyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ1bnN1cHBvcnRlZENvbmZpZ092ZXJyaWRlcyI6eyJkZXNjcmlwdGlvbiI6InVuc3VwcG9ydGVkQ29uZmlnT3ZlcnJpZGVzIGhvbGRzIGEgc3BhcnNlIGNvbmZpZyB0aGF0IHdpbGwgb3ZlcnJpZGUgYW55IHByZXZpb3VzbHkgc2V0IG9wdGlvbnMuICBJdCBvbmx5IG5lZWRzIHRvIGJlIHRoZSBmaWVsZHMgdG8gb3ZlcnJpZGUgaXQgd2lsbCBlbmQgdXAgb3ZlcmxheWluZyBpbiB0aGUgZm9sbG93aW5nIG9yZGVyOiAxLiBoYXJkY29kZWQgZGVmYXVsdHMgMi4gb2JzZXJ2ZWRDb25maWcgMy4gdW5zdXBwb3J0ZWRDb25maWdPdmVycmlkZXMiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBob2xkcyBvYnNlcnZlZCB2YWx1ZXMgZnJvbSB0aGUgY2x1c3Rlci4gVGhleSBtYXkgbm90IGJlIG92ZXJyaWRkZW4uIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiY29uZGl0aW9ucyBpcyBhIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlaXIgc3RhdHVzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvckNvbmRpdGlvbiBpcyBqdXN0IHRoZSBzdGFuZGFyZCBjb25kaXRpb24gZmllbGRzLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiZ2VuZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJnZW5lcmF0aW9ucyBhcmUgdXNlZCB0byBkZXRlcm1pbmUgd2hlbiBhbiBpdGVtIG5lZWRzIHRvIGJlIHJlY29uY2lsZWQgb3IgaGFzIGNoYW5nZWQgaW4gYSB3YXkgdGhhdCBuZWVkcyBhIHJlYWN0aW9uLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiR2VuZXJhdGlvblN0YXR1cyBrZWVwcyB0cmFjayBvZiB0aGUgZ2VuZXJhdGlvbiBmb3IgYSBnaXZlbiByZXNvdXJjZSBzbyB0aGF0IGRlY2lzaW9ucyBhYm91dCBmb3JjZWQgdXBkYXRlcyBjYW4gYmUgbWFkZS4iLCJwcm9wZXJ0aWVzIjp7Imdyb3VwIjp7ImRlc2NyaXB0aW9uIjoiZ3JvdXAgaXMgdGhlIGdyb3VwIG9mIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmciLCJ0eXBlIjoic3RyaW5nIn0sImhhc2giOnsiZGVzY3JpcHRpb24iOiJoYXNoIGlzIGFuIG9wdGlvbmFsIGZpZWxkIHNldCBmb3IgcmVzb3VyY2VzIHdpdGhvdXQgZ2VuZXJhdGlvbiB0aGF0IGFyZSBjb250ZW50IHNlbnNpdGl2ZSBsaWtlIHNlY3JldHMgYW5kIGNvbmZpZ21hcHMiLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoibGFzdEdlbmVyYXRpb24gaXMgdGhlIGxhc3QgZ2VuZXJhdGlvbiBvZiB0aGUgd29ya2xvYWQgY29udHJvbGxlciBpbnZvbHZlZCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlIGlzIHdoZXJlIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmcgaXMiLCJ0eXBlIjoic3RyaW5nIn0sInJlc291cmNlIjp7ImRlc2NyaXB0aW9uIjoicmVzb3VyY2UgaXMgdGhlIHJlc291cmNlIHR5cGUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiBpcyB0aGUgbGFzdCBnZW5lcmF0aW9uIGNoYW5nZSB5b3UndmUgZGVhbHQgd2l0aCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwicmVhZHlSZXBsaWNhcyI6eyJkZXNjcmlwdGlvbiI6InJlYWR5UmVwbGljYXMgaW5kaWNhdGVzIGhvdyBtYW55IHJlcGxpY2FzIGFyZSByZWFkeSBhbmQgYXQgdGhlIGRlc2lyZWQgc3RhdGUiLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJ2ZXJzaW9uIGlzIHRoZSBsZXZlbCB0aGlzIGF2YWlsYWJpbGl0eSBhcHBsaWVzIHRvIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:c5381698ab37b3286e9d10b7f5139229a3926391f193cc29d2034db054d7e016"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:599bf485ab8a34c1e08ee1eeeb7623b7b39a8b3c5f0395ef4ccb24ca4da6343d"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:aa49d2e3f38fbacbcb300c725a2861814bab072da39c0eedb5700d9638bfa60d"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202308281305",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:d42c40facaade7d36f20e3d5e1be0d3cc19413e4e74f9629171166fc2e5cec03",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202308281305"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwib3BlcmF0b3Iub3BlbnNoaWZ0LmlvL3YxXCIsXG4gICAgXCJraW5kXCI6IFwiS3ViZURlc2NoZWR1bGVyXCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJjbHVzdGVyXCIsXG4gICAgICBcIm5hbWVzcGFjZVwiOiBcIm9wZW5zaGlmdC1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yXCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImRlc2NoZWR1bGluZ0ludGVydmFsU2Vjb25kc1wiOiAzNjAwLFxuICAgICAgXCJtYW5hZ2VtZW50U3RhdGVcIjogXCJNYW5hZ2VkXCIsXG4gICAgICBcIm1vZGVcIjogXCJQcmVkaWN0aXZlXCIsXG4gICAgICBcInByb2ZpbGVzXCI6IFtcIkFmZmluaXR5QW5kVGFpbnRzXCJdXG4gICAgfVxuICB9XG5dXG4iLCJjYXBhYmlsaXRpZXMiOiJCYXNpYyBJbnN0YWxsIiwiY2F0ZWdvcmllcyI6Ik9wZW5TaGlmdCBPcHRpb25hbCIsImNlcnRpZmllZCI6ImZhbHNlIiwiY29udGFpbmVySW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0NC9vc2UtY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yQHNoYTI1Njo3OTQ0MGMxOGEwOTE4MTE2MjI5MTZiZGZjNTY5YWEzMjAyZDI1MDNiOWZmMTIwNmM0NjM3Y2NkYmZlOTYxYzY5IiwiY3JlYXRlZEF0IjoiMjAyMS8xMC8xMyIsImRlc2NyaXB0aW9uIjoiQW4gb3BlcmF0b3IgdG8gcnVuIGRlc2NoZWR1bGVyIGluIE9wZW5zaGlmdCBjbHVzdGVyLiIsIm9sbS5za2lwUmFuZ2UiOiJcdTAwM2U9NC4xMC4wIFx1MDAzYzQuMTMuMC0yMDIzMDgyODEzMDUiLCJvcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3ZhbGlkLXN1YnNjcmlwdGlvbiI6IltcIk9wZW5TaGlmdCBLdWJlcm5ldGVzIEVuZ2luZVwiLCBcIk9wZW5TaGlmdCBDb250YWluZXIgUGxhdGZvcm1cIiwgXCJPcGVuU2hpZnQgUGxhdGZvcm0gUGx1c1wiXSIsInJlcG9zaXRvcnkiOiJodHRwczovL2dpdGh1Yi5jb20vb3BlbnNoaWZ0L2NsdXN0ZXIta3ViZS1kZXNjaGVkdWxlci1vcGVyYXRvciIsInN1cHBvcnQiOiJSZWQgSGF0LCBJbmMuIn0sImxhYmVscyI6eyJvcGVyYXRvcmZyYW1ld29yay5pby9hcmNoLmFtZDY0Ijoic3VwcG9ydGVkIiwib3BlcmF0b3JmcmFtZXdvcmsuaW8vYXJjaC5hcm02NCI6InN1cHBvcnRlZCIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2gucHBjNjRsZSI6InN1cHBvcnRlZCIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2guczM5MHgiOiJzdXBwb3J0ZWQifSwibmFtZSI6ImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyMzA4MjgxMzA1IiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IifSwic3BlYyI6eyJjdXN0b21yZXNvdXJjZWRlZmluaXRpb25zIjp7Im93bmVkIjpbeyJkZXNjcmlwdGlvbiI6Ikt1YmVEZXNjaGVkdWxlciBpcyB0aGUgU2NoZW1hIGZvciB0aGUgZGVzY2hlZHVsZXJzIEFQSSIsImRpc3BsYXlOYW1lIjoiS3ViZSBEZXNjaGVkdWxlciIsImdyb3VwIjoib3BlcmF0b3Iub3BlbnNoaWZ0LmlvIiwia2luZCI6Ikt1YmVEZXNjaGVkdWxlciIsIm5hbWUiOiJrdWJlZGVzY2hlZHVsZXJzLm9wZXJhdG9yLm9wZW5zaGlmdC5pbyIsInZlcnNpb24iOiJ2MSJ9XX0sImRlc2NyaXB0aW9uIjoiVGhlIEt1YmUgRGVzY2hlZHVsZXIgT3BlcmF0b3IgcHJvdmlkZXMgdGhlIGFiaWxpdHkgdG8gZXZpY3QgYSBydW5uaW5nIHBvZCBzbyB0aGF0IHRoZSBwb2QgY2FuIGJlIHJlc2NoZWR1bGVkIG9udG8gYSBtb3JlIHN1aXRhYmxlIG5vZGUuXG5cblRoZXJlIGFyZSBzZXZlcmFsIHNpdHVhdGlvbnMgd2hlcmUgZGVzY2hlZHVsaW5nIGNhbiBiZW5lZml0IHlvdXIgY2x1c3RlcjpcblxuKiBOb2RlcyBhcmUgdW5kZXJ1dGlsaXplZCBvciBvdmVydXRpbGl6ZWQuXG4qIFBvZCBhbmQgbm9kZSBhZmZpbml0eSByZXF1aXJlbWVudHMsIHN1Y2ggYXMgdGFpbnRzIG9yIGxhYmVscywgaGF2ZSBjaGFuZ2VkIGFuZCB0aGUgb3JpZ2luYWwgc2NoZWR1bGluZyBkZWNpc2lvbnMgYXJlIG5vIGxvbmdlciBhcHByb3ByaWF0ZSBmb3IgY2VydGFpbiBub2Rlcy5cbiogTm9kZSBmYWlsdXJlIHJlcXVpcmVzIHBvZHMgdG8gYmUgbW92ZWQuXG4qIE5ldyBub2RlcyBhcmUgYWRkZWQgdG8gY2x1c3RlcnMuXG5cbiMjIERlc2NoZWR1bGVyIFByb2ZpbGVzXG5cbk9uY2UgdGhlIG9wZXJhdG9yIGlzIGluc3RhbGxlZCwgeW91IGNhbiBjb25maWd1cmUgb25lIG9yIG1vcmUgcHJvZmlsZXMgdG8gaWRlbnRpZnkgcG9kcyB0byBldmljdC4gVGhlIHNjaGVkdWxlciB3aWxsIHNjaGVkdWxlIHRoZSByZXBsYWNlbWVudCBvZiB0aGUgZXZpY3RlZCBwb2RzLlxuXG5UaGUgZm9sbG93aW5nIHByb2ZpbGVzIGFyZSBhdmFpbGFibGU6XG5cbiogQWZmaW5pdHlBbmRUYWludHNcbiogVG9wb2xvZ3lBbmREdXBsaWNhdGVzXG4qIFNvZnRUb3BvbG9neUFuZER1cGxpY2F0ZXNcbiogTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb25cbiogRXZpY3RQb2RzV2l0aFBWQ1xuKiBFdmljdFBvZHNXaXRoTG9jYWxTdG9yYWdlXG5cblRoZXNlIHByb2ZpbGVzIGFyZSBkb2N1bWVudGVkIGluIGRldGFpbCBpbiB0aGUgW2Rlc2NoZWR1bGVyIG9wZXJhdG9yIFJFQURNRV0oaHR0cHM6Ly9naXRodWIuY29tL29wZW5zaGlmdC9jbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IjcHJvZmlsZXMpLlxuXG4jIyBBZGRpdGlvbmFsIFBhcmFtZXRlcnNcblxuSW4gYWRkaXRpb24gdG8gdGhlIHByb2ZpbGVzLCB0aGUgZm9sbG93aW5nIHBhcmFtZXRlcnMgY2FuIGJlIGNvbmZpZ3VyZWQ6XG5cbiogYGRlc2NoZWR1bGluZ0ludGVydmFsU2Vjb25kc2AgLSBTZXQgdGhlIG51bWJlciBvZiBzZWNvbmRzIGJldHdlZW4gZGVzY2hlZHVsZXIgcnVucy4gQSB2YWx1ZSBvZiBgMGAgaW4gdGhpcyBmaWVsZCBydW5zIHRoZSBkZXNjaGVkdWxlciBvbmNlIGFuZCBleGl0cy5cbiogYHByb2ZpbGVDdXN0b21pemF0aW9uc2AgLSBBbGxvd3MgY2VydGFpbiBwcm9maWxlIHBhcmFtZXRlcnMgdG8gYmUgdHdlYWtlZCwgc3VjaCBhcyBgcG9kTGlmZXRpbWVgIChzZWUgW1JFQURNRV0oaHR0cHM6Ly9naXRodWIuY29tL29wZW5zaGlmdC9jbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IjcHJvZmlsZS1jdXN0b21pemF0aW9ucykgZm9yIG1vcmUgaW5mbykuXG4iLCJkaXNwbGF5TmFtZSI6Ikt1YmUgRGVzY2hlZHVsZXIgT3BlcmF0b3IiLCJpY29uIjpbeyJiYXNlNjRkYXRhIjoiaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUR3QUFBQThDQVlBQUFBNi9ObHlBQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUdFUUFBQmhFQkZtdXRBZ0FBQUJKMFJWaDBVMjltZEhkaGNtVUFaWHBuYVdZdVkyOXRvTU96V0FBQURqQkpSRUZVYUlIRm0zbGdGTlVkeHorek0zdm1aSlBOVFpBZ2QrV0tRUkFJQ0Vpd0tFZ2hGaEZGam9vRnVlUVFLRlpSd0FxbzViQlFML0FHeGJNVkFvSVNVV2xOdUJRSVNFSWdrR0RJSGJMWmMyYjZ4K3FHSlFoa3MydS9mKzIrZWUvM3Z0OTliMzdIbTFsQlZWV1YveE9xS2l1cHJLcENWVlVNQmdPeHNiRm90ZHFnemlrRjFmcGxxSzJ0WmV0N1c4ajZiQ3RIamg0bklsUWlNa3lIVmhTNFdDOVRXbWtuTER5VXRMU2VETTRZenBBaEdaaE1wb0J5RUg2TEZiNXc0UUwvWEwrYWQ5OStpeUdwSVF4TDAzTnpleU02clJaQkY0RWc2a0VRUVhaU1dIU2VYZnRyeUQ2cWNPUlVQWDhjY3crUHpKeFBURXhNUUxnRVZiQ2lLTHo2eWdaZVdQVXNtZW1oVEJ3U2pzVWNpaFRkRTQzNUpzU1FaQlEwN01yTzRkUHRlOW1kbllQRDZVUW5pU2lxak94MllYZktDSUxJQStQSHMzejVDZ1JCYUJhbm9Ba3VLanJEakttVFVLeG5XREdwQmNrSlVVaHgvWkZpYmtVUURUaWRUalovdUl1VmE5L0NacmR6OFdMOXI5clNBSUpHSURvNm11eTkrekNielg3ekNvcmcvYm01akIrWHlVTjNoREFoSXhLZHBTZmFWaU1RUkNNQWUvY2Q0cytQUGt1OXpZYTEzbjdkZGtXTmdERWtoQjkreUNNa0pNUXZiZ0VYbkpXMWpkblRIK2JaU1MwWTNETWVYY3E5aUJFZEFhaTMyZm5MMGcxODhsazIxbnFiWC9ZMUdvR3VYYnV4WStkdXY4WUhWUERPblR1WU9XMHlyOHlPcFVmbmx1amEvUW1OSVJxQUMrVlYvR0hjZklxS1MzRTRuTDRrQkdnYUM0RnQyN080K2VhMEpuUFVOSG5FcitEUW9ZTk1uenFKOWRNdDlPamFIbjNIR1Y2eCtZWG5HRGg4S3FlTHp2dUlGUVFZMVMrU3IxNW95NnR6azlGS0hvZVVFSDMxV0N4cVlObXlwL3ppR1pBVkxpNHVadWpnZml3ZUU4YncyOXFpN3pUZGU3K2VMaXJoOXBIVHFiUGFVQlRGTzZaVEt3TlBqbzhqdFcxRG5OMzZWVFU3Y2k5aWlSRFpzcWY2cW5PR21Fd1Vuam5YWks3TlhtRlZWWmsrYlRJamV1dTVLejBKZmZ1SHZHSXJxMm9ZT1c0KzFubzdpcUl3ZG1BTG9pTkVBRG9rRytpYVl2U3hOVG85a2hkbkpGRlE0bXcweitXb3QvdnBBL3dhZFFsZWZlV2ZYRGlYeDV4TUMvcTJreEIwa1FBNG5TNUdqMTlJV1hrMXNpd3pvR3NvVDArSTU4M0hic0FjSnZIaDNtcWUySFMra1QyZEpKQmY0cmptdktxaTRzL21iSmJnNHVKaWxpOWR3dk1QUlJPU1BCUk5TSkwzMnJPcjM2U2c4Qnd1dHh1QWNZTTlzYk5kU3owYjU3VUVZUE9lYWpidXFQQ3hXVmJqcHJwT0J2RGUwMWVDSUlBc3kwM20zQ3pCTDZ4NmhxRnA0ZHpVdVFQYStFSGU5djJIanZQUzZ4OWgvOWxCSlVSclNlL1NFRGZQbGJ1OW41OTU1d0tIOGh1MjU4bGl6K3FtZHdubHd5V3RDVGVKVjV4YnJ6Y2dTVTB2QmZ3dUhzNmNPYzM3Vzk4bmEva042RnFOOHZ6a2dOc3Q4NmRaeTNDNkdrVGRON0FGb3FaaHRkN2VYZW45ZkZPS2daUUVIVjhjdk1nWEIrdllkZUFpYlpQMHJKbVdSSmhKdy9wWlNVeFljUmFudThIaEFTUWtKUHJGMjIvQkc5YXY0ODVlRWFSMFNFVVQwakQ1ZTUvc3BxS3ExaHRZZFpMQTZQUVczdXVuZjNLdzc1alYrOTN1VUxsbDJrbXZvSmhJaWRmbUpCTm04bXkrWGgxRFdERWxnZG4vT09lTjFhSkdRMnBxcWwrOC9kclNicmViVHo3NmdGRjlRNUVTTTd6dExwZWI1YXMyWXJjMU9KMk10SEN2WndaNGMxZTFUNUp4L0t6ZFovWG0zaFBUS0E3L3ZtY1lMUzA2NzNlZFhzK3dZWGY2UTkyL0ZmNTY3MTRrall0ZXFaM1JHT085N1IvOWV3OTFWdDhpb0VkYkkwY0tQZmVvckFoOHVQZnE4WFhGbGxKdTZXQWk2V2VCcDg0N2VlYmRVczZXT1ltT0VDbXZrWEc1WFBRZmNKcy8xUDBUL1BuT0xBWjNOeUZGOS9CcGYvdjlMR3gyMzVDeTVJMmZtbVM3dkVabTRxb2kvakV6bVRkMlZyQmxUelh0RXZWc210ZUt4emVkUjZOUjZkdTNuOS9GZzE5Yit1aVJBM1JNMWlHWnUzcmJLaXFyeVRsNDdJcjl6V0VTNjJhMHhLQzlkaTBiYjVZb0tIR1M4VmcrKzMrMHNXWmFJcDh1VGFIT3JsQjB3WWtrYVprNWE3WS90QUUvQlI4L2ZwS09LWEVJMmxCdjI2NDlPZWoxdWtaOWU3WTM4ZTlsS2R5UkZzWnQzVUliWGI4VW9VWU5UNDZQcDIyaW51ZW1KUERwMHRaa3BJVWpDUERLOW5JUW9NMk5iZWpUcDY4L3RBRS90clROWnFPeXVwYms1SlkrN1VlUG44SjVXV0V3ZmtnVUM4YkVlQk9JdTNwSHNEM240cS9hWGpRMmp2NWRRaG5ZUFl4TG9oamZIcTNqNEVrYkJvT0JCWTh0YkNwbEh6Ulo4Qy9aalRZMDFxZjk0QThuY01zZWJ4c1pKdkxjbEVRR2RQVmQwUUhkd2dnM2lkVFdOODZRMHJ1RWNrLy9TQzQvd1RsV1pPZXhsejBwcU1VU1RjYlFPNXBLMlFkTkZpeEpFb0lnNEpCOWg1NHRMdlYrdG9STGZKNWJTLzh1b1Y0Qmh3dHMvRkJvSXpGYVMyMlJyK0F3azRabEUrTjl4QmFYdTFqL2FUbnZmMVdOVzFZeEdvM01uNzhRamFaNTZYK1RCUnNNQmhMakxSU2NxYVJWbDRaMlJXNElyaWVMSFF4T0RmTVJzT1ROOHh3dXVQSnh6dHpNR0JLaVBMRlhWbFQrOHVwNVB2cW1CdmNsTmswbUV5UC9NS3FwZEJ2QnI1K3JhN2Z1NUh5Zjc5TW1pZzJtdEpMQWZZTWFEdHIrazJmMWl1MThnNUVuNzQvekdidjhuVkttcnozSGdaT2VlUDNMcXY0Q285SEk3RWZub05NMWRvcE5oVitDUjJlTzVmMGRKMUZrbDdldFRldUdTbWw0N3dqaXpRMmI1OVh0bGJSUDByTjJlaEtmUE5XYXdUZUgrOWh6dUZTMmZWZEw1bE9GWkQ1MTJzZGhBV2hFa1hIakh2Q0hhaVA0SlhoSXhsQU1wZ2hlV2prRFYvRU9WSmVWbmowNm85ZDV0dVV2cFNCNE1xWEVLQzJmTFcvRDczdDZRb3p1S2pmUzRRSWJ5aVdwcDhGb1lOcTBSd0wyQk1JdndWcXRsblViTnJKcVN3bjVCLzZGN2ZEVDNOV3REcGZiNDR4YXhUYmt3cHQyVlBEUXNDaWYrN21xVHJuYzVLOURoY21USC9LSDVoWGh0OHZyM3IwN0V5Wk5ZY0ZybGFpeWsxYkdrL1RxWUVRckNiendRUmtBbFJmZDJKMnF0eGc0WCtubTZiZEtHYjY0NExybTBPdjFQRGhoSXBHUmtmN1NiSVJtSGVJNW5RNEc5ZS9OL2VsTzdoc1l5VTlWYmdiTnphZmVvYkJvck1jeHBiVTNFZHRDWXNPL3l0bjhaWFdqdXZacTBHcTE3RDl3bUxpNHVHdDN2azQwKzlSeWYyNHVZektIczIxWlN4S2l0R3pkVzgzaTEzN0M1VmFJaVpTNHBWTUlPNzZyeGU1cTJqUmFyWlpSbzBhelp1Mkx6YUhYQ0FFNXBsMjRZQzRGQno1aDR4eFA5alZtNldrT25MVGhrdjAzTFVrU1gzK3pqNVNVTnMybDU0T0FITVEvL3RlbktDelQ4ZkUzTlFBODkzQWk0cFdQb3E0TG9paHkrKzFEQWk0V0FpVFlaREx4L0pyMUxIbW5rdklhbWNSb0xRditHSXRCNTkralRZMUd3NXk1OHdKQnJiSHRRQm5xMXkrZG9SbDNzdVJ0endIZC9VUE10RTAwSUYyZVJWd0Rna1lnTFMyTkxsMjZYcnV6SHdpWVlJQ2x6NnhrZjRIQ2pweGFOQUtzbnBaSVUzTjluYVRqc1FXTEFrbkxCd0VWSEI0ZXpvcm4xdkw0RzVYVVdHVmF4K21ZTWRLQ1FYZjkwN1J1azBMdjNyY0drcFlQQWlvWUlDTmpLTDF1VFdmWnUxVUFUTGt6aXBZV3JjKzU5Sy9CWURTd2VQRmZBMDNKQndFWERMRHkrYlY4Y2RqT1Z6OVlrVVNCTlk5YzM5YTJSRnNZUFBqMllGRHlJaWlDemVZb2xqejlOeFp0cXNCcVYralEwc0RrTzh4WDlkb0dvNEdGaXhZM3U4Qy9Gb0w2RnMrOTk0eWdwZTRFVDl3ZmpkT3RNSGgrQWNWbExwOXE2QmRZTERFYy92NklYOCtMbW9LZy9welByOTdBeC91czVKeW9SeWRwV0RNMUNWRnN2TXFTSkRGbnp0eWdpNFVnQzQ2UGoyZmhvaWRZOEZvRmRwZEt0eHVOakJuUW9wSFgxdW4wakwxdlhEQ3BlQkhjR3dZWVAyRWlzWW50V1AyUkp5RlpPRGFXQ0pQb1V4OVBuejREZzhFUWJDckFiL1RxNGFsVEJZeS9QeE5KdnNpOTZYcml6Q0pUVjUvRDZWWVJSWkhqSi9LSmlJZ0lOZzBneUlKVlp6VnlSUzVLMVdFVWF5RzVCL1BZL1BrWmRoK29KZFFnVUZUbUlyMWJGRzh1dnhOTldCdEVjM2MwNWg3ZWQwU0NnYUFJVnFxUDREejlEdktGYjBGMWd5RGhFT09vdGh1cHM0dVUxYnJZOWUxcDN0bWV4OFluKzlHak5XamxNbEFWQk1tRUdEY1FiZXR4YUV4SjE1NnNpUWlzWU5tQjQ5Z3EzQ1ZacUlMRWlRb0xtM2VYOHNIT1BPcHM3cXNPdGJRd2N0K3czekVxUFpLa2tQTWdpT2hTSGtEYjVrR2dlUytVWG9yQUNWWVY3TG16a0NzUGNMUWtoQ2tyRDFOYzVxUmp4MDcwNjVkT3QrN2RTVWxwUTFTVW1mRHdDQlJGcHE2dWpwS1NFazZkT3NYKzNCeXlzN001ZTdhSWJqZUdzV0Z1QjJKRHJXaGJaYUxyTURNZ0ZEMDhBd1RYdWMvVXVxdys2cmFWcVdwQ1hMVDZ5Q05UMWFOSGp6UjBVRnlxcy9CZHRmNC9ENnZXTDBlbzFqMGpWVnZPYk5WVm5OWFFSVkhVcjcvZXE0NGVQVks5SVNsS3pYdXJ0MXFYMVZlVmEwNEVpcVlhc0VoZmUrNWI5TURtUGJXOHUza3I2ZjM3KzF4MzVtL0VkZXAxbnpiWmZnRzU0anZRU0VoeGd4QUVnVDU5K3RLblQxOWUzN1NSelYvOGpYbjNXSENVNVdJTWJ4Y1FuZ0dMdzkvbm5RRmc0dGlNUm1JQkNpcWpLSzl0ZkdKNXVneks3SlpHN2VNZm5NQ2dXOXNDY09qWW1VRFJETngvSHI0OFpxU3pXYUZIMUZIa2lsekVxSnQ5cm4rOE80KzFhMDdRSmNWQWNvd090NnhTVU9Ja3I4ak9TeThYY1BjTlhYejZ1ODkrVEkra0dzNlVPamxxQzZOM2dIZ0diSVU3OWhqQWxMK2Z4ZVYyWWQvL0tJNGp5MUV1Tmh5NHo1MDNuOFdQTDBFVCtUdjI1UnM0VUJSS1RFb3ZYbnh4UFhmZlBmTG5YaXB5NVNIc3VZL2lPTGFLMGhxRnljK2ZKYTJYLzAvOEwwZkF2TFNpS0l3ZU5aS2lILy9MMzJmZFJQZGtPNkQrbkZDa29vbm9pTWFVNkhrWFV3b0RWVVoxVzFFZFphajF4Y2pWUjVBcmNsRnQ1MUVSMmJaZllmSEx4OG04ZHpMTGxqOFRDSXBBZ09PdzNXNW4zcnc1dkxkbE0rMlNRNW4vWUNxOTJvbVlLQVgxR2s4Y05GcXEzWEhzUGxqSGlrM2ZVVzBWbURYN1VlYk1tZGZzUDNaY2lxQmtXams1MzdGdTNWcDJmYjRUbDh1Rk9jTEFvTjd0Nkh4akZERm1FNkZHait1b3NUb3BLYk55S0srVTdQL21VKytRQ1FrSlljU0l1NWt4YzFaUXpxV0Rta3RYVkpTVG5aM052bjNmOHVPSkV4UVducUtxcWdxSHcvTXVsOGxrSWpyYVF1dVUxblRxMklrK2ZmdlJ0MisvZ1A4NTYxTDhKdFhTNVZCVk5hRGJ0Q240SDdUUUNLUzRiOFJRQUFBQU5YUkZXSFJEYjIxdFpXNTBBRU52Ym5abGNuUmxaQ0IzYVhSb0lHVjZaMmxtTG1OdmJTQlRWa2NnZEc4Z1VFNUhJR052Ym5abGNuUmxjaXdwNHlNQUFBQUFTVVZPUks1Q1lJST0iLCJtZWRpYXR5cGUiOiJpbWFnZS9wbmcifV0sImluc3RhbGwiOnsic3BlYyI6eyJjbHVzdGVyUGVybWlzc2lvbnMiOlt7InJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiY29uZmlnLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsic2NoZWR1bGVycyJdLCJ2ZXJicyI6WyJnZXQiLCJ3YXRjaCIsImxpc3QiXX0seyJhcGlHcm91cHMiOlsibW9uaXRvcmluZy5jb3Jlb3MuY29tIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlbW9uaXRvcnMiXSwidmVyYnMiOlsiKiJdfSx7ImFwaUdyb3VwcyI6WyJvcGVyYXRvci5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImt1YmVkZXNjaGVkdWxlcnMiLCJrdWJlZGVzY2hlZHVsZXJzL3N0YXR1cyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsic2VydmljZXMiLCJjb25maWdtYXBzIiwic2VjcmV0cyIsImV2ZW50cyIsInNlcnZpY2VhY2NvdW50cyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsibmFtZXNwYWNlcyIsInBvZHMiXSwidmVyYnMiOlsiZ2V0Iiwid2F0Y2giLCJsaXN0Il19LHsiYXBpR3JvdXBzIjpbInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImNsdXN0ZXJyb2xlcyIsImNsdXN0ZXJyb2xlYmluZGluZ3MiLCJyb2xlcyIsInJvbGViaW5kaW5ncyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbImFwcHMiXSwicmVzb3VyY2VzIjpbInJlcGxpY2FzZXRzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCJdfSx7ImFwaUdyb3VwcyI6WyJhcHBzIl0sInJlc291cmNlcyI6WyJkZXBsb3ltZW50cyIsImRlcGxveW1lbnRzL3NjYWxlIl0sInZlcmJzIjpbIioiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCIsImNyZWF0ZSIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJjb25maWcub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJpbmZyYXN0cnVjdHVyZXMiLCJhcGlzZXJ2ZXJzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCJdfV0sInNlcnZpY2VBY2NvdW50TmFtZSI6Im9wZW5zaGlmdC1kZXNjaGVkdWxlciJ9XSwiZGVwbG95bWVudHMiOlt7Im5hbWUiOiJkZXNjaGVkdWxlci1vcGVyYXRvciIsInNwZWMiOnsicmVwbGljYXMiOjEsInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7Im5hbWUiOiJkZXNjaGVkdWxlci1vcGVyYXRvciJ9fSwidGVtcGxhdGUiOnsibWV0YWRhdGEiOnsibGFiZWxzIjp7Im5hbWUiOiJkZXNjaGVkdWxlci1vcGVyYXRvciJ9fSwic3BlYyI6eyJjb250YWluZXJzIjpbeyJhcmdzIjpbIm9wZXJhdG9yIl0sImNvbW1hbmQiOlsiY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yIl0sImVudiI6W3sibmFtZSI6IldBVENIX05BTUVTUEFDRSIsInZhbHVlRnJvbSI6eyJmaWVsZFJlZiI6eyJmaWVsZFBhdGgiOiJtZXRhZGF0YS5uYW1lc3BhY2UifX19LHsibmFtZSI6Ik9QRVJBVE9SX05BTUUiLCJ2YWx1ZSI6ImRlc2NoZWR1bGVyLW9wZXJhdG9yIn0seyJuYW1lIjoiSU1BR0UiLCJ2YWx1ZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQ0L29zZS1kZXNjaGVkdWxlckBzaGEyNTY6ZjA5ZjExNWRkZTJiNGQ5NWVjODE1YmRhNDM2MWNjMGE2MjJmNjM3NTgzZTgxZGEyMWYwY2E1Y2ZiNTA1OWUzNCJ9XSwiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0NC9vc2UtY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yQHNoYTI1Njo3OTQ0MGMxOGEwOTE4MTE2MjI5MTZiZGZjNTY5YWEzMjAyZDI1MDNiOWZmMTIwNmM0NjM3Y2NkYmZlOTYxYzY5IiwiaW1hZ2VQdWxsUG9saWN5IjoiQWx3YXlzIiwibmFtZSI6ImRlc2NoZWR1bGVyLW9wZXJhdG9yIiwicG9ydHMiOlt7ImNvbnRhaW5lclBvcnQiOjYwMDAwLCJuYW1lIjoibWV0cmljcyJ9XSwicmVzb3VyY2VzIjp7InJlcXVlc3RzIjp7ImNwdSI6IjEwbSIsIm1lbW9yeSI6IjUwTWkifX0sInNlY3VyaXR5Q29udGV4dCI6eyJhbGxvd1ByaXZpbGVnZUVzY2FsYXRpb24iOmZhbHNlLCJjYXBhYmlsaXRpZXMiOnsiZHJvcCI6WyJBTEwiXX19fV0sInNlY3VyaXR5Q29udGV4dCI6eyJydW5Bc05vblJvb3QiOnRydWUsInNlY2NvbXBQcm9maWxlIjp7InR5cGUiOiJSdW50aW1lRGVmYXVsdCJ9fSwic2VydmljZUFjY291bnROYW1lIjoib3BlbnNoaWZ0LWRlc2NoZWR1bGVyIn19fX1dfSwic3RyYXRlZ3kiOiJkZXBsb3ltZW50In0sImluc3RhbGxNb2RlcyI6W3sic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiT3duTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOnRydWUsInR5cGUiOiJTaW5nbGVOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJNdWx0aU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6IkFsbE5hbWVzcGFjZXMifV0sImtleXdvcmRzIjpbInNjaGVkdWxpbmciLCJkZXNjaGVkdWxlciIsIndvcmtsb2FkIl0sImxhYmVscyI6eyJvbG0tb3duZXItZW50ZXJwcmlzZS1hcHAiOiJjbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IiLCJvbG0tc3RhdHVzLWRlc2NyaXB0b3JzIjoiY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yLnY0LjEzLjAifSwibGlua3MiOlt7Im5hbWUiOiJTb3VyY2UgQ29kZSIsInVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuc2hpZnQvY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yIn1dLCJtYWludGFpbmVycyI6W3siZW1haWwiOiJzdXBwb3J0QHJlZGhhdC5jb20iLCJuYW1lIjoiUmVkIEhhdCJ9XSwibWF0dXJpdHkiOiJiZXRhIiwibWluS3ViZVZlcnNpb24iOiIxLjI2LjAiLCJwcm92aWRlciI6eyJuYW1lIjoiUmVkIEhhdCwgSW5jLiJ9LCJyZWxhdGVkSW1hZ2VzIjpbeyJpbWFnZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQ0L29zZS1jbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3JAc2hhMjU2Ojc5NDQwYzE4YTA5MTgxMTYyMjkxNmJkZmM1NjlhYTMyMDJkMjUwM2I5ZmYxMjA2YzQ2MzdjY2RiZmU5NjFjNjkiLCJuYW1lIjoib3NlLWNsdXN0ZXIta3ViZS1kZXNjaGVkdWxlci1vcGVyYXRvciJ9LHsiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0NC9vc2UtZGVzY2hlZHVsZXJAc2hhMjU2OmYwOWYxMTVkZGUyYjRkOTVlYzgxNWJkYTQzNjFjYzBhNjIyZjYzNzU4M2U4MWRhMjFmMGNhNWNmYjUwNTllMzQiLCJuYW1lIjoib3NlLWRlc2NoZWR1bGVyIn1dLCJza2lwcyI6WyJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjMwMzMwMTUxNiIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyMzA2MDcwODE2IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDIzMDcxNzA5MTYiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjMwNzEzMTc0MyIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyMzAzMjgxNTU0IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDIzMDcxMDA5NTQiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjMwMzE4MDAwMiIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyMzA3MjQyMDM1IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDIzMDUyMjA5NTUiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjMwNTI2MjA1NCIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyMzA4MjIxNjI3IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDIzMDIwNjE4MTYiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjMwNjI2MTkyOSIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyMzA2MjEyMDE1IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDIzMDcwNzIxMTYiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjMwNDE5MDIxNiIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyMzAzMjMxMzQyIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDIzMDIwOTE4MjkiXSwidmVyc2lvbiI6IjQuMTMuMC0yMDIzMDgyODEzMDUifX0="
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:d42c40facaade7d36f20e3d5e1be0d3cc19413e4e74f9629171166fc2e5cec03"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:79440c18a091811622916bdfc569aa3202d2503b9ff1206c4637ccdbfe961c69"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:f09f115dde2b4d95ec815bda4361cc0a622f637583e81da21f0ca5cfb5059e34"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202309181427",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:b473fba287414d3ccb09aaabc64f463af2c912c322ca2c41723020b216d98d14",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202309181427"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:b473fba287414d3ccb09aaabc64f463af2c912c322ca2c41723020b216d98d14"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:ba0b71ff2a30a069b4a8a8f3c1e0898aaadc6db112e4cc12aff7c77ced7a0405"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:45dc69ad93ab50bdf9ce1bb79f6d98f849e320db68af30475b10b7f5497a1b13"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202310101544",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:d30dc808b26f5bd90a45ab3cc51c1cb75fe1c36e90252e01742cf0321f112b05",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202310101544"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6Imt1YmVkZXNjaGVkdWxlcnMub3BlcmF0b3Iub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJvcGVyYXRvci5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiS3ViZURlc2NoZWR1bGVyIiwibGlzdEtpbmQiOiJLdWJlRGVzY2hlZHVsZXJMaXN0IiwicGx1cmFsIjoia3ViZWRlc2NoZWR1bGVycyIsInNpbmd1bGFyIjoia3ViZWRlc2NoZWR1bGVyIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiS3ViZURlc2NoZWR1bGVyIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBkZXNjaGVkdWxlcnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJzcGVjIGhvbGRzIHVzZXIgc2V0dGFibGUgdmFsdWVzIGZvciBjb25maWd1cmF0aW9uIiwicHJvcGVydGllcyI6eyJkZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMgaXMgdGhlIG51bWJlciBvZiBzZWNvbmRzIGJldHdlZW4gZGVzY2hlZHVsZXIgcnVucyIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwibG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoibG9nTGV2ZWwgaXMgYW4gaW50ZW50IGJhc2VkIGxvZ2dpbmcgZm9yIGFuIG92ZXJhbGwgY29tcG9uZW50LiAgSXQgZG9lcyBub3QgZ2l2ZSBmaW5lIGdyYWluZWQgY29udHJvbCwgYnV0IGl0IGlzIGEgc2ltcGxlIHdheSB0byBtYW5hZ2UgY29hcnNlIGdyYWluZWQgbG9nZ2luZyBjaG9pY2VzIHRoYXQgb3BlcmF0b3JzIGhhdmUgdG8gaW50ZXJwcmV0IGZvciB0aGVpciBvcGVyYW5kcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sIm1hbmFnZW1lbnRTdGF0ZSI6eyJkZXNjcmlwdGlvbiI6Im1hbmFnZW1lbnRTdGF0ZSBpbmRpY2F0ZXMgd2hldGhlciBhbmQgaG93IHRoZSBvcGVyYXRvciBzaG91bGQgbWFuYWdlIHRoZSBjb21wb25lbnQiLCJwYXR0ZXJuIjoiXihNYW5hZ2VkfFVubWFuYWdlZHxGb3JjZXxSZW1vdmVkKSQiLCJ0eXBlIjoic3RyaW5nIn0sIm1vZGUiOnsiZGVmYXVsdCI6IlByZWRpY3RpdmUiLCJkZXNjcmlwdGlvbiI6Ik1vZGUgY29uZmlndXJlcyB0aGUgZGVzY2hlZHVsZXIgdG8gZWl0aGVyIGV2aWN0IHBvZHMgKEF1dG9tYXRpYykgb3IgdG8gc2ltdWxhdGUgdGhlIGV2aWN0aW9uIChQcmVkaWN0aXZlKSIsImVudW0iOlsiQXV0b21hdGljIiwiUHJlZGljdGl2ZSJdLCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkQ29uZmlnIjp7ImRlc2NyaXB0aW9uIjoib2JzZXJ2ZWRDb25maWcgaG9sZHMgYSBzcGFyc2UgY29uZmlnIHRoYXQgY29udHJvbGxlciBoYXMgb2JzZXJ2ZWQgZnJvbSB0aGUgY2x1c3RlciBzdGF0ZS4gIEl0IGV4aXN0cyBpbiBzcGVjIGJlY2F1c2UgaXQgaXMgYW4gaW5wdXQgdG8gdGhlIGxldmVsIGZvciB0aGUgb3BlcmF0b3IiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sIm9wZXJhdG9yTG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoib3BlcmF0b3JMb2dMZXZlbCBpcyBhbiBpbnRlbnQgYmFzZWQgbG9nZ2luZyBmb3IgdGhlIG9wZXJhdG9yIGl0c2VsZi4gIEl0IGRvZXMgbm90IGdpdmUgZmluZSBncmFpbmVkIGNvbnRyb2wsIGJ1dCBpdCBpcyBhIHNpbXBsZSB3YXkgdG8gbWFuYWdlIGNvYXJzZSBncmFpbmVkIGxvZ2dpbmcgY2hvaWNlcyB0aGF0IG9wZXJhdG9ycyBoYXZlIHRvIGludGVycHJldCBmb3IgdGhlbXNlbHZlcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sInByb2ZpbGVDdXN0b21pemF0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVDdXN0b21pemF0aW9ucyBjb250YWlucyB2YXJpb3VzIHBhcmFtZXRlcnMgZm9yIG1vZGlmeWluZyB0aGUgZGVmYXVsdCBiZWhhdmlvciBvZiBjZXJ0YWluIHByb2ZpbGVzIiwicHJvcGVydGllcyI6eyJkZXZMb3dOb2RlVXRpbGl6YXRpb25UaHJlc2hvbGRzIjp7ImRlZmF1bHQiOiJNZWRpdW0iLCJkZXNjcmlwdGlvbiI6Ikxvd05vZGVVdGlsaXphdGlvblRocmVzaG9sZHMgZW51bWVyYXRlcyBwcmVkZWZpbmVkIGV4cGVyaW1lbnRhbCB0aHJlc2hvbGRzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlcyBvdmVycmlkZXMgaW5jbHVkZWQgYW5kIGV4Y2x1ZGVkIG5hbWVzcGFjZXMgd2hpbGUga2VlcGluZyB0aGUgZGVmYXVsdCBleGNsdXNpb24gb2YgYWxsIG9wZW5zaGlmdC0qLCBrdWJlLXN5c3RlbSBhbmQgaHlwZXJzaGlmdCBuYW1lc3BhY2VzIiwicHJvcGVydGllcyI6eyJleGNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJpbmNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwb2RMaWZldGltZSI6eyJkZXNjcmlwdGlvbiI6IlBvZExpZmV0aW1lIGlzIHRoZSBsZW5ndGggb2YgdGltZSBhZnRlciB3aGljaCBwb2RzIHNob3VsZCBiZSBldmljdGVkIFRoaXMgZmllbGQgc2hvdWxkIGJlIHVzZWQgd2l0aCBwcm9maWxlcyB0aGF0IGVuYWJsZSB0aGUgUG9kTGlmZXRpbWUgc3RyYXRlZ3ksIHN1Y2ggYXMgTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJmb3JtYXQiOiJkdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwidGhyZXNob2xkUHJpb3JpdHkiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidGhyZXNob2xkUHJpb3JpdHlDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eSIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicHJvZmlsZXMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlcyBzZXRzIHdoaWNoIGRlc2NoZWR1bGVyIHN0cmF0ZWd5IHByb2ZpbGVzIGFyZSBlbmFibGVkIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxlclByb2ZpbGUgYWxsb3dzIGNvbmZpZ3VyaW5nIHRoZSBlbmFibGVkIHN0cmF0ZWd5IHByb2ZpbGVzIGZvciB0aGUgZGVzY2hlZHVsZXIgaXQgYWxsb3dzIG11bHRpcGxlIHByb2ZpbGVzIHRvIGJlIGVuYWJsZWQgYXQgb25jZSwgd2hpY2ggd2lsbCBoYXZlIGN1bXVsYXRpdmUgZWZmZWN0cyBvbiB0aGUgY2x1c3Rlci4iLCJlbnVtIjpbIkFmZmluaXR5QW5kVGFpbnRzIiwiVG9wb2xvZ3lBbmREdXBsaWNhdGVzIiwiTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJEZXZQcmV2aWV3TG9uZ0xpZmVjeWNsZSIsIlNvZnRUb3BvbG9neUFuZER1cGxpY2F0ZXMiLCJFdmljdFBvZHNXaXRoTG9jYWxTdG9yYWdlIiwiRXZpY3RQb2RzV2l0aFBWQyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ1bnN1cHBvcnRlZENvbmZpZ092ZXJyaWRlcyI6eyJkZXNjcmlwdGlvbiI6InVuc3VwcG9ydGVkQ29uZmlnT3ZlcnJpZGVzIGhvbGRzIGEgc3BhcnNlIGNvbmZpZyB0aGF0IHdpbGwgb3ZlcnJpZGUgYW55IHByZXZpb3VzbHkgc2V0IG9wdGlvbnMuICBJdCBvbmx5IG5lZWRzIHRvIGJlIHRoZSBmaWVsZHMgdG8gb3ZlcnJpZGUgaXQgd2lsbCBlbmQgdXAgb3ZlcmxheWluZyBpbiB0aGUgZm9sbG93aW5nIG9yZGVyOiAxLiBoYXJkY29kZWQgZGVmYXVsdHMgMi4gb2JzZXJ2ZWRDb25maWcgMy4gdW5zdXBwb3J0ZWRDb25maWdPdmVycmlkZXMiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBob2xkcyBvYnNlcnZlZCB2YWx1ZXMgZnJvbSB0aGUgY2x1c3Rlci4gVGhleSBtYXkgbm90IGJlIG92ZXJyaWRkZW4uIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiY29uZGl0aW9ucyBpcyBhIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlaXIgc3RhdHVzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvckNvbmRpdGlvbiBpcyBqdXN0IHRoZSBzdGFuZGFyZCBjb25kaXRpb24gZmllbGRzLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiZ2VuZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJnZW5lcmF0aW9ucyBhcmUgdXNlZCB0byBkZXRlcm1pbmUgd2hlbiBhbiBpdGVtIG5lZWRzIHRvIGJlIHJlY29uY2lsZWQgb3IgaGFzIGNoYW5nZWQgaW4gYSB3YXkgdGhhdCBuZWVkcyBhIHJlYWN0aW9uLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiR2VuZXJhdGlvblN0YXR1cyBrZWVwcyB0cmFjayBvZiB0aGUgZ2VuZXJhdGlvbiBmb3IgYSBnaXZlbiByZXNvdXJjZSBzbyB0aGF0IGRlY2lzaW9ucyBhYm91dCBmb3JjZWQgdXBkYXRlcyBjYW4gYmUgbWFkZS4iLCJwcm9wZXJ0aWVzIjp7Imdyb3VwIjp7ImRlc2NyaXB0aW9uIjoiZ3JvdXAgaXMgdGhlIGdyb3VwIG9mIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmciLCJ0eXBlIjoic3RyaW5nIn0sImhhc2giOnsiZGVzY3JpcHRpb24iOiJoYXNoIGlzIGFuIG9wdGlvbmFsIGZpZWxkIHNldCBmb3IgcmVzb3VyY2VzIHdpdGhvdXQgZ2VuZXJhdGlvbiB0aGF0IGFyZSBjb250ZW50IHNlbnNpdGl2ZSBsaWtlIHNlY3JldHMgYW5kIGNvbmZpZ21hcHMiLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoibGFzdEdlbmVyYXRpb24gaXMgdGhlIGxhc3QgZ2VuZXJhdGlvbiBvZiB0aGUgd29ya2xvYWQgY29udHJvbGxlciBpbnZvbHZlZCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlIGlzIHdoZXJlIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmcgaXMiLCJ0eXBlIjoic3RyaW5nIn0sInJlc291cmNlIjp7ImRlc2NyaXB0aW9uIjoicmVzb3VyY2UgaXMgdGhlIHJlc291cmNlIHR5cGUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiBpcyB0aGUgbGFzdCBnZW5lcmF0aW9uIGNoYW5nZSB5b3UndmUgZGVhbHQgd2l0aCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwicmVhZHlSZXBsaWNhcyI6eyJkZXNjcmlwdGlvbiI6InJlYWR5UmVwbGljYXMgaW5kaWNhdGVzIGhvdyBtYW55IHJlcGxpY2FzIGFyZSByZWFkeSBhbmQgYXQgdGhlIGRlc2lyZWQgc3RhdGUiLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJ2ZXJzaW9uIGlzIHRoZSBsZXZlbCB0aGlzIGF2YWlsYWJpbGl0eSBhcHBsaWVzIHRvIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:d30dc808b26f5bd90a45ab3cc51c1cb75fe1c36e90252e01742cf0321f112b05"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:b2f4a97f7a69027b042201b792d6143d1edce458bf2797ac9e1a12b0abe732ac"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:66e145a9ca7e8091f8633903f513dc23a035e2091f4e2276364d8a212943fb48"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202310162157",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:62fe3bbb086ee12110b36325fd648c2a146423534a03ae1f79f57e296a0b2fcb",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202310162157"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:62fe3bbb086ee12110b36325fd648c2a146423534a03ae1f79f57e296a0b2fcb"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:827627a4ecce2decd420bf549ccef3876dec43975b19ef25e58d68622f2e1894"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:49e4829b71caef78378962e936f50cea52c8fadf7deb74e5a3bb73c7f0176686"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202310210425",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:6aca47cf69d2b815c111a5042f0c4b6e574c93232277ae3c0f5b4b5f0b045678",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202310210425"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:6aca47cf69d2b815c111a5042f0c4b6e574c93232277ae3c0f5b4b5f0b045678"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:ca55539ed638bdc25ec5ab228af808cc13f5f2e59485806bf0524b73fc56f4aa"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:5d84bb6342df9a90b525560559c59fa4b9b6f529b06cccca0a4b297217fb0070"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202311021930",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:9fdb29e34d92d9c616135d63ac264e5e0ae147eaad16b040e94bec01e7f38d1a",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202311021930"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:9fdb29e34d92d9c616135d63ac264e5e0ae147eaad16b040e94bec01e7f38d1a"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:051f10daae0defca2575dfd47387d10ee81e6f4e05914fd8c01581fd06e00e74"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:5f84e92deb5a5699f8e68b5088eab6317ab22b35e351285a4bcfef18a3add03c"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202311130830",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:bb0bfefcb2eb8ac63948f5bc3011e6aae5ff3dc1c314d051381bbc02d664e3d6",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202311130830"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:bb0bfefcb2eb8ac63948f5bc3011e6aae5ff3dc1c314d051381bbc02d664e3d6"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:14eb801557bae53651b935c46f2b894495115e1eb0bbf2315d567e160ff8f4cb"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:dbed83cec58fb2f7c26aab081d407487a3c90587d4fbc3fe7fc9ac49d2b6b3ca"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202311211131",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:a1439c8b0eaf690c12f675d72af4649fb24bac9e307d981f1b0995d84b961bd9",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202311211131"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:a1439c8b0eaf690c12f675d72af4649fb24bac9e307d981f1b0995d84b961bd9"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:2d8bc2eaf87063437fb98d5149652aa09f2c0db72a23f19c8f70a5c90e4192d6"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:d5b65e1a3d15f5f6a921adacaac661b32b2916ca9608bcb98ccbd7cabd843fe0"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202401161111",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:66153788e87a2839ac639ab954bcf17003463464dffcefaa62d3220353c788f8",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202401161111"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:66153788e87a2839ac639ab954bcf17003463464dffcefaa62d3220353c788f8"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:225f39602cb51420963c7e9fd95e569093518e07de9a55b3357a9d515f61040c"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:726f1051b0eefd4a128a3a986a060211cf86f864897d02f8891b4df9612fbe37"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202401292134",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:da111203ccecf96ea74870e7a06f44588deaf696a33e3fad12f462229440fbc3",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202401292134"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6Imt1YmVkZXNjaGVkdWxlcnMub3BlcmF0b3Iub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJvcGVyYXRvci5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiS3ViZURlc2NoZWR1bGVyIiwibGlzdEtpbmQiOiJLdWJlRGVzY2hlZHVsZXJMaXN0IiwicGx1cmFsIjoia3ViZWRlc2NoZWR1bGVycyIsInNpbmd1bGFyIjoia3ViZWRlc2NoZWR1bGVyIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiS3ViZURlc2NoZWR1bGVyIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBkZXNjaGVkdWxlcnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJzcGVjIGhvbGRzIHVzZXIgc2V0dGFibGUgdmFsdWVzIGZvciBjb25maWd1cmF0aW9uIiwicHJvcGVydGllcyI6eyJkZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMgaXMgdGhlIG51bWJlciBvZiBzZWNvbmRzIGJldHdlZW4gZGVzY2hlZHVsZXIgcnVucyIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwibG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoibG9nTGV2ZWwgaXMgYW4gaW50ZW50IGJhc2VkIGxvZ2dpbmcgZm9yIGFuIG92ZXJhbGwgY29tcG9uZW50LiAgSXQgZG9lcyBub3QgZ2l2ZSBmaW5lIGdyYWluZWQgY29udHJvbCwgYnV0IGl0IGlzIGEgc2ltcGxlIHdheSB0byBtYW5hZ2UgY29hcnNlIGdyYWluZWQgbG9nZ2luZyBjaG9pY2VzIHRoYXQgb3BlcmF0b3JzIGhhdmUgdG8gaW50ZXJwcmV0IGZvciB0aGVpciBvcGVyYW5kcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sIm1hbmFnZW1lbnRTdGF0ZSI6eyJkZXNjcmlwdGlvbiI6Im1hbmFnZW1lbnRTdGF0ZSBpbmRpY2F0ZXMgd2hldGhlciBhbmQgaG93IHRoZSBvcGVyYXRvciBzaG91bGQgbWFuYWdlIHRoZSBjb21wb25lbnQiLCJwYXR0ZXJuIjoiXihNYW5hZ2VkfFVubWFuYWdlZHxGb3JjZXxSZW1vdmVkKSQiLCJ0eXBlIjoic3RyaW5nIn0sIm1vZGUiOnsiZGVmYXVsdCI6IlByZWRpY3RpdmUiLCJkZXNjcmlwdGlvbiI6Ik1vZGUgY29uZmlndXJlcyB0aGUgZGVzY2hlZHVsZXIgdG8gZWl0aGVyIGV2aWN0IHBvZHMgKEF1dG9tYXRpYykgb3IgdG8gc2ltdWxhdGUgdGhlIGV2aWN0aW9uIChQcmVkaWN0aXZlKSIsImVudW0iOlsiQXV0b21hdGljIiwiUHJlZGljdGl2ZSJdLCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkQ29uZmlnIjp7ImRlc2NyaXB0aW9uIjoib2JzZXJ2ZWRDb25maWcgaG9sZHMgYSBzcGFyc2UgY29uZmlnIHRoYXQgY29udHJvbGxlciBoYXMgb2JzZXJ2ZWQgZnJvbSB0aGUgY2x1c3RlciBzdGF0ZS4gIEl0IGV4aXN0cyBpbiBzcGVjIGJlY2F1c2UgaXQgaXMgYW4gaW5wdXQgdG8gdGhlIGxldmVsIGZvciB0aGUgb3BlcmF0b3IiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sIm9wZXJhdG9yTG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoib3BlcmF0b3JMb2dMZXZlbCBpcyBhbiBpbnRlbnQgYmFzZWQgbG9nZ2luZyBmb3IgdGhlIG9wZXJhdG9yIGl0c2VsZi4gIEl0IGRvZXMgbm90IGdpdmUgZmluZSBncmFpbmVkIGNvbnRyb2wsIGJ1dCBpdCBpcyBhIHNpbXBsZSB3YXkgdG8gbWFuYWdlIGNvYXJzZSBncmFpbmVkIGxvZ2dpbmcgY2hvaWNlcyB0aGF0IG9wZXJhdG9ycyBoYXZlIHRvIGludGVycHJldCBmb3IgdGhlbXNlbHZlcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sInByb2ZpbGVDdXN0b21pemF0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVDdXN0b21pemF0aW9ucyBjb250YWlucyB2YXJpb3VzIHBhcmFtZXRlcnMgZm9yIG1vZGlmeWluZyB0aGUgZGVmYXVsdCBiZWhhdmlvciBvZiBjZXJ0YWluIHByb2ZpbGVzIiwicHJvcGVydGllcyI6eyJkZXZMb3dOb2RlVXRpbGl6YXRpb25UaHJlc2hvbGRzIjp7ImRlZmF1bHQiOiJNZWRpdW0iLCJkZXNjcmlwdGlvbiI6Ikxvd05vZGVVdGlsaXphdGlvblRocmVzaG9sZHMgZW51bWVyYXRlcyBwcmVkZWZpbmVkIGV4cGVyaW1lbnRhbCB0aHJlc2hvbGRzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlcyBvdmVycmlkZXMgaW5jbHVkZWQgYW5kIGV4Y2x1ZGVkIG5hbWVzcGFjZXMgd2hpbGUga2VlcGluZyB0aGUgZGVmYXVsdCBleGNsdXNpb24gb2YgYWxsIG9wZW5zaGlmdC0qLCBrdWJlLXN5c3RlbSBhbmQgaHlwZXJzaGlmdCBuYW1lc3BhY2VzIiwicHJvcGVydGllcyI6eyJleGNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJpbmNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwb2RMaWZldGltZSI6eyJkZXNjcmlwdGlvbiI6IlBvZExpZmV0aW1lIGlzIHRoZSBsZW5ndGggb2YgdGltZSBhZnRlciB3aGljaCBwb2RzIHNob3VsZCBiZSBldmljdGVkIFRoaXMgZmllbGQgc2hvdWxkIGJlIHVzZWQgd2l0aCBwcm9maWxlcyB0aGF0IGVuYWJsZSB0aGUgUG9kTGlmZXRpbWUgc3RyYXRlZ3ksIHN1Y2ggYXMgTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJmb3JtYXQiOiJkdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwidGhyZXNob2xkUHJpb3JpdHkiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidGhyZXNob2xkUHJpb3JpdHlDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eSIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicHJvZmlsZXMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlcyBzZXRzIHdoaWNoIGRlc2NoZWR1bGVyIHN0cmF0ZWd5IHByb2ZpbGVzIGFyZSBlbmFibGVkIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxlclByb2ZpbGUgYWxsb3dzIGNvbmZpZ3VyaW5nIHRoZSBlbmFibGVkIHN0cmF0ZWd5IHByb2ZpbGVzIGZvciB0aGUgZGVzY2hlZHVsZXIgaXQgYWxsb3dzIG11bHRpcGxlIHByb2ZpbGVzIHRvIGJlIGVuYWJsZWQgYXQgb25jZSwgd2hpY2ggd2lsbCBoYXZlIGN1bXVsYXRpdmUgZWZmZWN0cyBvbiB0aGUgY2x1c3Rlci4iLCJlbnVtIjpbIkFmZmluaXR5QW5kVGFpbnRzIiwiVG9wb2xvZ3lBbmREdXBsaWNhdGVzIiwiTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJEZXZQcmV2aWV3TG9uZ0xpZmVjeWNsZSIsIlNvZnRUb3BvbG9neUFuZER1cGxpY2F0ZXMiLCJFdmljdFBvZHNXaXRoTG9jYWxTdG9yYWdlIiwiRXZpY3RQb2RzV2l0aFBWQyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ1bnN1cHBvcnRlZENvbmZpZ092ZXJyaWRlcyI6eyJkZXNjcmlwdGlvbiI6InVuc3VwcG9ydGVkQ29uZmlnT3ZlcnJpZGVzIGhvbGRzIGEgc3BhcnNlIGNvbmZpZyB0aGF0IHdpbGwgb3ZlcnJpZGUgYW55IHByZXZpb3VzbHkgc2V0IG9wdGlvbnMuICBJdCBvbmx5IG5lZWRzIHRvIGJlIHRoZSBmaWVsZHMgdG8gb3ZlcnJpZGUgaXQgd2lsbCBlbmQgdXAgb3ZlcmxheWluZyBpbiB0aGUgZm9sbG93aW5nIG9yZGVyOiAxLiBoYXJkY29kZWQgZGVmYXVsdHMgMi4gb2JzZXJ2ZWRDb25maWcgMy4gdW5zdXBwb3J0ZWRDb25maWdPdmVycmlkZXMiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBob2xkcyBvYnNlcnZlZCB2YWx1ZXMgZnJvbSB0aGUgY2x1c3Rlci4gVGhleSBtYXkgbm90IGJlIG92ZXJyaWRkZW4uIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiY29uZGl0aW9ucyBpcyBhIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlaXIgc3RhdHVzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvckNvbmRpdGlvbiBpcyBqdXN0IHRoZSBzdGFuZGFyZCBjb25kaXRpb24gZmllbGRzLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiZ2VuZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJnZW5lcmF0aW9ucyBhcmUgdXNlZCB0byBkZXRlcm1pbmUgd2hlbiBhbiBpdGVtIG5lZWRzIHRvIGJlIHJlY29uY2lsZWQgb3IgaGFzIGNoYW5nZWQgaW4gYSB3YXkgdGhhdCBuZWVkcyBhIHJlYWN0aW9uLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiR2VuZXJhdGlvblN0YXR1cyBrZWVwcyB0cmFjayBvZiB0aGUgZ2VuZXJhdGlvbiBmb3IgYSBnaXZlbiByZXNvdXJjZSBzbyB0aGF0IGRlY2lzaW9ucyBhYm91dCBmb3JjZWQgdXBkYXRlcyBjYW4gYmUgbWFkZS4iLCJwcm9wZXJ0aWVzIjp7Imdyb3VwIjp7ImRlc2NyaXB0aW9uIjoiZ3JvdXAgaXMgdGhlIGdyb3VwIG9mIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmciLCJ0eXBlIjoic3RyaW5nIn0sImhhc2giOnsiZGVzY3JpcHRpb24iOiJoYXNoIGlzIGFuIG9wdGlvbmFsIGZpZWxkIHNldCBmb3IgcmVzb3VyY2VzIHdpdGhvdXQgZ2VuZXJhdGlvbiB0aGF0IGFyZSBjb250ZW50IHNlbnNpdGl2ZSBsaWtlIHNlY3JldHMgYW5kIGNvbmZpZ21hcHMiLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoibGFzdEdlbmVyYXRpb24gaXMgdGhlIGxhc3QgZ2VuZXJhdGlvbiBvZiB0aGUgd29ya2xvYWQgY29udHJvbGxlciBpbnZvbHZlZCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlIGlzIHdoZXJlIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmcgaXMiLCJ0eXBlIjoic3RyaW5nIn0sInJlc291cmNlIjp7ImRlc2NyaXB0aW9uIjoicmVzb3VyY2UgaXMgdGhlIHJlc291cmNlIHR5cGUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiBpcyB0aGUgbGFzdCBnZW5lcmF0aW9uIGNoYW5nZSB5b3UndmUgZGVhbHQgd2l0aCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwicmVhZHlSZXBsaWNhcyI6eyJkZXNjcmlwdGlvbiI6InJlYWR5UmVwbGljYXMgaW5kaWNhdGVzIGhvdyBtYW55IHJlcGxpY2FzIGFyZSByZWFkeSBhbmQgYXQgdGhlIGRlc2lyZWQgc3RhdGUiLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJ2ZXJzaW9uIGlzIHRoZSBsZXZlbCB0aGlzIGF2YWlsYWJpbGl0eSBhcHBsaWVzIHRvIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:da111203ccecf96ea74870e7a06f44588deaf696a33e3fad12f462229440fbc3"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:1b6b18f720aa1364829fed4df0c5f95ec1508cececba42ed93f52a5e1441092d"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:874796280998055cee4c498c85d03290bffea3969cab554a79bf8d5fa3e9ef7e"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202402011837",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:e342ce831edf67f529727d4e5b53774a8c14f4dea5081583d7b6b286c9a5042f",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202402011837"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:e342ce831edf67f529727d4e5b53774a8c14f4dea5081583d7b6b286c9a5042f"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:435eb1b1f63fa4dabd62f3c739febc3f9ea62ff403b57a73c9a737ffdf197711"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:874796280998055cee4c498c85d03290bffea3969cab554a79bf8d5fa3e9ef7e"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202402081808",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:ae2b0d8d73f5a3ee2bc8d49400dcb17d646d6dc38faa8eb5a0b63bcbf15ecc67",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202402081808"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6Imt1YmVkZXNjaGVkdWxlcnMub3BlcmF0b3Iub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJvcGVyYXRvci5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiS3ViZURlc2NoZWR1bGVyIiwibGlzdEtpbmQiOiJLdWJlRGVzY2hlZHVsZXJMaXN0IiwicGx1cmFsIjoia3ViZWRlc2NoZWR1bGVycyIsInNpbmd1bGFyIjoia3ViZWRlc2NoZWR1bGVyIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiS3ViZURlc2NoZWR1bGVyIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBkZXNjaGVkdWxlcnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJzcGVjIGhvbGRzIHVzZXIgc2V0dGFibGUgdmFsdWVzIGZvciBjb25maWd1cmF0aW9uIiwicHJvcGVydGllcyI6eyJkZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMgaXMgdGhlIG51bWJlciBvZiBzZWNvbmRzIGJldHdlZW4gZGVzY2hlZHVsZXIgcnVucyIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwibG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoibG9nTGV2ZWwgaXMgYW4gaW50ZW50IGJhc2VkIGxvZ2dpbmcgZm9yIGFuIG92ZXJhbGwgY29tcG9uZW50LiAgSXQgZG9lcyBub3QgZ2l2ZSBmaW5lIGdyYWluZWQgY29udHJvbCwgYnV0IGl0IGlzIGEgc2ltcGxlIHdheSB0byBtYW5hZ2UgY29hcnNlIGdyYWluZWQgbG9nZ2luZyBjaG9pY2VzIHRoYXQgb3BlcmF0b3JzIGhhdmUgdG8gaW50ZXJwcmV0IGZvciB0aGVpciBvcGVyYW5kcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sIm1hbmFnZW1lbnRTdGF0ZSI6eyJkZXNjcmlwdGlvbiI6Im1hbmFnZW1lbnRTdGF0ZSBpbmRpY2F0ZXMgd2hldGhlciBhbmQgaG93IHRoZSBvcGVyYXRvciBzaG91bGQgbWFuYWdlIHRoZSBjb21wb25lbnQiLCJwYXR0ZXJuIjoiXihNYW5hZ2VkfFVubWFuYWdlZHxGb3JjZXxSZW1vdmVkKSQiLCJ0eXBlIjoic3RyaW5nIn0sIm1vZGUiOnsiZGVmYXVsdCI6IlByZWRpY3RpdmUiLCJkZXNjcmlwdGlvbiI6Ik1vZGUgY29uZmlndXJlcyB0aGUgZGVzY2hlZHVsZXIgdG8gZWl0aGVyIGV2aWN0IHBvZHMgKEF1dG9tYXRpYykgb3IgdG8gc2ltdWxhdGUgdGhlIGV2aWN0aW9uIChQcmVkaWN0aXZlKSIsImVudW0iOlsiQXV0b21hdGljIiwiUHJlZGljdGl2ZSJdLCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkQ29uZmlnIjp7ImRlc2NyaXB0aW9uIjoib2JzZXJ2ZWRDb25maWcgaG9sZHMgYSBzcGFyc2UgY29uZmlnIHRoYXQgY29udHJvbGxlciBoYXMgb2JzZXJ2ZWQgZnJvbSB0aGUgY2x1c3RlciBzdGF0ZS4gIEl0IGV4aXN0cyBpbiBzcGVjIGJlY2F1c2UgaXQgaXMgYW4gaW5wdXQgdG8gdGhlIGxldmVsIGZvciB0aGUgb3BlcmF0b3IiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sIm9wZXJhdG9yTG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoib3BlcmF0b3JMb2dMZXZlbCBpcyBhbiBpbnRlbnQgYmFzZWQgbG9nZ2luZyBmb3IgdGhlIG9wZXJhdG9yIGl0c2VsZi4gIEl0IGRvZXMgbm90IGdpdmUgZmluZSBncmFpbmVkIGNvbnRyb2wsIGJ1dCBpdCBpcyBhIHNpbXBsZSB3YXkgdG8gbWFuYWdlIGNvYXJzZSBncmFpbmVkIGxvZ2dpbmcgY2hvaWNlcyB0aGF0IG9wZXJhdG9ycyBoYXZlIHRvIGludGVycHJldCBmb3IgdGhlbXNlbHZlcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sInByb2ZpbGVDdXN0b21pemF0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVDdXN0b21pemF0aW9ucyBjb250YWlucyB2YXJpb3VzIHBhcmFtZXRlcnMgZm9yIG1vZGlmeWluZyB0aGUgZGVmYXVsdCBiZWhhdmlvciBvZiBjZXJ0YWluIHByb2ZpbGVzIiwicHJvcGVydGllcyI6eyJkZXZMb3dOb2RlVXRpbGl6YXRpb25UaHJlc2hvbGRzIjp7ImRlZmF1bHQiOiJNZWRpdW0iLCJkZXNjcmlwdGlvbiI6Ikxvd05vZGVVdGlsaXphdGlvblRocmVzaG9sZHMgZW51bWVyYXRlcyBwcmVkZWZpbmVkIGV4cGVyaW1lbnRhbCB0aHJlc2hvbGRzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlcyBvdmVycmlkZXMgaW5jbHVkZWQgYW5kIGV4Y2x1ZGVkIG5hbWVzcGFjZXMgd2hpbGUga2VlcGluZyB0aGUgZGVmYXVsdCBleGNsdXNpb24gb2YgYWxsIG9wZW5zaGlmdC0qLCBrdWJlLXN5c3RlbSBhbmQgaHlwZXJzaGlmdCBuYW1lc3BhY2VzIiwicHJvcGVydGllcyI6eyJleGNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJpbmNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwb2RMaWZldGltZSI6eyJkZXNjcmlwdGlvbiI6IlBvZExpZmV0aW1lIGlzIHRoZSBsZW5ndGggb2YgdGltZSBhZnRlciB3aGljaCBwb2RzIHNob3VsZCBiZSBldmljdGVkIFRoaXMgZmllbGQgc2hvdWxkIGJlIHVzZWQgd2l0aCBwcm9maWxlcyB0aGF0IGVuYWJsZSB0aGUgUG9kTGlmZXRpbWUgc3RyYXRlZ3ksIHN1Y2ggYXMgTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJmb3JtYXQiOiJkdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwidGhyZXNob2xkUHJpb3JpdHkiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidGhyZXNob2xkUHJpb3JpdHlDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eSIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicHJvZmlsZXMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlcyBzZXRzIHdoaWNoIGRlc2NoZWR1bGVyIHN0cmF0ZWd5IHByb2ZpbGVzIGFyZSBlbmFibGVkIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxlclByb2ZpbGUgYWxsb3dzIGNvbmZpZ3VyaW5nIHRoZSBlbmFibGVkIHN0cmF0ZWd5IHByb2ZpbGVzIGZvciB0aGUgZGVzY2hlZHVsZXIgaXQgYWxsb3dzIG11bHRpcGxlIHByb2ZpbGVzIHRvIGJlIGVuYWJsZWQgYXQgb25jZSwgd2hpY2ggd2lsbCBoYXZlIGN1bXVsYXRpdmUgZWZmZWN0cyBvbiB0aGUgY2x1c3Rlci4iLCJlbnVtIjpbIkFmZmluaXR5QW5kVGFpbnRzIiwiVG9wb2xvZ3lBbmREdXBsaWNhdGVzIiwiTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJEZXZQcmV2aWV3TG9uZ0xpZmVjeWNsZSIsIlNvZnRUb3BvbG9neUFuZER1cGxpY2F0ZXMiLCJFdmljdFBvZHNXaXRoTG9jYWxTdG9yYWdlIiwiRXZpY3RQb2RzV2l0aFBWQyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ1bnN1cHBvcnRlZENvbmZpZ092ZXJyaWRlcyI6eyJkZXNjcmlwdGlvbiI6InVuc3VwcG9ydGVkQ29uZmlnT3ZlcnJpZGVzIGhvbGRzIGEgc3BhcnNlIGNvbmZpZyB0aGF0IHdpbGwgb3ZlcnJpZGUgYW55IHByZXZpb3VzbHkgc2V0IG9wdGlvbnMuICBJdCBvbmx5IG5lZWRzIHRvIGJlIHRoZSBmaWVsZHMgdG8gb3ZlcnJpZGUgaXQgd2lsbCBlbmQgdXAgb3ZlcmxheWluZyBpbiB0aGUgZm9sbG93aW5nIG9yZGVyOiAxLiBoYXJkY29kZWQgZGVmYXVsdHMgMi4gb2JzZXJ2ZWRDb25maWcgMy4gdW5zdXBwb3J0ZWRDb25maWdPdmVycmlkZXMiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBob2xkcyBvYnNlcnZlZCB2YWx1ZXMgZnJvbSB0aGUgY2x1c3Rlci4gVGhleSBtYXkgbm90IGJlIG92ZXJyaWRkZW4uIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiY29uZGl0aW9ucyBpcyBhIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlaXIgc3RhdHVzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvckNvbmRpdGlvbiBpcyBqdXN0IHRoZSBzdGFuZGFyZCBjb25kaXRpb24gZmllbGRzLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiZ2VuZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJnZW5lcmF0aW9ucyBhcmUgdXNlZCB0byBkZXRlcm1pbmUgd2hlbiBhbiBpdGVtIG5lZWRzIHRvIGJlIHJlY29uY2lsZWQgb3IgaGFzIGNoYW5nZWQgaW4gYSB3YXkgdGhhdCBuZWVkcyBhIHJlYWN0aW9uLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiR2VuZXJhdGlvblN0YXR1cyBrZWVwcyB0cmFjayBvZiB0aGUgZ2VuZXJhdGlvbiBmb3IgYSBnaXZlbiByZXNvdXJjZSBzbyB0aGF0IGRlY2lzaW9ucyBhYm91dCBmb3JjZWQgdXBkYXRlcyBjYW4gYmUgbWFkZS4iLCJwcm9wZXJ0aWVzIjp7Imdyb3VwIjp7ImRlc2NyaXB0aW9uIjoiZ3JvdXAgaXMgdGhlIGdyb3VwIG9mIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmciLCJ0eXBlIjoic3RyaW5nIn0sImhhc2giOnsiZGVzY3JpcHRpb24iOiJoYXNoIGlzIGFuIG9wdGlvbmFsIGZpZWxkIHNldCBmb3IgcmVzb3VyY2VzIHdpdGhvdXQgZ2VuZXJhdGlvbiB0aGF0IGFyZSBjb250ZW50IHNlbnNpdGl2ZSBsaWtlIHNlY3JldHMgYW5kIGNvbmZpZ21hcHMiLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoibGFzdEdlbmVyYXRpb24gaXMgdGhlIGxhc3QgZ2VuZXJhdGlvbiBvZiB0aGUgd29ya2xvYWQgY29udHJvbGxlciBpbnZvbHZlZCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlIGlzIHdoZXJlIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmcgaXMiLCJ0eXBlIjoic3RyaW5nIn0sInJlc291cmNlIjp7ImRlc2NyaXB0aW9uIjoicmVzb3VyY2UgaXMgdGhlIHJlc291cmNlIHR5cGUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiBpcyB0aGUgbGFzdCBnZW5lcmF0aW9uIGNoYW5nZSB5b3UndmUgZGVhbHQgd2l0aCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwicmVhZHlSZXBsaWNhcyI6eyJkZXNjcmlwdGlvbiI6InJlYWR5UmVwbGljYXMgaW5kaWNhdGVzIGhvdyBtYW55IHJlcGxpY2FzIGFyZSByZWFkeSBhbmQgYXQgdGhlIGRlc2lyZWQgc3RhdGUiLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJ2ZXJzaW9uIGlzIHRoZSBsZXZlbCB0aGlzIGF2YWlsYWJpbGl0eSBhcHBsaWVzIHRvIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:ae2b0d8d73f5a3ee2bc8d49400dcb17d646d6dc38faa8eb5a0b63bcbf15ecc67"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:7017a3cc93f0bf3e8f89bee074f490f785d4b48573e64335cbfe1840fcf23774"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:874796280998055cee4c498c85d03290bffea3969cab554a79bf8d5fa3e9ef7e"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202404200313",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:d7cea334b29cd397e3b5d67e626426d7d74f630e856796a4e7f5b45a20781773",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202404200313"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:d7cea334b29cd397e3b5d67e626426d7d74f630e856796a4e7f5b45a20781773"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:b51e52875c21b2faaa7262b2bbbe99993156cb668f5a34df377872e1b79e8c1f"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:347acd9f77e580e0826fcb2460846c4d79c3ee73f1a4ebe384aa1de199bb9fba"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202405141537",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:712dbbd86d5ccafec9881419fa207254a2f1d400f91001cf94844c55a3d43cfd",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202405141537"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:712dbbd86d5ccafec9881419fa207254a2f1d400f91001cf94844c55a3d43cfd"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:6c72f48034c9ce540ef5f5161c4bff3a7d3dc45b9cec988abe943b2da363ffbf"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:72603e2d5dd1c825a019649eea9a74bbc2ff22085e172d65c08081a1c37899e4"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202407081338",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:6eef7d35c5145bf1f099bd40a5ec2b654f91fc1220fd0b4aeddadecae8b45938",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202407081338"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwib3BlcmF0b3Iub3BlbnNoaWZ0LmlvL3YxXCIsXG4gICAgXCJraW5kXCI6IFwiS3ViZURlc2NoZWR1bGVyXCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJjbHVzdGVyXCIsXG4gICAgICBcIm5hbWVzcGFjZVwiOiBcIm9wZW5zaGlmdC1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yXCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImRlc2NoZWR1bGluZ0ludGVydmFsU2Vjb25kc1wiOiAzNjAwLFxuICAgICAgXCJtYW5hZ2VtZW50U3RhdGVcIjogXCJNYW5hZ2VkXCIsXG4gICAgICBcIm1vZGVcIjogXCJQcmVkaWN0aXZlXCIsXG4gICAgICBcInByb2ZpbGVzXCI6IFtcIkFmZmluaXR5QW5kVGFpbnRzXCJdXG4gICAgfVxuICB9XG5dXG4iLCJjYXBhYmlsaXRpZXMiOiJCYXNpYyBJbnN0YWxsIiwiY2F0ZWdvcmllcyI6Ik9wZW5TaGlmdCBPcHRpb25hbCIsImNlcnRpZmllZCI6ImZhbHNlIiwiY29udGFpbmVySW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0NC9vc2UtY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yQHNoYTI1NjoxYWNkMTQ0ZjU2YTI1NmY1ZTZjMWVhYzQ2OGZlMGViNzNhMjk4MzQzMzgxY2M5MWM0MjBjMzkzM2M5MGQ5NzM1IiwiY3JlYXRlZEF0IjoiMjAyMS8xMC8xMyIsImRlc2NyaXB0aW9uIjoiQW4gb3BlcmF0b3IgdG8gcnVuIGRlc2NoZWR1bGVyIGluIE9wZW5zaGlmdCBjbHVzdGVyLiIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vY25mIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL2NuaSI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9jc2kiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vZGlzY29ubmVjdGVkIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL2ZpcHMtY29tcGxpYW50IjoidHJ1ZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vcHJveHktYXdhcmUiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdGxzLXByb2ZpbGVzIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3Rva2VuLWF1dGgtYXdzIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3Rva2VuLWF1dGgtYXp1cmUiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdG9rZW4tYXV0aC1nY3AiOiJmYWxzZSIsIm9sbS5za2lwUmFuZ2UiOiJcdTAwM2U9NC4xMC4wIFx1MDAzYzQuMTMuMC0yMDI0MDcwODEzMzgiLCJvcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3ZhbGlkLXN1YnNjcmlwdGlvbiI6IltcIk9wZW5TaGlmdCBLdWJlcm5ldGVzIEVuZ2luZVwiLCBcIk9wZW5TaGlmdCBDb250YWluZXIgUGxhdGZvcm1cIiwgXCJPcGVuU2hpZnQgUGxhdGZvcm0gUGx1c1wiXSIsInJlcG9zaXRvcnkiOiJodHRwczovL2dpdGh1Yi5jb20vb3BlbnNoaWZ0L2NsdXN0ZXIta3ViZS1kZXNjaGVkdWxlci1vcGVyYXRvciIsInN1cHBvcnQiOiJSZWQgSGF0LCBJbmMuIn0sImxhYmVscyI6eyJvcGVyYXRvcmZyYW1ld29yay5pby9hcmNoLmFtZDY0Ijoic3VwcG9ydGVkIiwib3BlcmF0b3JmcmFtZXdvcmsuaW8vYXJjaC5hcm02NCI6InN1cHBvcnRlZCIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2gucHBjNjRsZSI6InN1cHBvcnRlZCIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2guczM5MHgiOiJzdXBwb3J0ZWQifSwibmFtZSI6ImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyNDA3MDgxMzM4IiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IifSwic3BlYyI6eyJjdXN0b21yZXNvdXJjZWRlZmluaXRpb25zIjp7Im93bmVkIjpbeyJkZXNjcmlwdGlvbiI6Ikt1YmVEZXNjaGVkdWxlciBpcyB0aGUgU2NoZW1hIGZvciB0aGUgZGVzY2hlZHVsZXJzIEFQSSIsImRpc3BsYXlOYW1lIjoiS3ViZSBEZXNjaGVkdWxlciIsImdyb3VwIjoib3BlcmF0b3Iub3BlbnNoaWZ0LmlvIiwia2luZCI6Ikt1YmVEZXNjaGVkdWxlciIsIm5hbWUiOiJrdWJlZGVzY2hlZHVsZXJzLm9wZXJhdG9yLm9wZW5zaGlmdC5pbyIsInZlcnNpb24iOiJ2MSJ9XX0sImRlc2NyaXB0aW9uIjoiVGhlIEt1YmUgRGVzY2hlZHVsZXIgT3BlcmF0b3IgcHJvdmlkZXMgdGhlIGFiaWxpdHkgdG8gZXZpY3QgYSBydW5uaW5nIHBvZCBzbyB0aGF0IHRoZSBwb2QgY2FuIGJlIHJlc2NoZWR1bGVkIG9udG8gYSBtb3JlIHN1aXRhYmxlIG5vZGUuXG5cblRoZXJlIGFyZSBzZXZlcmFsIHNpdHVhdGlvbnMgd2hlcmUgZGVzY2hlZHVsaW5nIGNhbiBiZW5lZml0IHlvdXIgY2x1c3RlcjpcblxuKiBOb2RlcyBhcmUgdW5kZXJ1dGlsaXplZCBvciBvdmVydXRpbGl6ZWQuXG4qIFBvZCBhbmQgbm9kZSBhZmZpbml0eSByZXF1aXJlbWVudHMsIHN1Y2ggYXMgdGFpbnRzIG9yIGxhYmVscywgaGF2ZSBjaGFuZ2VkIGFuZCB0aGUgb3JpZ2luYWwgc2NoZWR1bGluZyBkZWNpc2lvbnMgYXJlIG5vIGxvbmdlciBhcHByb3ByaWF0ZSBmb3IgY2VydGFpbiBub2Rlcy5cbiogTm9kZSBmYWlsdXJlIHJlcXVpcmVzIHBvZHMgdG8gYmUgbW92ZWQuXG4qIE5ldyBub2RlcyBhcmUgYWRkZWQgdG8gY2x1c3RlcnMuXG5cbiMjIERlc2NoZWR1bGVyIFByb2ZpbGVzXG5cbk9uY2UgdGhlIG9wZXJhdG9yIGlzIGluc3RhbGxlZCwgeW91IGNhbiBjb25maWd1cmUgb25lIG9yIG1vcmUgcHJvZmlsZXMgdG8gaWRlbnRpZnkgcG9kcyB0byBldmljdC4gVGhlIHNjaGVkdWxlciB3aWxsIHNjaGVkdWxlIHRoZSByZXBsYWNlbWVudCBvZiB0aGUgZXZpY3RlZCBwb2RzLlxuXG5UaGUgZm9sbG93aW5nIHByb2ZpbGVzIGFyZSBhdmFpbGFibGU6XG5cbiogQWZmaW5pdHlBbmRUYWludHNcbiogVG9wb2xvZ3lBbmREdXBsaWNhdGVzXG4qIFNvZnRUb3BvbG9neUFuZER1cGxpY2F0ZXNcbiogTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb25cbiogRXZpY3RQb2RzV2l0aFBWQ1xuKiBFdmljdFBvZHNXaXRoTG9jYWxTdG9yYWdlXG5cblRoZXNlIHByb2ZpbGVzIGFyZSBkb2N1bWVudGVkIGluIGRldGFpbCBpbiB0aGUgW2Rlc2NoZWR1bGVyIG9wZXJhdG9yIFJFQURNRV0oaHR0cHM6Ly9naXRodWIuY29tL29wZW5zaGlmdC9jbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IjcHJvZmlsZXMpLlxuXG4jIyBBZGRpdGlvbmFsIFBhcmFtZXRlcnNcblxuSW4gYWRkaXRpb24gdG8gdGhlIHByb2ZpbGVzLCB0aGUgZm9sbG93aW5nIHBhcmFtZXRlcnMgY2FuIGJlIGNvbmZpZ3VyZWQ6XG5cbiogYGRlc2NoZWR1bGluZ0ludGVydmFsU2Vjb25kc2AgLSBTZXQgdGhlIG51bWJlciBvZiBzZWNvbmRzIGJldHdlZW4gZGVzY2hlZHVsZXIgcnVucy4gQSB2YWx1ZSBvZiBgMGAgaW4gdGhpcyBmaWVsZCBydW5zIHRoZSBkZXNjaGVkdWxlciBvbmNlIGFuZCBleGl0cy5cbiogYHByb2ZpbGVDdXN0b21pemF0aW9uc2AgLSBBbGxvd3MgY2VydGFpbiBwcm9maWxlIHBhcmFtZXRlcnMgdG8gYmUgdHdlYWtlZCwgc3VjaCBhcyBgcG9kTGlmZXRpbWVgIChzZWUgW1JFQURNRV0oaHR0cHM6Ly9naXRodWIuY29tL29wZW5zaGlmdC9jbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IjcHJvZmlsZS1jdXN0b21pemF0aW9ucykgZm9yIG1vcmUgaW5mbykuXG4iLCJkaXNwbGF5TmFtZSI6Ikt1YmUgRGVzY2hlZHVsZXIgT3BlcmF0b3IiLCJpY29uIjpbeyJiYXNlNjRkYXRhIjoiaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUR3QUFBQThDQVlBQUFBNi9ObHlBQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUdFUUFBQmhFQkZtdXRBZ0FBQUJKMFJWaDBVMjltZEhkaGNtVUFaWHBuYVdZdVkyOXRvTU96V0FBQURqQkpSRUZVYUlIRm0zbGdGTlVkeHorek0zdm1aSlBOVFpBZ2QrV0tRUkFJQ0Vpd0tFZ2hGaEZGam9vRnVlUVFLRlpSd0FxbzViQlFML0FHeGJNVkFvSVNVV2xOdUJRSVNFSWdrR0RJSGJMWmMyYjZ4K3FHSlFoa3MydS9mKzIrZWUvM3Z0OTliMzdIbTFsQlZWV1YveE9xS2l1cHJLcENWVlVNQmdPeHNiRm90ZHFnemlrRjFmcGxxSzJ0WmV0N1c4ajZiQ3RIamg0bklsUWlNa3lIVmhTNFdDOVRXbWtuTER5VXRMU2VETTRZenBBaEdaaE1wb0J5RUg2TEZiNXc0UUwvWEwrYWQ5OStpeUdwSVF4TDAzTnpleU02clJaQkY0RWc2a0VRUVhaU1dIU2VYZnRyeUQ2cWNPUlVQWDhjY3crUHpKeFBURXhNUUxnRVZiQ2lLTHo2eWdaZVdQVXNtZW1oVEJ3U2pzVWNpaFRkRTQzNUpzU1FaQlEwN01yTzRkUHRlOW1kbllQRDZVUW5pU2lxak94MllYZktDSUxJQStQSHMzejVDZ1JCYUJhbm9Ba3VLanJEakttVFVLeG5XREdwQmNrSlVVaHgvWkZpYmtVUURUaWRUalovdUl1VmE5L0NacmR6OFdMOXI5clNBSUpHSURvNm11eTkrekNielg3ekNvcmcvYm01akIrWHlVTjNoREFoSXhLZHBTZmFWaU1RUkNNQWUvY2Q0cytQUGt1OXpZYTEzbjdkZGtXTmdERWtoQjkreUNNa0pNUXZiZ0VYbkpXMWpkblRIK2JaU1MwWTNETWVYY3E5aUJFZEFhaTMyZm5MMGcxODhsazIxbnFiWC9ZMUdvR3VYYnV4WStkdXY4WUhWUERPblR1WU9XMHlyOHlPcFVmbmx1amEvUW1OSVJxQUMrVlYvR0hjZklxS1MzRTRuTDRrQkdnYUM0RnQyN080K2VhMEpuUFVOSG5FcitEUW9ZTk1uenFKOWRNdDlPamFIbjNIR1Y2eCtZWG5HRGg4S3FlTHp2dUlGUVFZMVMrU3IxNW95NnR6azlGS0hvZVVFSDMxV0N4cVlObXlwL3ppR1pBVkxpNHVadWpnZml3ZUU4YncyOXFpN3pUZGU3K2VMaXJoOXBIVHFiUGFVQlRGTzZaVEt3TlBqbzhqdFcxRG5OMzZWVFU3Y2k5aWlSRFpzcWY2cW5PR21Fd1Vuam5YWks3TlhtRlZWWmsrYlRJamV1dTVLejBKZmZ1SHZHSXJxMm9ZT1c0KzFubzdpcUl3ZG1BTG9pTkVBRG9rRytpYVl2U3hOVG85a2hkbkpGRlE0bXcweitXb3QvdnBBL3dhZFFsZWZlV2ZYRGlYeDV4TUMvcTJreEIwa1FBNG5TNUdqMTlJV1hrMXNpd3pvR3NvVDArSTU4M0hic0FjSnZIaDNtcWUySFMra1QyZEpKQmY0cmptdktxaTRzL21iSmJnNHVKaWxpOWR3dk1QUlJPU1BCUk5TSkwzMnJPcjM2U2c4Qnd1dHh1QWNZTTlzYk5kU3owYjU3VUVZUE9lYWpidXFQQ3hXVmJqcHJwT0J2RGUwMWVDSUlBc3kwM20zQ3pCTDZ4NmhxRnA0ZHpVdVFQYStFSGU5djJIanZQUzZ4OWgvOWxCSlVSclNlL1NFRGZQbGJ1OW41OTU1d0tIOGh1MjU4bGl6K3FtZHdubHd5V3RDVGVKVjV4YnJ6Y2dTVTB2QmZ3dUhzNmNPYzM3Vzk4bmEva042RnFOOHZ6a2dOc3Q4NmRaeTNDNkdrVGRON0FGb3FaaHRkN2VYZW45ZkZPS2daUUVIVjhjdk1nWEIrdllkZUFpYlpQMHJKbVdSSmhKdy9wWlNVeFljUmFudThIaEFTUWtKUHJGMjIvQkc5YXY0ODVlRWFSMFNFVVQwakQ1ZTUvc3BxS3ExaHRZZFpMQTZQUVczdXVuZjNLdzc1alYrOTN1VUxsbDJrbXZvSmhJaWRmbUpCTm04bXkrWGgxRFdERWxnZG4vT09lTjFhSkdRMnBxcWwrOC9kclNicmViVHo3NmdGRjlRNUVTTTd6dExwZWI1YXMyWXJjMU9KMk10SEN2WndaNGMxZTFUNUp4L0t6ZFovWG0zaFBUS0E3L3ZtY1lMUzA2NzNlZFhzK3dZWGY2UTkyL0ZmNTY3MTRrall0ZXFaM1JHT085N1IvOWV3OTFWdDhpb0VkYkkwY0tQZmVvckFoOHVQZnE4WFhGbGxKdTZXQWk2V2VCcDg0N2VlYmRVczZXT1ltT0VDbXZrWEc1WFBRZmNKcy8xUDBUL1BuT0xBWjNOeUZGOS9CcGYvdjlMR3gyMzVDeTVJMmZtbVM3dkVabTRxb2kvakV6bVRkMlZyQmxUelh0RXZWc210ZUt4emVkUjZOUjZkdTNuOS9GZzE5Yit1aVJBM1JNMWlHWnUzcmJLaXFyeVRsNDdJcjl6V0VTNjJhMHhLQzlkaTBiYjVZb0tIR1M4VmcrKzMrMHNXWmFJcDh1VGFIT3JsQjB3WWtrYVprNWE3WS90QUUvQlI4L2ZwS09LWEVJMmxCdjI2NDlPZWoxdWtaOWU3WTM4ZTlsS2R5UkZzWnQzVUliWGI4VW9VWU5UNDZQcDIyaW51ZW1KUERwMHRaa3BJVWpDUERLOW5JUW9NMk5iZWpUcDY4L3RBRS90clROWnFPeXVwYms1SlkrN1VlUG44SjVXV0V3ZmtnVUM4YkVlQk9JdTNwSHNEM240cS9hWGpRMmp2NWRRaG5ZUFl4TG9oamZIcTNqNEVrYkJvT0JCWTh0YkNwbEh6Ulo4Qy9aalRZMDFxZjk0QThuY01zZWJ4c1pKdkxjbEVRR2RQVmQwUUhkd2dnM2lkVFdOODZRMHJ1RWNrLy9TQzQvd1RsV1pPZXhsejBwcU1VU1RjYlFPNXBLMlFkTkZpeEpFb0lnNEpCOWg1NHRMdlYrdG9STGZKNWJTLzh1b1Y0Qmh3dHMvRkJvSXpGYVMyMlJyK0F3azRabEUrTjl4QmFYdTFqL2FUbnZmMVdOVzFZeEdvM01uNzhRamFaNTZYK1RCUnNNQmhMakxSU2NxYVJWbDRaMlJXNElyaWVMSFF4T0RmTVJzT1ROOHh3dXVQSnh6dHpNR0JLaVBMRlhWbFQrOHVwNVB2cW1CdmNsTmswbUV5UC9NS3FwZEJ2QnI1K3JhN2Z1NUh5Zjc5TW1pZzJtdEpMQWZZTWFEdHIrazJmMWl1MThnNUVuNzQvekdidjhuVkttcnozSGdaT2VlUDNMcXY0Q285SEk3RWZub05NMWRvcE5oVitDUjJlTzVmMGRKMUZrbDdldFRldUdTbWw0N3dqaXpRMmI1OVh0bGJSUDByTjJlaEtmUE5XYXdUZUgrOWh6dUZTMmZWZEw1bE9GWkQ1MTJzZGhBV2hFa1hIakh2Q0hhaVA0SlhoSXhsQU1wZ2hlV2prRFYvRU9WSmVWbmowNm85ZDV0dVV2cFNCNE1xWEVLQzJmTFcvRDczdDZRb3p1S2pmUzRRSWJ5aVdwcDhGb1lOcTBSd0wyQk1JdndWcXRsblViTnJKcVN3bjVCLzZGN2ZEVDNOV3REcGZiNDR4YXhUYmt3cHQyVlBEUXNDaWYrN21xVHJuYzVLOURoY21USC9LSDVoWGh0OHZyM3IwN0V5Wk5ZY0ZybGFpeWsxYkdrL1RxWUVRckNiendRUmtBbFJmZDJKMnF0eGc0WCtubTZiZEtHYjY0NExybTBPdjFQRGhoSXBHUmtmN1NiSVJtSGVJNW5RNEc5ZS9OL2VsTzdoc1l5VTlWYmdiTnphZmVvYkJvck1jeHBiVTNFZHRDWXNPL3l0bjhaWFdqdXZacTBHcTE3RDl3bUxpNHVHdDN2azQwKzlSeWYyNHVZektIczIxWlN4S2l0R3pkVzgzaTEzN0M1VmFJaVpTNHBWTUlPNzZyeGU1cTJqUmFyWlpSbzBhelp1Mkx6YUhYQ0FFNXBsMjRZQzRGQno1aDR4eFA5alZtNldrT25MVGhrdjAzTFVrU1gzK3pqNVNVTnMybDU0T0FITVEvL3RlbktDelQ4ZkUzTlFBODkzQWk0cFdQb3E0TG9paHkrKzFEQWk0V0FpVFlaREx4L0pyMUxIbW5rdklhbWNSb0xRditHSXRCNTkralRZMUd3NXk1OHdKQnJiSHRRQm5xMXkrZG9SbDNzdVJ0endIZC9VUE10RTAwSUYyZVJWd0Rna1lnTFMyTkxsMjZYcnV6SHdpWVlJQ2x6NnhrZjRIQ2pweGFOQUtzbnBaSVUzTjluYVRqc1FXTEFrbkxCd0VWSEI0ZXpvcm4xdkw0RzVYVVdHVmF4K21ZTWRLQ1FYZjkwN1J1azBMdjNyY0drcFlQQWlvWUlDTmpLTDF1VFdmWnUxVUFUTGt6aXBZV3JjKzU5Sy9CWURTd2VQRmZBMDNKQndFWERMRHkrYlY4Y2RqT1Z6OVlrVVNCTlk5YzM5YTJSRnNZUFBqMllGRHlJaWlDemVZb2xqejlOeFp0cXNCcVYralEwc0RrTzh4WDlkb0dvNEdGaXhZM3U4Qy9Gb0w2RnMrOTk0eWdwZTRFVDl3ZmpkT3RNSGgrQWNWbExwOXE2QmRZTERFYy92NklYOCtMbW9LZy9welByOTdBeC91czVKeW9SeWRwV0RNMUNWRnN2TXFTSkRGbnp0eWdpNFVnQzQ2UGoyZmhvaWRZOEZvRmRwZEt0eHVOakJuUW9wSFgxdW4wakwxdlhEQ3BlQkhjR3dZWVAyRWlzWW50V1AyUkp5RlpPRGFXQ0pQb1V4OVBuejREZzhFUWJDckFiL1RxNGFsVEJZeS9QeE5KdnNpOTZYcml6Q0pUVjUvRDZWWVJSWkhqSi9LSmlJZ0lOZzBneUlKVlp6VnlSUzVLMVdFVWF5RzVCL1BZL1BrWmRoK29KZFFnVUZUbUlyMWJGRzh1dnhOTldCdEVjM2MwNWg3ZWQwU0NnYUFJVnFxUDREejlEdktGYjBGMWd5RGhFT09vdGh1cHM0dVUxYnJZOWUxcDN0bWV4OFluKzlHak5XamxNbEFWQk1tRUdEY1FiZXR4YUV4SjE1NnNpUWlzWU5tQjQ5Z3EzQ1ZacUlMRWlRb0xtM2VYOHNIT1BPcHM3cXNPdGJRd2N0K3czekVxUFpLa2tQTWdpT2hTSGtEYjVrR2dlUytVWG9yQUNWWVY3TG16a0NzUGNMUWtoQ2tyRDFOYzVxUmp4MDcwNjVkT3QrN2RTVWxwUTFTVW1mRHdDQlJGcHE2dWpwS1NFazZkT3NYKzNCeXlzN001ZTdhSWJqZUdzV0Z1QjJKRHJXaGJaYUxyTURNZ0ZEMDhBd1RYdWMvVXVxdys2cmFWcVdwQ1hMVDZ5Q05UMWFOSGp6UjBVRnlxcy9CZHRmNC9ENnZXTDBlbzFqMGpWVnZPYk5WVm5OWFFSVkhVcjcvZXE0NGVQVks5SVNsS3pYdXJ0MXFYMVZlVmEwNEVpcVlhc0VoZmUrNWI5TURtUGJXOHUza3I2ZjM3KzF4MzVtL0VkZXAxbnpiWmZnRzU0anZRU0VoeGd4QUVnVDU5K3RLblQxOWUzN1NSelYvOGpYbjNXSENVNVdJTWJ4Y1FuZ0dMdzkvbm5RRmc0dGlNUm1JQkNpcWpLSzl0ZkdKNXVneks3SlpHN2VNZm5NQ2dXOXNDY09qWW1VRFJETngvSHI0OFpxU3pXYUZIMUZIa2lsekVxSnQ5cm4rOE80KzFhMDdRSmNWQWNvd090NnhTVU9Ja3I4ak9TeThYY1BjTlhYejZ1ODkrVEkra0dzNlVPamxxQzZOM2dIZ0diSVU3OWhqQWxMK2Z4ZVYyWWQvL0tJNGp5MUV1Tmh5NHo1MDNuOFdQTDBFVCtUdjI1UnM0VUJSS1RFb3ZYbnh4UFhmZlBmTG5YaXB5NVNIc3VZL2lPTGFLMGhxRnljK2ZKYTJYLzAvOEwwZkF2TFNpS0l3ZU5aS2lILy9MMzJmZFJQZGtPNkQrbkZDa29vbm9pTWFVNkhrWFV3b0RWVVoxVzFFZFphajF4Y2pWUjVBcmNsRnQ1MUVSMmJaZllmSEx4OG04ZHpMTGxqOFRDSXBBZ09PdzNXNW4zcnc1dkxkbE0rMlNRNW4vWUNxOTJvbVlLQVgxR2s4Y05GcXEzWEhzUGxqSGlrM2ZVVzBWbURYN1VlYk1tZGZzUDNaY2lxQmtXams1MzdGdTNWcDJmYjRUbDh1Rk9jTEFvTjd0Nkh4akZERm1FNkZHait1b3NUb3BLYk55S0srVTdQL21VKytRQ1FrSlljU0l1NWt4YzFaUXpxV0Rta3RYVkpTVG5aM052bjNmOHVPSkV4UVducUtxcWdxSHcvTXVsOGxrSWpyYVF1dVUxblRxMklrK2ZmdlJ0MisvZ1A4NTYxTDhKdFhTNVZCVk5hRGJ0Q240SDdUUUNLUzRiOFJRQUFBQU5YUkZXSFJEYjIxdFpXNTBBRU52Ym5abGNuUmxaQ0IzYVhSb0lHVjZaMmxtTG1OdmJTQlRWa2NnZEc4Z1VFNUhJR052Ym5abGNuUmxjaXdwNHlNQUFBQUFTVVZPUks1Q1lJST0iLCJtZWRpYXR5cGUiOiJpbWFnZS9wbmcifV0sImluc3RhbGwiOnsic3BlYyI6eyJjbHVzdGVyUGVybWlzc2lvbnMiOlt7InJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiY29uZmlnLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsic2NoZWR1bGVycyJdLCJ2ZXJicyI6WyJnZXQiLCJ3YXRjaCIsImxpc3QiXX0seyJhcGlHcm91cHMiOlsibW9uaXRvcmluZy5jb3Jlb3MuY29tIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlbW9uaXRvcnMiXSwidmVyYnMiOlsiKiJdfSx7ImFwaUdyb3VwcyI6WyJvcGVyYXRvci5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImt1YmVkZXNjaGVkdWxlcnMiLCJrdWJlZGVzY2hlZHVsZXJzL3N0YXR1cyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsic2VydmljZXMiLCJjb25maWdtYXBzIiwic2VjcmV0cyIsImV2ZW50cyIsInNlcnZpY2VhY2NvdW50cyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsibmFtZXNwYWNlcyIsInBvZHMiXSwidmVyYnMiOlsiZ2V0Iiwid2F0Y2giLCJsaXN0Il19LHsiYXBpR3JvdXBzIjpbInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImNsdXN0ZXJyb2xlcyIsImNsdXN0ZXJyb2xlYmluZGluZ3MiLCJyb2xlcyIsInJvbGViaW5kaW5ncyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbImFwcHMiXSwicmVzb3VyY2VzIjpbInJlcGxpY2FzZXRzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCJdfSx7ImFwaUdyb3VwcyI6WyJhcHBzIl0sInJlc291cmNlcyI6WyJkZXBsb3ltZW50cyIsImRlcGxveW1lbnRzL3NjYWxlIl0sInZlcmJzIjpbIioiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCIsImNyZWF0ZSIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJjb25maWcub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJpbmZyYXN0cnVjdHVyZXMiLCJhcGlzZXJ2ZXJzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCJdfV0sInNlcnZpY2VBY2NvdW50TmFtZSI6Im9wZW5zaGlmdC1kZXNjaGVkdWxlciJ9XSwiZGVwbG95bWVudHMiOlt7Im5hbWUiOiJkZXNjaGVkdWxlci1vcGVyYXRvciIsInNwZWMiOnsicmVwbGljYXMiOjEsInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7Im5hbWUiOiJkZXNjaGVkdWxlci1vcGVyYXRvciJ9fSwidGVtcGxhdGUiOnsibWV0YWRhdGEiOnsibGFiZWxzIjp7Im5hbWUiOiJkZXNjaGVkdWxlci1vcGVyYXRvciJ9fSwic3BlYyI6eyJjb250YWluZXJzIjpbeyJhcmdzIjpbIm9wZXJhdG9yIl0sImNvbW1hbmQiOlsiY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yIl0sImVudiI6W3sibmFtZSI6IldBVENIX05BTUVTUEFDRSIsInZhbHVlRnJvbSI6eyJmaWVsZFJlZiI6eyJmaWVsZFBhdGgiOiJtZXRhZGF0YS5uYW1lc3BhY2UifX19LHsibmFtZSI6Ik9QRVJBVE9SX05BTUUiLCJ2YWx1ZSI6ImRlc2NoZWR1bGVyLW9wZXJhdG9yIn0seyJuYW1lIjoiSU1BR0UiLCJ2YWx1ZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQ0L29zZS1kZXNjaGVkdWxlckBzaGEyNTY6Y2M3OTE1YmY1NGEwZGExODMxYzNlY2M0ZjFlYWI4ZjhlM2UxNzRkMjA2M2ZhMTc0ZTNlZDBjM2NkM2UwNmZjMiJ9XSwiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0NC9vc2UtY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yQHNoYTI1NjoxYWNkMTQ0ZjU2YTI1NmY1ZTZjMWVhYzQ2OGZlMGViNzNhMjk4MzQzMzgxY2M5MWM0MjBjMzkzM2M5MGQ5NzM1IiwiaW1hZ2VQdWxsUG9saWN5IjoiQWx3YXlzIiwibmFtZSI6ImRlc2NoZWR1bGVyLW9wZXJhdG9yIiwicG9ydHMiOlt7ImNvbnRhaW5lclBvcnQiOjYwMDAwLCJuYW1lIjoibWV0cmljcyJ9XSwicmVzb3VyY2VzIjp7InJlcXVlc3RzIjp7ImNwdSI6IjEwbSIsIm1lbW9yeSI6IjUwTWkifX0sInNlY3VyaXR5Q29udGV4dCI6eyJhbGxvd1ByaXZpbGVnZUVzY2FsYXRpb24iOmZhbHNlLCJjYXBhYmlsaXRpZXMiOnsiZHJvcCI6WyJBTEwiXX19fV0sInNlY3VyaXR5Q29udGV4dCI6eyJydW5Bc05vblJvb3QiOnRydWUsInNlY2NvbXBQcm9maWxlIjp7InR5cGUiOiJSdW50aW1lRGVmYXVsdCJ9fSwic2VydmljZUFjY291bnROYW1lIjoib3BlbnNoaWZ0LWRlc2NoZWR1bGVyIn19fX1dfSwic3RyYXRlZ3kiOiJkZXBsb3ltZW50In0sImluc3RhbGxNb2RlcyI6W3sic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiT3duTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOnRydWUsInR5cGUiOiJTaW5nbGVOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJNdWx0aU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6IkFsbE5hbWVzcGFjZXMifV0sImtleXdvcmRzIjpbInNjaGVkdWxpbmciLCJkZXNjaGVkdWxlciIsIndvcmtsb2FkIl0sImxhYmVscyI6eyJvbG0tb3duZXItZW50ZXJwcmlzZS1hcHAiOiJjbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IiLCJvbG0tc3RhdHVzLWRlc2NyaXB0b3JzIjoiY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yLnY0LjEzLjAifSwibGlua3MiOlt7Im5hbWUiOiJTb3VyY2UgQ29kZSIsInVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuc2hpZnQvY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yIn1dLCJtYWludGFpbmVycyI6W3siZW1haWwiOiJzdXBwb3J0QHJlZGhhdC5jb20iLCJuYW1lIjoiUmVkIEhhdCJ9XSwibWF0dXJpdHkiOiJiZXRhIiwibWluS3ViZVZlcnNpb24iOiIxLjI2LjAiLCJwcm92aWRlciI6eyJuYW1lIjoiUmVkIEhhdCwgSW5jLiJ9LCJyZWxhdGVkSW1hZ2VzIjpbeyJpbWFnZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQ0L29zZS1jbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3JAc2hhMjU2OjFhY2QxNDRmNTZhMjU2ZjVlNmMxZWFjNDY4ZmUwZWI3M2EyOTgzNDMzODFjYzkxYzQyMGMzOTMzYzkwZDk3MzUiLCJuYW1lIjoib3NlLWNsdXN0ZXIta3ViZS1kZXNjaGVkdWxlci1vcGVyYXRvciJ9LHsiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0NC9vc2UtZGVzY2hlZHVsZXJAc2hhMjU2OmNjNzkxNWJmNTRhMGRhMTgzMWMzZWNjNGYxZWFiOGY4ZTNlMTc0ZDIwNjNmYTE3NGUzZWQwYzNjZDNlMDZmYzIiLCJuYW1lIjoib3NlLWRlc2NoZWR1bGVyIn1dLCJza2lwcyI6WyJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjMwNjA3MDgxNiIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyNDA1MDkxNDQyIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDIzMDMzMDE1MTYiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjMwODI4MTMwNSIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyMzA3MTMxNzQzIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDIzMDkxODE0MjciLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjMwNzI0MjAzNSIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyNDA0MjUyMTM4IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDIzMDUyMjA5NTUiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjMwMjA5MTgyOSIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyNDAxMjMxNzMzIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDI0MDMwODA5MzkiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjMwMzE4MDAwMiIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyNDAyMDExODM3IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDI0MDExNjExMTEiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjQwNDAzMDMwOSIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyNDA0MjAwMzEzIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDIzMTAxNjIxNTciLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjQwMjA4MTgwOCIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyMzA1MjYyMDU0IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDI0MDYxODA2NDMiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjMwNjI2MTkyOSIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyMzAyMDYxODE2IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDIzMDcxNzA5MTYiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjMxMTIxMTEzMSIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyNDA1MTQxNTM3IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDI0MDQyNTA2MzgiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjMxMDIxMDQyNSIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyNDA3MDcwODM2IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDIzMTEwMjE5MzAiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjQwMTI5MjEzNCIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyNDAzMDUxNjA3IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDIzMDQxOTAyMTYiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjQwNTA3MDczOSIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyMzEwMTAxNTQ0IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDIzMDMyMzEzNDIiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjQwNTIyMjIwNiIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjEzLjAtMjAyMzExMTMwODMwIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTMuMC0yMDIzMDgyMjE2MjciLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xMy4wLTIwMjMwMzI4MTU1NCJdLCJ2ZXJzaW9uIjoiNC4xMy4wLTIwMjQwNzA4MTMzOCJ9fQ=="
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:6eef7d35c5145bf1f099bd40a5ec2b654f91fc1220fd0b4aeddadecae8b45938"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:1acd144f56a256f5e6c1eac468fe0eb73a298343381cc91c420c3933c90d9735"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:cc7915bf54a0da1831c3ecc4f1eab8f8e3e174d2063fa174e3ed0c3cd3e06fc2"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202408131940",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:df478701ab6227ccda91633ac659d7fac2d94ee75d22f56b6a9eb28be1b70323",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202408131940"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:df478701ab6227ccda91633ac659d7fac2d94ee75d22f56b6a9eb28be1b70323"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:eb9c2a15a88d5079640817a9ef396165e2cde821def7a5c200276c3a3334cb6e"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:854b875373074b93fc6ba40526a76032e6d5ff58726b30fc26ff83ec1d467372"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202408260940",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:b734ea804606f4a176030cee06f73ecefe415740d8564cbb4a4f1707d15c529b",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202408260940"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:b734ea804606f4a176030cee06f73ecefe415740d8564cbb4a4f1707d15c529b"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:eaed48c53c2ab4cfae93689e32dfe89c6d815061f6374e3818ebf634b09414f1"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:3f55de0635d5de80547da5ad794363505751926dc4c2668677ff4fa4debed007"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202409240037",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:3555458d2b855c3938bfe687cdb06d94205fa1efb3fe35694e479c94030d929d",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202409240037"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:3555458d2b855c3938bfe687cdb06d94205fa1efb3fe35694e479c94030d929d"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:144b9ad69814319649e8044f7723d5db2b654711f35da7401f70a68948863897"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:7b6d60c15ffa7f34b3e110e0549bdcd031f165a53d63052f18e7c53bf1c34a9d"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202410190100",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:91f2d553b35c00cbb5fe7fc3a72fc74b44fe03d404e048adf11e9f1dcac618e9",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202410190100"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6Imt1YmVkZXNjaGVkdWxlcnMub3BlcmF0b3Iub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJvcGVyYXRvci5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiS3ViZURlc2NoZWR1bGVyIiwibGlzdEtpbmQiOiJLdWJlRGVzY2hlZHVsZXJMaXN0IiwicGx1cmFsIjoia3ViZWRlc2NoZWR1bGVycyIsInNpbmd1bGFyIjoia3ViZWRlc2NoZWR1bGVyIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiS3ViZURlc2NoZWR1bGVyIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBkZXNjaGVkdWxlcnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJzcGVjIGhvbGRzIHVzZXIgc2V0dGFibGUgdmFsdWVzIGZvciBjb25maWd1cmF0aW9uIiwicHJvcGVydGllcyI6eyJkZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMgaXMgdGhlIG51bWJlciBvZiBzZWNvbmRzIGJldHdlZW4gZGVzY2hlZHVsZXIgcnVucyIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwibG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoibG9nTGV2ZWwgaXMgYW4gaW50ZW50IGJhc2VkIGxvZ2dpbmcgZm9yIGFuIG92ZXJhbGwgY29tcG9uZW50LiAgSXQgZG9lcyBub3QgZ2l2ZSBmaW5lIGdyYWluZWQgY29udHJvbCwgYnV0IGl0IGlzIGEgc2ltcGxlIHdheSB0byBtYW5hZ2UgY29hcnNlIGdyYWluZWQgbG9nZ2luZyBjaG9pY2VzIHRoYXQgb3BlcmF0b3JzIGhhdmUgdG8gaW50ZXJwcmV0IGZvciB0aGVpciBvcGVyYW5kcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sIm1hbmFnZW1lbnRTdGF0ZSI6eyJkZXNjcmlwdGlvbiI6Im1hbmFnZW1lbnRTdGF0ZSBpbmRpY2F0ZXMgd2hldGhlciBhbmQgaG93IHRoZSBvcGVyYXRvciBzaG91bGQgbWFuYWdlIHRoZSBjb21wb25lbnQiLCJwYXR0ZXJuIjoiXihNYW5hZ2VkfFVubWFuYWdlZHxGb3JjZXxSZW1vdmVkKSQiLCJ0eXBlIjoic3RyaW5nIn0sIm1vZGUiOnsiZGVmYXVsdCI6IlByZWRpY3RpdmUiLCJkZXNjcmlwdGlvbiI6Ik1vZGUgY29uZmlndXJlcyB0aGUgZGVzY2hlZHVsZXIgdG8gZWl0aGVyIGV2aWN0IHBvZHMgKEF1dG9tYXRpYykgb3IgdG8gc2ltdWxhdGUgdGhlIGV2aWN0aW9uIChQcmVkaWN0aXZlKSIsImVudW0iOlsiQXV0b21hdGljIiwiUHJlZGljdGl2ZSJdLCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkQ29uZmlnIjp7ImRlc2NyaXB0aW9uIjoib2JzZXJ2ZWRDb25maWcgaG9sZHMgYSBzcGFyc2UgY29uZmlnIHRoYXQgY29udHJvbGxlciBoYXMgb2JzZXJ2ZWQgZnJvbSB0aGUgY2x1c3RlciBzdGF0ZS4gIEl0IGV4aXN0cyBpbiBzcGVjIGJlY2F1c2UgaXQgaXMgYW4gaW5wdXQgdG8gdGhlIGxldmVsIGZvciB0aGUgb3BlcmF0b3IiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sIm9wZXJhdG9yTG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoib3BlcmF0b3JMb2dMZXZlbCBpcyBhbiBpbnRlbnQgYmFzZWQgbG9nZ2luZyBmb3IgdGhlIG9wZXJhdG9yIGl0c2VsZi4gIEl0IGRvZXMgbm90IGdpdmUgZmluZSBncmFpbmVkIGNvbnRyb2wsIGJ1dCBpdCBpcyBhIHNpbXBsZSB3YXkgdG8gbWFuYWdlIGNvYXJzZSBncmFpbmVkIGxvZ2dpbmcgY2hvaWNlcyB0aGF0IG9wZXJhdG9ycyBoYXZlIHRvIGludGVycHJldCBmb3IgdGhlbXNlbHZlcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sInByb2ZpbGVDdXN0b21pemF0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVDdXN0b21pemF0aW9ucyBjb250YWlucyB2YXJpb3VzIHBhcmFtZXRlcnMgZm9yIG1vZGlmeWluZyB0aGUgZGVmYXVsdCBiZWhhdmlvciBvZiBjZXJ0YWluIHByb2ZpbGVzIiwicHJvcGVydGllcyI6eyJkZXZMb3dOb2RlVXRpbGl6YXRpb25UaHJlc2hvbGRzIjp7ImRlZmF1bHQiOiJNZWRpdW0iLCJkZXNjcmlwdGlvbiI6Ikxvd05vZGVVdGlsaXphdGlvblRocmVzaG9sZHMgZW51bWVyYXRlcyBwcmVkZWZpbmVkIGV4cGVyaW1lbnRhbCB0aHJlc2hvbGRzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlcyBvdmVycmlkZXMgaW5jbHVkZWQgYW5kIGV4Y2x1ZGVkIG5hbWVzcGFjZXMgd2hpbGUga2VlcGluZyB0aGUgZGVmYXVsdCBleGNsdXNpb24gb2YgYWxsIG9wZW5zaGlmdC0qLCBrdWJlLXN5c3RlbSBhbmQgaHlwZXJzaGlmdCBuYW1lc3BhY2VzIiwicHJvcGVydGllcyI6eyJleGNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJpbmNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwb2RMaWZldGltZSI6eyJkZXNjcmlwdGlvbiI6IlBvZExpZmV0aW1lIGlzIHRoZSBsZW5ndGggb2YgdGltZSBhZnRlciB3aGljaCBwb2RzIHNob3VsZCBiZSBldmljdGVkIFRoaXMgZmllbGQgc2hvdWxkIGJlIHVzZWQgd2l0aCBwcm9maWxlcyB0aGF0IGVuYWJsZSB0aGUgUG9kTGlmZXRpbWUgc3RyYXRlZ3ksIHN1Y2ggYXMgTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJmb3JtYXQiOiJkdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwidGhyZXNob2xkUHJpb3JpdHkiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidGhyZXNob2xkUHJpb3JpdHlDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eSIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicHJvZmlsZXMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlcyBzZXRzIHdoaWNoIGRlc2NoZWR1bGVyIHN0cmF0ZWd5IHByb2ZpbGVzIGFyZSBlbmFibGVkIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxlclByb2ZpbGUgYWxsb3dzIGNvbmZpZ3VyaW5nIHRoZSBlbmFibGVkIHN0cmF0ZWd5IHByb2ZpbGVzIGZvciB0aGUgZGVzY2hlZHVsZXIgaXQgYWxsb3dzIG11bHRpcGxlIHByb2ZpbGVzIHRvIGJlIGVuYWJsZWQgYXQgb25jZSwgd2hpY2ggd2lsbCBoYXZlIGN1bXVsYXRpdmUgZWZmZWN0cyBvbiB0aGUgY2x1c3Rlci4iLCJlbnVtIjpbIkFmZmluaXR5QW5kVGFpbnRzIiwiVG9wb2xvZ3lBbmREdXBsaWNhdGVzIiwiTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJEZXZQcmV2aWV3TG9uZ0xpZmVjeWNsZSIsIlNvZnRUb3BvbG9neUFuZER1cGxpY2F0ZXMiLCJFdmljdFBvZHNXaXRoTG9jYWxTdG9yYWdlIiwiRXZpY3RQb2RzV2l0aFBWQyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ1bnN1cHBvcnRlZENvbmZpZ092ZXJyaWRlcyI6eyJkZXNjcmlwdGlvbiI6InVuc3VwcG9ydGVkQ29uZmlnT3ZlcnJpZGVzIGhvbGRzIGEgc3BhcnNlIGNvbmZpZyB0aGF0IHdpbGwgb3ZlcnJpZGUgYW55IHByZXZpb3VzbHkgc2V0IG9wdGlvbnMuICBJdCBvbmx5IG5lZWRzIHRvIGJlIHRoZSBmaWVsZHMgdG8gb3ZlcnJpZGUgaXQgd2lsbCBlbmQgdXAgb3ZlcmxheWluZyBpbiB0aGUgZm9sbG93aW5nIG9yZGVyOiAxLiBoYXJkY29kZWQgZGVmYXVsdHMgMi4gb2JzZXJ2ZWRDb25maWcgMy4gdW5zdXBwb3J0ZWRDb25maWdPdmVycmlkZXMiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBob2xkcyBvYnNlcnZlZCB2YWx1ZXMgZnJvbSB0aGUgY2x1c3Rlci4gVGhleSBtYXkgbm90IGJlIG92ZXJyaWRkZW4uIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiY29uZGl0aW9ucyBpcyBhIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlaXIgc3RhdHVzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvckNvbmRpdGlvbiBpcyBqdXN0IHRoZSBzdGFuZGFyZCBjb25kaXRpb24gZmllbGRzLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiZ2VuZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJnZW5lcmF0aW9ucyBhcmUgdXNlZCB0byBkZXRlcm1pbmUgd2hlbiBhbiBpdGVtIG5lZWRzIHRvIGJlIHJlY29uY2lsZWQgb3IgaGFzIGNoYW5nZWQgaW4gYSB3YXkgdGhhdCBuZWVkcyBhIHJlYWN0aW9uLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiR2VuZXJhdGlvblN0YXR1cyBrZWVwcyB0cmFjayBvZiB0aGUgZ2VuZXJhdGlvbiBmb3IgYSBnaXZlbiByZXNvdXJjZSBzbyB0aGF0IGRlY2lzaW9ucyBhYm91dCBmb3JjZWQgdXBkYXRlcyBjYW4gYmUgbWFkZS4iLCJwcm9wZXJ0aWVzIjp7Imdyb3VwIjp7ImRlc2NyaXB0aW9uIjoiZ3JvdXAgaXMgdGhlIGdyb3VwIG9mIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmciLCJ0eXBlIjoic3RyaW5nIn0sImhhc2giOnsiZGVzY3JpcHRpb24iOiJoYXNoIGlzIGFuIG9wdGlvbmFsIGZpZWxkIHNldCBmb3IgcmVzb3VyY2VzIHdpdGhvdXQgZ2VuZXJhdGlvbiB0aGF0IGFyZSBjb250ZW50IHNlbnNpdGl2ZSBsaWtlIHNlY3JldHMgYW5kIGNvbmZpZ21hcHMiLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoibGFzdEdlbmVyYXRpb24gaXMgdGhlIGxhc3QgZ2VuZXJhdGlvbiBvZiB0aGUgd29ya2xvYWQgY29udHJvbGxlciBpbnZvbHZlZCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlIGlzIHdoZXJlIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmcgaXMiLCJ0eXBlIjoic3RyaW5nIn0sInJlc291cmNlIjp7ImRlc2NyaXB0aW9uIjoicmVzb3VyY2UgaXMgdGhlIHJlc291cmNlIHR5cGUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiBpcyB0aGUgbGFzdCBnZW5lcmF0aW9uIGNoYW5nZSB5b3UndmUgZGVhbHQgd2l0aCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwicmVhZHlSZXBsaWNhcyI6eyJkZXNjcmlwdGlvbiI6InJlYWR5UmVwbGljYXMgaW5kaWNhdGVzIGhvdyBtYW55IHJlcGxpY2FzIGFyZSByZWFkeSBhbmQgYXQgdGhlIGRlc2lyZWQgc3RhdGUiLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJ2ZXJzaW9uIGlzIHRoZSBsZXZlbCB0aGlzIGF2YWlsYWJpbGl0eSBhcHBsaWVzIHRvIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:91f2d553b35c00cbb5fe7fc3a72fc74b44fe03d404e048adf11e9f1dcac618e9"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:5c6acd5f18bd956de1d22b4510a336cf6ed4367a9d97967dbc8b8044b37a100a"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:85083312e0ca793ee15c252ab1a69aa8534ab90b7fef2c2379b36f7dff35ea14"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202411300029",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:e9222c6c64f517de183b860adfa1b1b4555c1d5155e3ba451dd8837a7b6146e1",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202411300029"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:e9222c6c64f517de183b860adfa1b1b4555c1d5155e3ba451dd8837a7b6146e1"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:d90b3ddb2109e8a5bd35666f1667e449df48aea32f1c7046064b2865667a90d6"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:ea9aa3886ae17495343c3a5efb53fecda1f4a25cc76af909867e21f70a3c8be6"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202502010028",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:1e2100cc2159f00092680a29d4453b20e05b01e3a2abe624aa08685dbd6da357",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202502010028"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:1e2100cc2159f00092680a29d4453b20e05b01e3a2abe624aa08685dbd6da357"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:f4eccac1bf8bc532875e0ff3cdd50043689d641ddfb13b22a6138d3db0b982db"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:c77f7b6595f02d52fcaf1622dd9c51d464d9a0ee498f9035b17d1cb6656aa325"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202503111300",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:4a573579376b58326266ced17fccf2a09d1fe89a8b90a639412bc0f121f326d7",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202503111300"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:4a573579376b58326266ced17fccf2a09d1fe89a8b90a639412bc0f121f326d7"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:87b45e169750ffa1f93ba1e2fdc711f98190544905db5c8e696dd9f97fd77edb"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:19df8ce2ac20bac5b8edd8c47135b483d4edd62ed17f1bc4679052018fd40e1f"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.v4.13.1",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/kube-descheduler-operator/kube-descheduler-operator-bundle@sha256:7673ba7d14a9e5e391032a480cb573c3d0d8dccc50d7e54d928cb616ac5d54b2",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.1"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6Imt1YmVkZXNjaGVkdWxlcnMub3BlcmF0b3Iub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJvcGVyYXRvci5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiS3ViZURlc2NoZWR1bGVyIiwibGlzdEtpbmQiOiJLdWJlRGVzY2hlZHVsZXJMaXN0IiwicGx1cmFsIjoia3ViZWRlc2NoZWR1bGVycyIsInNpbmd1bGFyIjoia3ViZWRlc2NoZWR1bGVyIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiS3ViZURlc2NoZWR1bGVyIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBkZXNjaGVkdWxlcnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJzcGVjIGhvbGRzIHVzZXIgc2V0dGFibGUgdmFsdWVzIGZvciBjb25maWd1cmF0aW9uIiwicHJvcGVydGllcyI6eyJkZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMgaXMgdGhlIG51bWJlciBvZiBzZWNvbmRzIGJldHdlZW4gZGVzY2hlZHVsZXIgcnVucyIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwibG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoibG9nTGV2ZWwgaXMgYW4gaW50ZW50IGJhc2VkIGxvZ2dpbmcgZm9yIGFuIG92ZXJhbGwgY29tcG9uZW50LiAgSXQgZG9lcyBub3QgZ2l2ZSBmaW5lIGdyYWluZWQgY29udHJvbCwgYnV0IGl0IGlzIGEgc2ltcGxlIHdheSB0byBtYW5hZ2UgY29hcnNlIGdyYWluZWQgbG9nZ2luZyBjaG9pY2VzIHRoYXQgb3BlcmF0b3JzIGhhdmUgdG8gaW50ZXJwcmV0IGZvciB0aGVpciBvcGVyYW5kcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sIm1hbmFnZW1lbnRTdGF0ZSI6eyJkZXNjcmlwdGlvbiI6Im1hbmFnZW1lbnRTdGF0ZSBpbmRpY2F0ZXMgd2hldGhlciBhbmQgaG93IHRoZSBvcGVyYXRvciBzaG91bGQgbWFuYWdlIHRoZSBjb21wb25lbnQiLCJwYXR0ZXJuIjoiXihNYW5hZ2VkfFVubWFuYWdlZHxGb3JjZXxSZW1vdmVkKSQiLCJ0eXBlIjoic3RyaW5nIn0sIm1vZGUiOnsiZGVmYXVsdCI6IlByZWRpY3RpdmUiLCJkZXNjcmlwdGlvbiI6Ik1vZGUgY29uZmlndXJlcyB0aGUgZGVzY2hlZHVsZXIgdG8gZWl0aGVyIGV2aWN0IHBvZHMgKEF1dG9tYXRpYykgb3IgdG8gc2ltdWxhdGUgdGhlIGV2aWN0aW9uIChQcmVkaWN0aXZlKSIsImVudW0iOlsiQXV0b21hdGljIiwiUHJlZGljdGl2ZSJdLCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkQ29uZmlnIjp7ImRlc2NyaXB0aW9uIjoib2JzZXJ2ZWRDb25maWcgaG9sZHMgYSBzcGFyc2UgY29uZmlnIHRoYXQgY29udHJvbGxlciBoYXMgb2JzZXJ2ZWQgZnJvbSB0aGUgY2x1c3RlciBzdGF0ZS4gIEl0IGV4aXN0cyBpbiBzcGVjIGJlY2F1c2UgaXQgaXMgYW4gaW5wdXQgdG8gdGhlIGxldmVsIGZvciB0aGUgb3BlcmF0b3IiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sIm9wZXJhdG9yTG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoib3BlcmF0b3JMb2dMZXZlbCBpcyBhbiBpbnRlbnQgYmFzZWQgbG9nZ2luZyBmb3IgdGhlIG9wZXJhdG9yIGl0c2VsZi4gIEl0IGRvZXMgbm90IGdpdmUgZmluZSBncmFpbmVkIGNvbnRyb2wsIGJ1dCBpdCBpcyBhIHNpbXBsZSB3YXkgdG8gbWFuYWdlIGNvYXJzZSBncmFpbmVkIGxvZ2dpbmcgY2hvaWNlcyB0aGF0IG9wZXJhdG9ycyBoYXZlIHRvIGludGVycHJldCBmb3IgdGhlbXNlbHZlcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sInByb2ZpbGVDdXN0b21pemF0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVDdXN0b21pemF0aW9ucyBjb250YWlucyB2YXJpb3VzIHBhcmFtZXRlcnMgZm9yIG1vZGlmeWluZyB0aGUgZGVmYXVsdCBiZWhhdmlvciBvZiBjZXJ0YWluIHByb2ZpbGVzIiwicHJvcGVydGllcyI6eyJkZXZMb3dOb2RlVXRpbGl6YXRpb25UaHJlc2hvbGRzIjp7ImRlZmF1bHQiOiJNZWRpdW0iLCJkZXNjcmlwdGlvbiI6Ikxvd05vZGVVdGlsaXphdGlvblRocmVzaG9sZHMgZW51bWVyYXRlcyBwcmVkZWZpbmVkIGV4cGVyaW1lbnRhbCB0aHJlc2hvbGRzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlcyBvdmVycmlkZXMgaW5jbHVkZWQgYW5kIGV4Y2x1ZGVkIG5hbWVzcGFjZXMgd2hpbGUga2VlcGluZyB0aGUgZGVmYXVsdCBleGNsdXNpb24gb2YgYWxsIG9wZW5zaGlmdC0qLCBrdWJlLXN5c3RlbSBhbmQgaHlwZXJzaGlmdCBuYW1lc3BhY2VzIiwicHJvcGVydGllcyI6eyJleGNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJpbmNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwb2RMaWZldGltZSI6eyJkZXNjcmlwdGlvbiI6IlBvZExpZmV0aW1lIGlzIHRoZSBsZW5ndGggb2YgdGltZSBhZnRlciB3aGljaCBwb2RzIHNob3VsZCBiZSBldmljdGVkIFRoaXMgZmllbGQgc2hvdWxkIGJlIHVzZWQgd2l0aCBwcm9maWxlcyB0aGF0IGVuYWJsZSB0aGUgUG9kTGlmZXRpbWUgc3RyYXRlZ3ksIHN1Y2ggYXMgTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJmb3JtYXQiOiJkdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwidGhyZXNob2xkUHJpb3JpdHkiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidGhyZXNob2xkUHJpb3JpdHlDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eSIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicHJvZmlsZXMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlcyBzZXRzIHdoaWNoIGRlc2NoZWR1bGVyIHN0cmF0ZWd5IHByb2ZpbGVzIGFyZSBlbmFibGVkIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxlclByb2ZpbGUgYWxsb3dzIGNvbmZpZ3VyaW5nIHRoZSBlbmFibGVkIHN0cmF0ZWd5IHByb2ZpbGVzIGZvciB0aGUgZGVzY2hlZHVsZXIgaXQgYWxsb3dzIG11bHRpcGxlIHByb2ZpbGVzIHRvIGJlIGVuYWJsZWQgYXQgb25jZSwgd2hpY2ggd2lsbCBoYXZlIGN1bXVsYXRpdmUgZWZmZWN0cyBvbiB0aGUgY2x1c3Rlci4iLCJlbnVtIjpbIkFmZmluaXR5QW5kVGFpbnRzIiwiVG9wb2xvZ3lBbmREdXBsaWNhdGVzIiwiTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJEZXZQcmV2aWV3TG9uZ0xpZmVjeWNsZSIsIlNvZnRUb3BvbG9neUFuZER1cGxpY2F0ZXMiLCJFdmljdFBvZHNXaXRoTG9jYWxTdG9yYWdlIiwiRXZpY3RQb2RzV2l0aFBWQyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ1bnN1cHBvcnRlZENvbmZpZ092ZXJyaWRlcyI6eyJkZXNjcmlwdGlvbiI6InVuc3VwcG9ydGVkQ29uZmlnT3ZlcnJpZGVzIGhvbGRzIGEgc3BhcnNlIGNvbmZpZyB0aGF0IHdpbGwgb3ZlcnJpZGUgYW55IHByZXZpb3VzbHkgc2V0IG9wdGlvbnMuICBJdCBvbmx5IG5lZWRzIHRvIGJlIHRoZSBmaWVsZHMgdG8gb3ZlcnJpZGUgaXQgd2lsbCBlbmQgdXAgb3ZlcmxheWluZyBpbiB0aGUgZm9sbG93aW5nIG9yZGVyOiAxLiBoYXJkY29kZWQgZGVmYXVsdHMgMi4gb2JzZXJ2ZWRDb25maWcgMy4gdW5zdXBwb3J0ZWRDb25maWdPdmVycmlkZXMiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBob2xkcyBvYnNlcnZlZCB2YWx1ZXMgZnJvbSB0aGUgY2x1c3Rlci4gVGhleSBtYXkgbm90IGJlIG92ZXJyaWRkZW4uIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiY29uZGl0aW9ucyBpcyBhIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlaXIgc3RhdHVzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvckNvbmRpdGlvbiBpcyBqdXN0IHRoZSBzdGFuZGFyZCBjb25kaXRpb24gZmllbGRzLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiZ2VuZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJnZW5lcmF0aW9ucyBhcmUgdXNlZCB0byBkZXRlcm1pbmUgd2hlbiBhbiBpdGVtIG5lZWRzIHRvIGJlIHJlY29uY2lsZWQgb3IgaGFzIGNoYW5nZWQgaW4gYSB3YXkgdGhhdCBuZWVkcyBhIHJlYWN0aW9uLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiR2VuZXJhdGlvblN0YXR1cyBrZWVwcyB0cmFjayBvZiB0aGUgZ2VuZXJhdGlvbiBmb3IgYSBnaXZlbiByZXNvdXJjZSBzbyB0aGF0IGRlY2lzaW9ucyBhYm91dCBmb3JjZWQgdXBkYXRlcyBjYW4gYmUgbWFkZS4iLCJwcm9wZXJ0aWVzIjp7Imdyb3VwIjp7ImRlc2NyaXB0aW9uIjoiZ3JvdXAgaXMgdGhlIGdyb3VwIG9mIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmciLCJ0eXBlIjoic3RyaW5nIn0sImhhc2giOnsiZGVzY3JpcHRpb24iOiJoYXNoIGlzIGFuIG9wdGlvbmFsIGZpZWxkIHNldCBmb3IgcmVzb3VyY2VzIHdpdGhvdXQgZ2VuZXJhdGlvbiB0aGF0IGFyZSBjb250ZW50IHNlbnNpdGl2ZSBsaWtlIHNlY3JldHMgYW5kIGNvbmZpZ21hcHMiLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoibGFzdEdlbmVyYXRpb24gaXMgdGhlIGxhc3QgZ2VuZXJhdGlvbiBvZiB0aGUgd29ya2xvYWQgY29udHJvbGxlciBpbnZvbHZlZCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlIGlzIHdoZXJlIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmcgaXMiLCJ0eXBlIjoic3RyaW5nIn0sInJlc291cmNlIjp7ImRlc2NyaXB0aW9uIjoicmVzb3VyY2UgaXMgdGhlIHJlc291cmNlIHR5cGUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiBpcyB0aGUgbGFzdCBnZW5lcmF0aW9uIGNoYW5nZSB5b3UndmUgZGVhbHQgd2l0aCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwicmVhZHlSZXBsaWNhcyI6eyJkZXNjcmlwdGlvbiI6InJlYWR5UmVwbGljYXMgaW5kaWNhdGVzIGhvdyBtYW55IHJlcGxpY2FzIGFyZSByZWFkeSBhbmQgYXQgdGhlIGRlc2lyZWQgc3RhdGUiLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJ2ZXJzaW9uIGlzIHRoZSBsZXZlbCB0aGlzIGF2YWlsYWJpbGl0eSBhcHBsaWVzIHRvIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "descheduler-operand",
            "image": "registry.redhat.io/kube-descheduler-operator/descheduler-rhel9@sha256:7bdb18a55f011d5057f7edf954db916ed590c3e8302b45b4c1dbd6e61c4c74bc"
        },
        {
            "name": "descheduler-operator",
            "image": "registry.redhat.io/kube-descheduler-operator/kube-descheduler-rhel9-operator@sha256:ea0f9b9005e03d8ac0cf25c62787f0afc0b34b40bc1d72fe5fa4b87a9810c12c"
        },
        {
            "name": "",
            "image": "registry.redhat.io/kube-descheduler-operator/kube-descheduler-operator-bundle@sha256:7673ba7d14a9e5e391032a480cb573c3d0d8dccc50d7e54d928cb616ac5d54b2"
        }
    ]
}
