{
    "schema": "olm.package",
    "name": "cluster-kube-descheduler-operator",
    "defaultChannel": "stable",
    "icon": {
        "base64data": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAGEQAABhEBFmutAgAAABJ0RVh0U29mdHdhcmUAZXpnaWYuY29toMOzWAAADjBJREFUaIHFm3lgFNUdxz+zM3vmZJPNTZAgd+WKQRAICEiwKEghFhFFjooFueQQKFZRwAqo5bBQL/AGxbMVAoISUWlNuBQISEIgkGDIHbLZc2b6x+qGJQhks2u/f+2+ee/3vt99b37Hm1lBVVWV/xOqKiuprKpCVVUMBgOxsbFotdqgzikF1fplqK2tZet7W8j6bCtHjh4nIlQiMkyHVhS4WC9TWmknLDyUtLSeDM4YzpAhGZhMpoByEH6LFb5w4QL/XL+ad99+iyGpIQxL03NzeyM6rRZBF4Eg6kEQQXZSWHSeXftryD6qcORUPX8ccw+PzJxPTExMQLgEVbCiKLz6ygZeWPUsmemhTBwSjsUcihTdE435JsSQZBQ07MrO4dPte9mdnYPD6UQniSiqjOx2YXfKCILIA+PHs3z5CgRBaBanoAkuKjrDjKmTUKxnWDGpBckJUUhx/ZFibkUQDTidTjZ/uIuVa9/CZrdz8WL9r9rSAIJGIDo6muy9+zCbzX7zCorg/bm5jB+XyUN3hDAhIxKdpSfaViMQRCMAe/cd4s+PPku9zYa13n7ddkWNgDEkhB9+yCMkJMQvbgEXnJW1jdnTH+bZSS0Y3DMeXcq9iBEdAai32fnL0g188lk21nqbX/Y1GoGuXbuxY+duv8YHVPDOnTuYOW0yr8yOpUfnluja/QmNIRqAC+VV/GHcfIqKS3E4nL4kBGgaC4Ft27O4+ea0JnPUNHnEr+DQoYNMnzqJ9dMt9OjaHn3HGV6x+YXnGDh8KqeLzvuIFQQY1S+Sr15oy6tzk9FKHoeUEH31WCxqYNmyp/ziGZAVLi4uZujgfiweE8bw29qi7zTde7+eLirh9pHTqbPaUBTFO6ZTKwNPjo8jtW1DnN36VTU7ci9iiRDZsqf6qnOGmEwUnjnXZK7NXmFVVZk+bTIjeuu5Kz0JffuHvGIrq2oYOW4+1no7iqIwdmALoiNEADokG+iaYvSxNTo9khdnJFFQ4mw0z+Wot/vpA/wadQlefeWfXDiXx5xMC/q2kxB0kQA4nS5Gj19IWXk1siwzoGsoT0+I583HbsAcJvHh3mqe2HS+kT2dJJBf4rjmvKqi4s/mbJbg4uJili9dwvMPRROSPBRNSJL32rOr36Sg8BwutxuAcYM9sbNdSz0b57UEYPOeajbuqPCxWVbjprpOBvDe01eCIIAsy03m3CzBL6x6hqFp4dzUuQPa+EHe9v2HjvPS6x9h/9lBJURrSe/SEDfPlbu9n5955wKH8hu258liz+qmdwnlwyWtCTeJV5xbrzcgSU0vBfwuHs6cOc37W98na/kN6FqN8vzkgNst86dZy3C6GkTdN7AFoqZhtd7eXen9fFOKgZQEHV8cvMgXB+vYdeAibZP0rJmWRJhJw/pZSUxYcRanu8HhASQkJPrF22/BG9av485eEaR0SEUT0jD5e5/spqKq1htYdZLA6PQW3uunf3Kw75jV+93uULll2kmvoJhIidfmJBNm8my+Xh1DWDElgdn/OOeN1aJGQ2pqql+8/drSbrebTz76gFF9Q5ESM7ztLpeb5as2Yrc1OJ2MtHCvZwZ4c1e1T5Jx/KzdZ/Xm3hPTKA7/vmcYLS0673edXs+wYXf6Q92/Ff56714kjYteqZ3RGOO97R/9ew91Vt8ioEdbI0cKPfeorAh8uPfq8XXFllJu6WAi6WeBp847eebdUs6WOYmOECmvkXG5XPQfcJs/1P0T/PnOLAZ3NyFF9/Bpf/v9LGx235Cy5I2fmmS7vEZm4qoi/jEzmTd2VrBlTzXtEvVsmteKxzedR6NR6du3n9/Fg19b+uiRA3RM1iGZu3rbKiqryTl47Ir9zWES62a0xKC9di0bb5YoKHGS8Vg++3+0sWZaIp8uTaHOrlB0wYkkaZk5a7Y/tAE/BR8/fpKOKXEI2lBv2649Oej1ukZ9e7Y38e9lKdyRFsZt3UIbXb8UoUYNT46Pp22inuemJPDp0tZkpIUjCPDK9nIQoM2NbejTp68/tAE/trTNZqOyupbk5JY+7UePn8J5WWEwfkgUC8bEeBOIu3pHsD3n4q/aXjQ2jv5dQhnYPYxLohjfHq3j4EkbBoOBBY8tbCplHzRZ8C/ZjTY01qf94A8ncMsebxsZJvLclEQGdPVd0QHdwgg3idTWN86Q0ruEck//SC4/wTlWZOexlz0pqMUSTcbQO5pK2QdNFixJEoIg4JB9h54tLvV+toRLfJ5bS/8uoV4Bhwts/FBoIzFaS22Rr+Awk4ZlE+N9xBaXu1j/aTnvf1WNW1YxGo3Mn78QjaZ56X+TBRsMBhLjLRScqaRVl4Z2RW4IrieLHQxODfMRsOTN8xwuuPJxztzMGBKiPLFXVlT+8up5PvqmBvclNk0mEyP/MKqpdBvBr5+ra7fu5Hyf79Mmig2mtJLAfYMaDtr+k2f1iu18g5En74/zGbv8nVKmrz3HgZOeeP3Lqv4Co9HI7EfnoNM1dopNhV+CR2eO5f0dJ1Fkl7etTeuGSml47wjizQ2b59XtlbRP0rN2ehKfPNWawTeH+9hzuFS2fVdL5lOFZD512sdhAWhEkXHjHvCHaiP4JXhIxlAMpgheWjkDV/EOVJeVnj06o9d5tuUvpSB4MqXEKC2fLW/D73t6QozuKjfS4QIbyiWpp8FoYNq0RwL2BMIvwVqtlnUbNrJqSwn5B/6F7fDT3NWtDpfb44xaxTbkwpt2VPDQsCif+7mqTrnc5K9DhcmTH/KH5hXht8vr3r07EyZNYcFrlaiyk1bGk/TqYEQrCbzwQRkAlRfd2J2qtxg4X+nm6bdKGb644Lrm0Ov1PDhhIpGRkf7SbIRmHeI5nQ4G9e/N/elO7hsYyU9VbgbNzafeobBorMcxpbU3EdtCYsO/ytn8ZXWjuvZq0Gq17D9wmLi4uGt3vk40+9Ryf24uYzKHs21ZSxKitGzdW83i137C5VaIiZS4pVMIO76rxe5q2jRarZZRo0azZu2LzaHXCAE5pl24YC4FBz5h4xxP9jVm6WkOnLThkv03LUkSX3+zj5SUNs2l54OAHMQ//tenKCzT8fE3NQA893Ai4pWPoq4Loihy++1DAi4WAiTYZDLx/Jr1LHmnkvIamcRoLQv+GItB59+jTY1Gw5y58wJBrbHtQBnq1y+doRl3suRtzwHd/UPMtE00IF2eRVwDgkYgLS2NLl26XruzHwiYYIClz6xkf4HCjpxaNAKsnpZIU3N9naTjsQWLAknLBwEVHB4ezorn1vL4G5XUWGVax+mYMdKCQXf907Ruk0Lv3rcGkpYPAioYICNjKL1uTWfZu1UATLkzipYWrc+59K/BYDSwePFfA03JBwEXDLDy+bV8cdjOVz9YkUSBNY9c39a2RFsYPPj2YFDyIiiCzeYoljz9NxZtqsBqV+jQ0sDkO8xX9doGo4GFixY3u8C/FoL6Fs+994ygpe4ET9wfjdOtMHh+AcVlLp9q6BdYLDEc/v6IX8+LmoKg/pzPr97Ax/us5JyoRydpWDM1CVFsvMqSJDFnztygi4UgC46Pj2fhoidY8FoFdpdKtxuNjBnQopHX1un0jL1vXDCpeBHcGwYYP2EisYntWP2RJyFZODaWCJPoUx9Pnz4Dg8EQbCrAb/Tq4alTBYy/PxNJvsi96XrizCJTV5/D6VYRRZHjJ/KJiIgINg0gyIJVZzVyRS5K1WEUayG5B/PY/PkZdh+oJdQgUFTmIr1bFG8uvxNNWBtEc3c05h7ed0SCgaAIVqqP4Dz9DvKFb0F1gyDhEOOothups4uU1brY9e1p3tmex8Yn+9GjNWjlMlAVBMmEGDcQbetxaExJ156siQisYNmB49gq3CVZqILEiQoLm3eX8sHOPOps7qsOtbQwct+w3zEqPZKkkPMgiOhSHkDb5kGgeS+UXorACVYV7LmzkCsPcLQkhCkrD1Nc5qRjx07065dOt+7dSUlpQ1SUmfDwCBRFpq6ujpKSEk6dOsX+3Byys7M5e7aIbjeGsWFuB2JDrWhbZaLrMDMgFD08AwTXuc/Uuqw+6raVqWpCXLT6yCNT1aNHjzR0UFyqs/Bdtf4/D6vWL0eo1j0jVVvObNVVnNXQRVHUr7/eq44ePVK9ISlKzXurt1qX1VeVa04EiqYasEhfe+5b9MDmPbW8u3kr6f37+1x35m/Edep1nzbZfgG54jvQSEhxgxAEgT59+tKnT19e37SRzV/8jXn3WHCU5WIMbxcQngGLw9/nnQFg4tiMRmIBCiqjKK9tfGJ5ugzK7JZG7eMfnMCgW9sCcOjYmUDRDNx/Hr48ZqSzWaFH1FHkilzEqJt9rn+8O4+1a07QJcVAcowOt6xSUOIkr8jOSy8XcPcNXXz6u89+TI+kGs6UOjlqC6N3gHgGbIU79hjAlL+fxeV2Yd//KI4jy1EuNhy4z503n8WPL0ET+Tv25Rs4UBRKTEovXnxxPXffPfLnXipy5SHsuY/iOLaK0hqFyc+fJa2X/0/8L0fAvLSiKIweNZKiH//L32fdRPdkO6D+nFCkoonoiMaU6HkXUwoDVUZ1W1EdZaj1xcjVR5ArclFt51ER2bZfYfHLx8m8dzLLlj8TCIpAgOOw3W5n3rw5vLdlM+2SQ5n/YCq92omYKAX1Gk8cNFqq3XHsPljHik3fUW0VmDX7UebMmdfsP3ZciqBkWjk537Fu3Vp2fb4Tl8uFOcLAoN7t6HxjFDFmE6FGj+uosTopKbNyKK+U7P/mU++QCQkJYcSIu5kxc1ZQzqWDmktXVJSTnZ3Nvn3f8uOJExQWnqKqqgqHw/Mul8lkIjraQuuU1nTq2Ik+ffvRt2+/gP8561L8JtXS5VBVNaDbtCn4H7TQCKS4b8RQAAAANXRFWHRDb21tZW50AENvbnZlcnRlZCB3aXRoIGV6Z2lmLmNvbSBTVkcgdG8gUE5HIGNvbnZlcnRlciwp4yMAAAAASUVORK5CYII=",
        "mediatype": "image/png"
    }
}
{
    "schema": "olm.channel",
    "name": "4.13",
    "package": "cluster-kube-descheduler-operator",
    "entries": [
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202309181427",
            "skips": [
                "clusterkubedescheduleroperator.4.13.0-202307170916",
                "clusterkubedescheduleroperator.4.13.0-202308221627",
                "clusterkubedescheduleroperator.4.13.0-202309161326",
                "clusterkubedescheduleroperator.4.13.0-202305220955",
                "clusterkubedescheduleroperator.4.13.0-202304190216",
                "clusterkubedescheduleroperator.4.13.0-202302061816",
                "clusterkubedescheduleroperator.4.13.0-202303281554",
                "clusterkubedescheduleroperator.4.13.0-202308281305",
                "clusterkubedescheduleroperator.4.13.0-202307131743",
                "clusterkubedescheduleroperator.4.13.0-202302091829",
                "clusterkubedescheduleroperator.4.13.0-202306070816",
                "clusterkubedescheduleroperator.4.13.0-202303301516",
                "clusterkubedescheduleroperator.4.13.0-202307072116",
                "clusterkubedescheduleroperator.4.13.0-202306261929",
                "clusterkubedescheduleroperator.4.13.0-202307242035",
                "clusterkubedescheduleroperator.4.13.0-202303180002",
                "clusterkubedescheduleroperator.4.13.0-202303231342",
                "clusterkubedescheduleroperator.4.13.0-202307100954",
                "clusterkubedescheduleroperator.4.13.0-202305262054"
            ],
            "skipRange": ">=4.10.0 <4.13.0-202309181427"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "stable",
    "package": "cluster-kube-descheduler-operator",
    "entries": [
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202310201027",
            "skipRange": ">=4.11.0 <4.14.0-202310201027"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202311021650",
            "skipRange": ">=4.11.0 <4.14.0-202311021650"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202311211133",
            "skipRange": ">=4.11.0 <4.14.0-202311211133"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202401161152",
            "skipRange": ">=4.11.0 <4.14.0-202401161152"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202401292111",
            "skipRange": ">=4.11.0 <4.14.0-202401292111"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202402081809",
            "skipRange": ">=4.11.0 <4.14.0-202402081809"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202403222237",
            "skipRange": ">=4.11.0 <4.14.0-202403222237"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202404030309",
            "skipRange": ">=4.11.0 <4.14.0-202404030309"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202404161544",
            "skipRange": ">=4.11.0 <4.14.0-202404161544"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202405070741",
            "skipRange": ">=4.11.0 <4.14.0-202405070741"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202405141639",
            "skipRange": ">=4.11.0 <4.14.0-202405141639"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202405222237",
            "skipRange": ">=4.11.0 <4.14.0-202405222237"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202407021509",
            "skipRange": ">=4.11.0 <4.14.0-202407021509"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202408070332",
            "skipRange": ">=4.11.0 <4.14.0-202408070332"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202408260910",
            "skipRange": ">=4.11.0 <4.14.0-202408260910"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202409240108",
            "skipRange": ">=4.11.0 <4.14.0-202409240108"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202410091239",
            "skipRange": ">=4.11.0 <4.14.0-202410091239"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202410182001",
            "skipRange": ">=4.11.0 <4.14.0-202410182001"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202411130434",
            "skipRange": ">=4.11.0 <4.14.0-202411130434"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202411261536",
            "skipRange": ">=4.11.0 <4.14.0-202411261536"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202412040905",
            "skipRange": ">=4.11.0 <4.14.0-202412040905"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202412170209",
            "skipRange": ">=4.11.0 <4.14.0-202412170209"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202501150635",
            "skipRange": ">=4.11.0 <4.14.0-202501150635"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202501280211",
            "skipRange": ">=4.11.0 <4.14.0-202501280211"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202502111935",
            "skipRange": ">=4.11.0 <4.14.0-202502111935"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202502191335",
            "skipRange": ">=4.11.0 <4.14.0-202502191335"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202503310335",
            "skips": [
                "clusterkubedescheduleroperator.4.14.0-202405222237",
                "clusterkubedescheduleroperator.4.14.0-202311021650",
                "clusterkubedescheduleroperator.4.14.0-202305180141",
                "clusterkubedescheduleroperator.4.14.0-202404030309",
                "clusterkubedescheduleroperator.4.14.0-202406180708",
                "clusterkubedescheduleroperator.4.14.0-202403222237",
                "clusterkubedescheduleroperator.4.14.0-202310091027",
                "clusterkubedescheduleroperator.4.14.0-202501280211",
                "clusterkubedescheduleroperator.4.14.0-202503110235",
                "clusterkubedescheduleroperator.4.14.0-202409240108",
                "clusterkubedescheduleroperator.4.14.0-202502111935",
                "clusterkubedescheduleroperator.4.14.0-202406290609",
                "clusterkubedescheduleroperator.4.14.0-202403051609",
                "clusterkubedescheduleroperator.4.14.0-202304241531",
                "clusterkubedescheduleroperator.4.14.0-202407021509",
                "clusterkubedescheduleroperator.4.14.0-202307241701",
                "clusterkubedescheduleroperator.4.14.0-202306070816",
                "clusterkubedescheduleroperator.4.14.0-202410182001",
                "clusterkubedescheduleroperator.4.14.0-202403080940",
                "clusterkubedescheduleroperator.4.14.0-202502191335",
                "clusterkubedescheduleroperator.4.14.0-202401161152",
                "clusterkubedescheduleroperator.4.14.0-202310201027",
                "clusterkubedescheduleroperator.4.14.0-202404251737",
                "clusterkubedescheduleroperator.4.14.0-202502170207",
                "clusterkubedescheduleroperator.4.14.0-202503121535",
                "clusterkubedescheduleroperator.4.14.0-202411060037",
                "clusterkubedescheduleroperator.4.14.0-202410091239",
                "clusterkubedescheduleroperator.4.14.0-202501150635",
                "clusterkubedescheduleroperator.4.14.0-202401261353",
                "clusterkubedescheduleroperator.4.14.0-202408070332",
                "clusterkubedescheduleroperator.4.14.0-202412170209",
                "clusterkubedescheduleroperator.4.14.0-202309280149",
                "clusterkubedescheduleroperator.4.14.0-202408260910",
                "clusterkubedescheduleroperator.4.14.0-202412040905",
                "clusterkubedescheduleroperator.4.14.0-202502171705",
                "clusterkubedescheduleroperator.4.14.0-202411130434",
                "clusterkubedescheduleroperator.4.14.0-202307041530",
                "clusterkubedescheduleroperator.4.14.0-202411261536",
                "clusterkubedescheduleroperator.4.14.0-202503171209",
                "clusterkubedescheduleroperator.4.14.0-202310101627",
                "clusterkubedescheduleroperator.4.14.0-202311211133",
                "clusterkubedescheduleroperator.4.14.0-202401292111",
                "clusterkubedescheduleroperator.4.14.0-202405070741",
                "clusterkubedescheduleroperator.4.14.0-202309181402",
                "clusterkubedescheduleroperator.4.14.0-202405141639",
                "clusterkubedescheduleroperator.4.14.0-202404161544",
                "clusterkubedescheduleroperator.4.14.0-202503131537",
                "clusterkubedescheduleroperator.4.14.0-202402081809",
                "clusterkubedescheduleroperator.4.14.0-202308281544"
            ],
            "skipRange": ">=4.11.0 <4.14.0-202503310335"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202309181427",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:b473fba287414d3ccb09aaabc64f463af2c912c322ca2c41723020b216d98d14",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202309181427"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:b473fba287414d3ccb09aaabc64f463af2c912c322ca2c41723020b216d98d14"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:ba0b71ff2a30a069b4a8a8f3c1e0898aaadc6db112e4cc12aff7c77ced7a0405"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:45dc69ad93ab50bdf9ce1bb79f6d98f849e320db68af30475b10b7f5497a1b13"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202310201027",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:3c58df18403c681b637ecb7032c9c925298edf0e8e015dfac4ce10446f54b769",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202310201027"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:3c58df18403c681b637ecb7032c9c925298edf0e8e015dfac4ce10446f54b769"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:ec6d6074ff8275540bbffd0df4eedd30c4b93c6d2f7e3f9eeb920d23bd8ef9a6"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:fa2b5e5668344c76d48330c53f148fe87fd5714afff11460ceb066f971d44431"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202311021650",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:ea86b2d5414480f9907a7536e01f3a0f21445a43f93ec47e3378457b94e4b8ca",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202311021650"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:ea86b2d5414480f9907a7536e01f3a0f21445a43f93ec47e3378457b94e4b8ca"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:526ed7be811dcf033156aa6baaf00eca00979a8ff9a459a50954b0c70aa707ad"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:dd695ce3ef3aaf78ca87fee7ac1b985136da4b640305d0bd85324319e7c08c94"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202311211133",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:9ea096dfeb75dfc5eaee60c4227418a735c2014f8106751655a81e90d42f40ef",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202311211133"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:9ea096dfeb75dfc5eaee60c4227418a735c2014f8106751655a81e90d42f40ef"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:501a551c3949413fdaa7eee1d6578bf40145205452c595afa5852ebd9c00ebe5"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:6ed7264b3c7150fa85fd5794e23ab4f50638ac689e49235f7764a0c9a3abb0a8"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202401161152",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:0cebb1bb28378397971085d649bb08c3585b4292f0a50ba4400f8da4a0b6f239",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202401161152"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:0cebb1bb28378397971085d649bb08c3585b4292f0a50ba4400f8da4a0b6f239"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:213b41114b495bacc8a4e07c61c1149e409fcbdc83ec511087afdec56f0d6306"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:240100d899e0e996d7cb9d8a59b37ba8c9085f4a7716e475a88b024e92bb23ee"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202401292111",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:aaf5e05fb6662a2f899d70554c1837b216a4183ae72d2acd019108dd7b026900",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202401292111"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:aaf5e05fb6662a2f899d70554c1837b216a4183ae72d2acd019108dd7b026900"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:896dbc9789ec5000d6811c22e07cabf404a68e0a5f8b18e7a82ed526fad14423"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:257b69180cc667f2b8c1ce32c60fcd23a119195ad9ba2fdd6a6155ec5290f8cf"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202402081809",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:b148d5cf4943d0341781a0f7c6f2a7116d315c617f8beb65c9e7a24ac99304ff",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202402081809"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:b148d5cf4943d0341781a0f7c6f2a7116d315c617f8beb65c9e7a24ac99304ff"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:c7b198e686dc7117994d71027710ebc6ac0bf21afa436a79794d2e64970c8003"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:257b69180cc667f2b8c1ce32c60fcd23a119195ad9ba2fdd6a6155ec5290f8cf"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202403222237",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:25ae7e9dbbbaeb31e39658a7558f26381d6c059f4603d2160c9c6b883b0df6b7",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202403222237"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:25ae7e9dbbbaeb31e39658a7558f26381d6c059f4603d2160c9c6b883b0df6b7"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:ef269eac3a11ab3b8c6cfc72e98748a82ca998d429ac0af20a786a7506f8920e"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:20865f4586872a40cd30b4be8ee898193c382826343eb7df361d17e2bba7eba0"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202404030309",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:497eaa339af59598fcf2d71a2d4983d934dcb98ebe46b4e66fd3b41e2141f2e4",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202404030309"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:497eaa339af59598fcf2d71a2d4983d934dcb98ebe46b4e66fd3b41e2141f2e4"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:2e943414e8f205e96054fce1a19bfaf6558c4986b67259fc27e271c9ded145fa"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:d2a3b0332bbdb7419bb1fbc95272f76bd29b6853074dfe21a7e0ac3792b82843"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202404161544",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:1338abbe31df1952bff95a8d98223b2aaa791532f0ab201ff3971c400e61b590",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202404161544"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:1338abbe31df1952bff95a8d98223b2aaa791532f0ab201ff3971c400e61b590"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:45f4716010111a95f41db60f4eed7856cb113a54d109f8af6e5ce6d657847010"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:cbd63d274c6c03fdfbe18dfdf787a276e7b72ae6f55dd8dfb9e7b01c2515974a"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202405070741",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:bb115f61e28909102b25a8361f517c38a2516fa95d4445bde8972086ed44ca17",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202405070741"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:bb115f61e28909102b25a8361f517c38a2516fa95d4445bde8972086ed44ca17"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:1011d46cd83f48b7afab989762321250e471948c8cb2293ab98460782ea98c5b"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:941a8d2de7759568cd49a31939360fff36e34054f512acfca5e6591f5946f95e"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202405141639",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:5cb8a460128e9f0386c5758a6ce4f4f998f508c68b215f60c0a88c17300102bd",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202405141639"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:5cb8a460128e9f0386c5758a6ce4f4f998f508c68b215f60c0a88c17300102bd"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:e24860195705a78464021582d90179d2f2fc7878e664045a4bd9f5c885cc3bd5"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:0b4511f0775f8af1c12cf071b94e0b16536ac946b65893a69ed29a9cee9833d8"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202405222237",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:5c2ee01594af02d2968c20bd18ef0cc98ad5715e2b429ef7cd91e19e766dc923",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202405222237"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:5c2ee01594af02d2968c20bd18ef0cc98ad5715e2b429ef7cd91e19e766dc923"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:0287a9fd4bc31137bfed55eeb35dfc0e9bb5b30c0aab1377fe69913d8729edbf"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:eea25fe816becb9c44d7dcbc29c2f472d9def178ab28c601a67fd5d61b9fa527"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202407021509",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:0db1a3b0d3e1fb309a74afc230537f77a1a586a05f1a2640a44096959b0122fe",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202407021509"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:0db1a3b0d3e1fb309a74afc230537f77a1a586a05f1a2640a44096959b0122fe"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:b343284157e429492ed89b3f46c71a6da83892d235bffcfeb538987af735add4"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:6bc05495e54a19307589eb9806df4d4991d63ee9e6f847905b0206d1cb8e4836"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202408070332",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:348f0b218fb37ed2071f367be6d7bdb4e0027c6c6e1e9cdc34c9cc757dc70886",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202408070332"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:348f0b218fb37ed2071f367be6d7bdb4e0027c6c6e1e9cdc34c9cc757dc70886"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:cdd6e202c309ce1b95fb8101a1f915a44b274a5afa725f2f9a59ca2a9d8613e1"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:a6f79d133a54e2adc7bdc3612a405cb17a6b4e3881016d09350cb4bd3042d2e9"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202408260910",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:434fbde89b2c72f67db218fb82ec3be938316feee937639f94ff50e8fecf2087",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202408260910"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6Imt1YmVkZXNjaGVkdWxlcnMub3BlcmF0b3Iub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJvcGVyYXRvci5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiS3ViZURlc2NoZWR1bGVyIiwibGlzdEtpbmQiOiJLdWJlRGVzY2hlZHVsZXJMaXN0IiwicGx1cmFsIjoia3ViZWRlc2NoZWR1bGVycyIsInNpbmd1bGFyIjoia3ViZWRlc2NoZWR1bGVyIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiS3ViZURlc2NoZWR1bGVyIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBkZXNjaGVkdWxlcnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJzcGVjIGhvbGRzIHVzZXIgc2V0dGFibGUgdmFsdWVzIGZvciBjb25maWd1cmF0aW9uIiwicHJvcGVydGllcyI6eyJkZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMgaXMgdGhlIG51bWJlciBvZiBzZWNvbmRzIGJldHdlZW4gZGVzY2hlZHVsZXIgcnVucyIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwibG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoibG9nTGV2ZWwgaXMgYW4gaW50ZW50IGJhc2VkIGxvZ2dpbmcgZm9yIGFuIG92ZXJhbGwgY29tcG9uZW50LiAgSXQgZG9lcyBub3QgZ2l2ZSBmaW5lIGdyYWluZWQgY29udHJvbCwgYnV0IGl0IGlzIGEgc2ltcGxlIHdheSB0byBtYW5hZ2UgY29hcnNlIGdyYWluZWQgbG9nZ2luZyBjaG9pY2VzIHRoYXQgb3BlcmF0b3JzIGhhdmUgdG8gaW50ZXJwcmV0IGZvciB0aGVpciBvcGVyYW5kcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sIm1hbmFnZW1lbnRTdGF0ZSI6eyJkZXNjcmlwdGlvbiI6Im1hbmFnZW1lbnRTdGF0ZSBpbmRpY2F0ZXMgd2hldGhlciBhbmQgaG93IHRoZSBvcGVyYXRvciBzaG91bGQgbWFuYWdlIHRoZSBjb21wb25lbnQiLCJwYXR0ZXJuIjoiXihNYW5hZ2VkfFVubWFuYWdlZHxGb3JjZXxSZW1vdmVkKSQiLCJ0eXBlIjoic3RyaW5nIn0sIm1vZGUiOnsiZGVmYXVsdCI6IlByZWRpY3RpdmUiLCJkZXNjcmlwdGlvbiI6Ik1vZGUgY29uZmlndXJlcyB0aGUgZGVzY2hlZHVsZXIgdG8gZWl0aGVyIGV2aWN0IHBvZHMgKEF1dG9tYXRpYykgb3IgdG8gc2ltdWxhdGUgdGhlIGV2aWN0aW9uIChQcmVkaWN0aXZlKSIsImVudW0iOlsiQXV0b21hdGljIiwiUHJlZGljdGl2ZSJdLCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkQ29uZmlnIjp7ImRlc2NyaXB0aW9uIjoib2JzZXJ2ZWRDb25maWcgaG9sZHMgYSBzcGFyc2UgY29uZmlnIHRoYXQgY29udHJvbGxlciBoYXMgb2JzZXJ2ZWQgZnJvbSB0aGUgY2x1c3RlciBzdGF0ZS4gIEl0IGV4aXN0cyBpbiBzcGVjIGJlY2F1c2UgaXQgaXMgYW4gaW5wdXQgdG8gdGhlIGxldmVsIGZvciB0aGUgb3BlcmF0b3IiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sIm9wZXJhdG9yTG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoib3BlcmF0b3JMb2dMZXZlbCBpcyBhbiBpbnRlbnQgYmFzZWQgbG9nZ2luZyBmb3IgdGhlIG9wZXJhdG9yIGl0c2VsZi4gIEl0IGRvZXMgbm90IGdpdmUgZmluZSBncmFpbmVkIGNvbnRyb2wsIGJ1dCBpdCBpcyBhIHNpbXBsZSB3YXkgdG8gbWFuYWdlIGNvYXJzZSBncmFpbmVkIGxvZ2dpbmcgY2hvaWNlcyB0aGF0IG9wZXJhdG9ycyBoYXZlIHRvIGludGVycHJldCBmb3IgdGhlbXNlbHZlcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sInByb2ZpbGVDdXN0b21pemF0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVDdXN0b21pemF0aW9ucyBjb250YWlucyB2YXJpb3VzIHBhcmFtZXRlcnMgZm9yIG1vZGlmeWluZyB0aGUgZGVmYXVsdCBiZWhhdmlvciBvZiBjZXJ0YWluIHByb2ZpbGVzIiwicHJvcGVydGllcyI6eyJkZXZMb3dOb2RlVXRpbGl6YXRpb25UaHJlc2hvbGRzIjp7ImRlZmF1bHQiOiJNZWRpdW0iLCJkZXNjcmlwdGlvbiI6Ikxvd05vZGVVdGlsaXphdGlvblRocmVzaG9sZHMgZW51bWVyYXRlcyBwcmVkZWZpbmVkIGV4cGVyaW1lbnRhbCB0aHJlc2hvbGRzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlcyBvdmVycmlkZXMgaW5jbHVkZWQgYW5kIGV4Y2x1ZGVkIG5hbWVzcGFjZXMgd2hpbGUga2VlcGluZyB0aGUgZGVmYXVsdCBleGNsdXNpb24gb2YgYWxsIG9wZW5zaGlmdC0qLCBrdWJlLXN5c3RlbSBhbmQgaHlwZXJzaGlmdCBuYW1lc3BhY2VzIiwicHJvcGVydGllcyI6eyJleGNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJpbmNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwb2RMaWZldGltZSI6eyJkZXNjcmlwdGlvbiI6IlBvZExpZmV0aW1lIGlzIHRoZSBsZW5ndGggb2YgdGltZSBhZnRlciB3aGljaCBwb2RzIHNob3VsZCBiZSBldmljdGVkIFRoaXMgZmllbGQgc2hvdWxkIGJlIHVzZWQgd2l0aCBwcm9maWxlcyB0aGF0IGVuYWJsZSB0aGUgUG9kTGlmZXRpbWUgc3RyYXRlZ3ksIHN1Y2ggYXMgTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJmb3JtYXQiOiJkdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwidGhyZXNob2xkUHJpb3JpdHkiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidGhyZXNob2xkUHJpb3JpdHlDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eSIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicHJvZmlsZXMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlcyBzZXRzIHdoaWNoIGRlc2NoZWR1bGVyIHN0cmF0ZWd5IHByb2ZpbGVzIGFyZSBlbmFibGVkIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxlclByb2ZpbGUgYWxsb3dzIGNvbmZpZ3VyaW5nIHRoZSBlbmFibGVkIHN0cmF0ZWd5IHByb2ZpbGVzIGZvciB0aGUgZGVzY2hlZHVsZXIgaXQgYWxsb3dzIG11bHRpcGxlIHByb2ZpbGVzIHRvIGJlIGVuYWJsZWQgYXQgb25jZSwgd2hpY2ggd2lsbCBoYXZlIGN1bXVsYXRpdmUgZWZmZWN0cyBvbiB0aGUgY2x1c3Rlci4iLCJlbnVtIjpbIkFmZmluaXR5QW5kVGFpbnRzIiwiVG9wb2xvZ3lBbmREdXBsaWNhdGVzIiwiTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJEZXZQcmV2aWV3TG9uZ0xpZmVjeWNsZSIsIlNvZnRUb3BvbG9neUFuZER1cGxpY2F0ZXMiLCJFdmljdFBvZHNXaXRoTG9jYWxTdG9yYWdlIiwiRXZpY3RQb2RzV2l0aFBWQyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ1bnN1cHBvcnRlZENvbmZpZ092ZXJyaWRlcyI6eyJkZXNjcmlwdGlvbiI6InVuc3VwcG9ydGVkQ29uZmlnT3ZlcnJpZGVzIGhvbGRzIGEgc3BhcnNlIGNvbmZpZyB0aGF0IHdpbGwgb3ZlcnJpZGUgYW55IHByZXZpb3VzbHkgc2V0IG9wdGlvbnMuICBJdCBvbmx5IG5lZWRzIHRvIGJlIHRoZSBmaWVsZHMgdG8gb3ZlcnJpZGUgaXQgd2lsbCBlbmQgdXAgb3ZlcmxheWluZyBpbiB0aGUgZm9sbG93aW5nIG9yZGVyOiAxLiBoYXJkY29kZWQgZGVmYXVsdHMgMi4gb2JzZXJ2ZWRDb25maWcgMy4gdW5zdXBwb3J0ZWRDb25maWdPdmVycmlkZXMiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBob2xkcyBvYnNlcnZlZCB2YWx1ZXMgZnJvbSB0aGUgY2x1c3Rlci4gVGhleSBtYXkgbm90IGJlIG92ZXJyaWRkZW4uIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiY29uZGl0aW9ucyBpcyBhIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlaXIgc3RhdHVzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvckNvbmRpdGlvbiBpcyBqdXN0IHRoZSBzdGFuZGFyZCBjb25kaXRpb24gZmllbGRzLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiZ2VuZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJnZW5lcmF0aW9ucyBhcmUgdXNlZCB0byBkZXRlcm1pbmUgd2hlbiBhbiBpdGVtIG5lZWRzIHRvIGJlIHJlY29uY2lsZWQgb3IgaGFzIGNoYW5nZWQgaW4gYSB3YXkgdGhhdCBuZWVkcyBhIHJlYWN0aW9uLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiR2VuZXJhdGlvblN0YXR1cyBrZWVwcyB0cmFjayBvZiB0aGUgZ2VuZXJhdGlvbiBmb3IgYSBnaXZlbiByZXNvdXJjZSBzbyB0aGF0IGRlY2lzaW9ucyBhYm91dCBmb3JjZWQgdXBkYXRlcyBjYW4gYmUgbWFkZS4iLCJwcm9wZXJ0aWVzIjp7Imdyb3VwIjp7ImRlc2NyaXB0aW9uIjoiZ3JvdXAgaXMgdGhlIGdyb3VwIG9mIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmciLCJ0eXBlIjoic3RyaW5nIn0sImhhc2giOnsiZGVzY3JpcHRpb24iOiJoYXNoIGlzIGFuIG9wdGlvbmFsIGZpZWxkIHNldCBmb3IgcmVzb3VyY2VzIHdpdGhvdXQgZ2VuZXJhdGlvbiB0aGF0IGFyZSBjb250ZW50IHNlbnNpdGl2ZSBsaWtlIHNlY3JldHMgYW5kIGNvbmZpZ21hcHMiLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoibGFzdEdlbmVyYXRpb24gaXMgdGhlIGxhc3QgZ2VuZXJhdGlvbiBvZiB0aGUgd29ya2xvYWQgY29udHJvbGxlciBpbnZvbHZlZCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlIGlzIHdoZXJlIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmcgaXMiLCJ0eXBlIjoic3RyaW5nIn0sInJlc291cmNlIjp7ImRlc2NyaXB0aW9uIjoicmVzb3VyY2UgaXMgdGhlIHJlc291cmNlIHR5cGUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiBpcyB0aGUgbGFzdCBnZW5lcmF0aW9uIGNoYW5nZSB5b3UndmUgZGVhbHQgd2l0aCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwicmVhZHlSZXBsaWNhcyI6eyJkZXNjcmlwdGlvbiI6InJlYWR5UmVwbGljYXMgaW5kaWNhdGVzIGhvdyBtYW55IHJlcGxpY2FzIGFyZSByZWFkeSBhbmQgYXQgdGhlIGRlc2lyZWQgc3RhdGUiLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJ2ZXJzaW9uIGlzIHRoZSBsZXZlbCB0aGlzIGF2YWlsYWJpbGl0eSBhcHBsaWVzIHRvIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:434fbde89b2c72f67db218fb82ec3be938316feee937639f94ff50e8fecf2087"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:d7c5e113b372d0e4cb16a788abbfe48cc6b7c5305cb769feb10877bb896a8e9c"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:57b684be3f95a60311fa3f410388403fe66f9e7da259241fceba4847c4ce9c86"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202409240108",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:067529e1cd5bf4f0a71c07e59d0e7a79fc6722f682af9dc960aab59e306bedee",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202409240108"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:067529e1cd5bf4f0a71c07e59d0e7a79fc6722f682af9dc960aab59e306bedee"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:533c2e3d1aae02ae1e66a6c36013d2448e8cd86b06f48fd3d0cf82b3073b62c2"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:fceba4d4cccc302f9cea38e6997de7004085e38f8d697ff2a11759d8994c6c51"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202410091239",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:a55aaae65c9f0f37e360bb9d13d26155ec6d3003880d65081938284aed5baf84",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202410091239"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwib3BlcmF0b3Iub3BlbnNoaWZ0LmlvL3YxXCIsXG4gICAgXCJraW5kXCI6IFwiS3ViZURlc2NoZWR1bGVyXCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJjbHVzdGVyXCIsXG4gICAgICBcIm5hbWVzcGFjZVwiOiBcIm9wZW5zaGlmdC1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yXCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImRlc2NoZWR1bGluZ0ludGVydmFsU2Vjb25kc1wiOiAzNjAwLFxuICAgICAgXCJtYW5hZ2VtZW50U3RhdGVcIjogXCJNYW5hZ2VkXCIsXG4gICAgICBcIm1vZGVcIjogXCJQcmVkaWN0aXZlXCIsXG4gICAgICBcInByb2ZpbGVzXCI6IFtcIkFmZmluaXR5QW5kVGFpbnRzXCJdXG4gICAgfVxuICB9XG5dXG4iLCJjYXBhYmlsaXRpZXMiOiJCYXNpYyBJbnN0YWxsIiwiY2F0ZWdvcmllcyI6Ik9wZW5TaGlmdCBPcHRpb25hbCIsImNlcnRpZmllZCI6ImZhbHNlIiwiY29udGFpbmVySW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0NC9vc2UtY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yQHNoYTI1NjoyMWNkOTU3YzVmNTA2M2Q1OWY5YjNkNjljY2E4ZWEyYjhhOGU2MjU4MWUzODU3MjNmYmI5MDM1ZjEyOWY1NDJhIiwiY3JlYXRlZEF0IjoiMjAyMS8xMC8xMyIsImRlc2NyaXB0aW9uIjoiQW4gb3BlcmF0b3IgdG8gcnVuIGRlc2NoZWR1bGVyIGluIE9wZW5zaGlmdCBjbHVzdGVyLiIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vY25mIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL2NuaSI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9jc2kiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vZGlzY29ubmVjdGVkIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL2ZpcHMtY29tcGxpYW50IjoidHJ1ZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vcHJveHktYXdhcmUiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdGxzLXByb2ZpbGVzIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3Rva2VuLWF1dGgtYXdzIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3Rva2VuLWF1dGgtYXp1cmUiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdG9rZW4tYXV0aC1nY3AiOiJmYWxzZSIsIm9sbS5za2lwUmFuZ2UiOiJcdTAwM2U9NC4xMS4wIFx1MDAzYzQuMTQuMC0yMDI0MTAwOTEyMzkiLCJvcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3ZhbGlkLXN1YnNjcmlwdGlvbiI6IltcIk9wZW5TaGlmdCBLdWJlcm5ldGVzIEVuZ2luZVwiLCBcIk9wZW5TaGlmdCBDb250YWluZXIgUGxhdGZvcm1cIiwgXCJPcGVuU2hpZnQgUGxhdGZvcm0gUGx1c1wiXSIsInJlcG9zaXRvcnkiOiJodHRwczovL2dpdGh1Yi5jb20vb3BlbnNoaWZ0L2NsdXN0ZXIta3ViZS1kZXNjaGVkdWxlci1vcGVyYXRvciIsInN1cHBvcnQiOiJSZWQgSGF0LCBJbmMuIn0sImxhYmVscyI6eyJvcGVyYXRvcmZyYW1ld29yay5pby9hcmNoLmFtZDY0Ijoic3VwcG9ydGVkIiwib3BlcmF0b3JmcmFtZXdvcmsuaW8vYXJjaC5hcm02NCI6InN1cHBvcnRlZCIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2gucHBjNjRsZSI6InN1cHBvcnRlZCIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2guczM5MHgiOiJzdXBwb3J0ZWQifSwibmFtZSI6ImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNDEwMDkxMjM5IiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IifSwic3BlYyI6eyJjdXN0b21yZXNvdXJjZWRlZmluaXRpb25zIjp7Im93bmVkIjpbeyJkZXNjcmlwdGlvbiI6Ikt1YmVEZXNjaGVkdWxlciBpcyB0aGUgU2NoZW1hIGZvciB0aGUgZGVzY2hlZHVsZXJzIEFQSSIsImRpc3BsYXlOYW1lIjoiS3ViZSBEZXNjaGVkdWxlciIsImdyb3VwIjoib3BlcmF0b3Iub3BlbnNoaWZ0LmlvIiwia2luZCI6Ikt1YmVEZXNjaGVkdWxlciIsIm5hbWUiOiJrdWJlZGVzY2hlZHVsZXJzLm9wZXJhdG9yLm9wZW5zaGlmdC5pbyIsInZlcnNpb24iOiJ2MSJ9XX0sImRlc2NyaXB0aW9uIjoiVGhlIEt1YmUgRGVzY2hlZHVsZXIgT3BlcmF0b3IgcHJvdmlkZXMgdGhlIGFiaWxpdHkgdG8gZXZpY3QgYSBydW5uaW5nIHBvZCBzbyB0aGF0IHRoZSBwb2QgY2FuIGJlIHJlc2NoZWR1bGVkIG9udG8gYSBtb3JlIHN1aXRhYmxlIG5vZGUuXG5cblRoZXJlIGFyZSBzZXZlcmFsIHNpdHVhdGlvbnMgd2hlcmUgZGVzY2hlZHVsaW5nIGNhbiBiZW5lZml0IHlvdXIgY2x1c3RlcjpcblxuKiBOb2RlcyBhcmUgdW5kZXJ1dGlsaXplZCBvciBvdmVydXRpbGl6ZWQuXG4qIFBvZCBhbmQgbm9kZSBhZmZpbml0eSByZXF1aXJlbWVudHMsIHN1Y2ggYXMgdGFpbnRzIG9yIGxhYmVscywgaGF2ZSBjaGFuZ2VkIGFuZCB0aGUgb3JpZ2luYWwgc2NoZWR1bGluZyBkZWNpc2lvbnMgYXJlIG5vIGxvbmdlciBhcHByb3ByaWF0ZSBmb3IgY2VydGFpbiBub2Rlcy5cbiogTm9kZSBmYWlsdXJlIHJlcXVpcmVzIHBvZHMgdG8gYmUgbW92ZWQuXG4qIE5ldyBub2RlcyBhcmUgYWRkZWQgdG8gY2x1c3RlcnMuXG5cbiMjIERlc2NoZWR1bGVyIFByb2ZpbGVzXG5cbk9uY2UgdGhlIG9wZXJhdG9yIGlzIGluc3RhbGxlZCwgeW91IGNhbiBjb25maWd1cmUgb25lIG9yIG1vcmUgcHJvZmlsZXMgdG8gaWRlbnRpZnkgcG9kcyB0byBldmljdC4gVGhlIHNjaGVkdWxlciB3aWxsIHNjaGVkdWxlIHRoZSByZXBsYWNlbWVudCBvZiB0aGUgZXZpY3RlZCBwb2RzLlxuXG5UaGUgZm9sbG93aW5nIHByb2ZpbGVzIGFyZSBhdmFpbGFibGU6XG5cbiogQWZmaW5pdHlBbmRUYWludHNcbiogVG9wb2xvZ3lBbmREdXBsaWNhdGVzXG4qIFNvZnRUb3BvbG9neUFuZER1cGxpY2F0ZXNcbiogTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb25cbiogRXZpY3RQb2RzV2l0aFBWQ1xuKiBFdmljdFBvZHNXaXRoTG9jYWxTdG9yYWdlXG5cblRoZXNlIHByb2ZpbGVzIGFyZSBkb2N1bWVudGVkIGluIGRldGFpbCBpbiB0aGUgW2Rlc2NoZWR1bGVyIG9wZXJhdG9yIFJFQURNRV0oaHR0cHM6Ly9naXRodWIuY29tL29wZW5zaGlmdC9jbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IjcHJvZmlsZXMpLlxuXG4jIyBBZGRpdGlvbmFsIFBhcmFtZXRlcnNcblxuSW4gYWRkaXRpb24gdG8gdGhlIHByb2ZpbGVzLCB0aGUgZm9sbG93aW5nIHBhcmFtZXRlcnMgY2FuIGJlIGNvbmZpZ3VyZWQ6XG5cbiogYGRlc2NoZWR1bGluZ0ludGVydmFsU2Vjb25kc2AgLSBTZXQgdGhlIG51bWJlciBvZiBzZWNvbmRzIGJldHdlZW4gZGVzY2hlZHVsZXIgcnVucy4gQSB2YWx1ZSBvZiBgMGAgaW4gdGhpcyBmaWVsZCBydW5zIHRoZSBkZXNjaGVkdWxlciBvbmNlIGFuZCBleGl0cy5cbiogYHByb2ZpbGVDdXN0b21pemF0aW9uc2AgLSBBbGxvd3MgY2VydGFpbiBwcm9maWxlIHBhcmFtZXRlcnMgdG8gYmUgdHdlYWtlZCwgc3VjaCBhcyBgcG9kTGlmZXRpbWVgIChzZWUgW1JFQURNRV0oaHR0cHM6Ly9naXRodWIuY29tL29wZW5zaGlmdC9jbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IjcHJvZmlsZS1jdXN0b21pemF0aW9ucykgZm9yIG1vcmUgaW5mbykuXG4iLCJkaXNwbGF5TmFtZSI6Ikt1YmUgRGVzY2hlZHVsZXIgT3BlcmF0b3IiLCJpY29uIjpbeyJiYXNlNjRkYXRhIjoiaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUR3QUFBQThDQVlBQUFBNi9ObHlBQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUdFUUFBQmhFQkZtdXRBZ0FBQUJKMFJWaDBVMjltZEhkaGNtVUFaWHBuYVdZdVkyOXRvTU96V0FBQURqQkpSRUZVYUlIRm0zbGdGTlVkeHorek0zdm1aSlBOVFpBZ2QrV0tRUkFJQ0Vpd0tFZ2hGaEZGam9vRnVlUVFLRlpSd0FxbzViQlFML0FHeGJNVkFvSVNVV2xOdUJRSVNFSWdrR0RJSGJMWmMyYjZ4K3FHSlFoa3MydS9mKzIrZWUvM3Z0OTliMzdIbTFsQlZWV1YveE9xS2l1cHJLcENWVlVNQmdPeHNiRm90ZHFnemlrRjFmcGxxSzJ0WmV0N1c4ajZiQ3RIamg0bklsUWlNa3lIVmhTNFdDOVRXbWtuTER5VXRMU2VETTRZenBBaEdaaE1wb0J5RUg2TEZiNXc0UUwvWEwrYWQ5OStpeUdwSVF4TDAzTnpleU02clJaQkY0RWc2a0VRUVhaU1dIU2VYZnRyeUQ2cWNPUlVQWDhjY3crUHpKeFBURXhNUUxnRVZiQ2lLTHo2eWdaZVdQVXNtZW1oVEJ3U2pzVWNpaFRkRTQzNUpzU1FaQlEwN01yTzRkUHRlOW1kbllQRDZVUW5pU2lxak94MllYZktDSUxJQStQSHMzejVDZ1JCYUJhbm9Ba3VLanJEakttVFVLeG5XREdwQmNrSlVVaHgvWkZpYmtVUURUaWRUalovdUl1VmE5L0NacmR6OFdMOXI5clNBSUpHSURvNm11eTkrekNielg3ekNvcmcvYm01akIrWHlVTjNoREFoSXhLZHBTZmFWaU1RUkNNQWUvY2Q0cytQUGt1OXpZYTEzbjdkZGtXTmdERWtoQjkreUNNa0pNUXZiZ0VYbkpXMWpkblRIK2JaU1MwWTNETWVYY3E5aUJFZEFhaTMyZm5MMGcxODhsazIxbnFiWC9ZMUdvR3VYYnV4WStkdXY4WUhWUERPblR1WU9XMHlyOHlPcFVmbmx1amEvUW1OSVJxQUMrVlYvR0hjZklxS1MzRTRuTDRrQkdnYUM0RnQyN080K2VhMEpuUFVOSG5FcitEUW9ZTk1uenFKOWRNdDlPamFIbjNIR1Y2eCtZWG5HRGg4S3FlTHp2dUlGUVFZMVMrU3IxNW95NnR6azlGS0hvZVVFSDMxV0N4cVlObXlwL3ppR1pBVkxpNHVadWpnZml3ZUU4YncyOXFpN3pUZGU3K2VMaXJoOXBIVHFiUGFVQlRGTzZaVEt3TlBqbzhqdFcxRG5OMzZWVFU3Y2k5aWlSRFpzcWY2cW5PR21Fd1Vuam5YWks3TlhtRlZWWmsrYlRJamV1dTVLejBKZmZ1SHZHSXJxMm9ZT1c0KzFubzdpcUl3ZG1BTG9pTkVBRG9rRytpYVl2U3hOVG85a2hkbkpGRlE0bXcweitXb3QvdnBBL3dhZFFsZWZlV2ZYRGlYeDV4TUMvcTJreEIwa1FBNG5TNUdqMTlJV1hrMXNpd3pvR3NvVDArSTU4M0hic0FjSnZIaDNtcWUySFMra1QyZEpKQmY0cmptdktxaTRzL21iSmJnNHVKaWxpOWR3dk1QUlJPU1BCUk5TSkwzMnJPcjM2U2c4Qnd1dHh1QWNZTTlzYk5kU3owYjU3VUVZUE9lYWpidXFQQ3hXVmJqcHJwT0J2RGUwMWVDSUlBc3kwM20zQ3pCTDZ4NmhxRnA0ZHpVdVFQYStFSGU5djJIanZQUzZ4OWgvOWxCSlVSclNlL1NFRGZQbGJ1OW41OTU1d0tIOGh1MjU4bGl6K3FtZHdubHd5V3RDVGVKVjV4YnJ6Y2dTVTB2QmZ3dUhzNmNPYzM3Vzk4bmEva042RnFOOHZ6a2dOc3Q4NmRaeTNDNkdrVGRON0FGb3FaaHRkN2VYZW45ZkZPS2daUUVIVjhjdk1nWEIrdllkZUFpYlpQMHJKbVdSSmhKdy9wWlNVeFljUmFudThIaEFTUWtKUHJGMjIvQkc5YXY0ODVlRWFSMFNFVVQwakQ1ZTUvc3BxS3ExaHRZZFpMQTZQUVczdXVuZjNLdzc1alYrOTN1VUxsbDJrbXZvSmhJaWRmbUpCTm04bXkrWGgxRFdERWxnZG4vT09lTjFhSkdRMnBxcWwrOC9kclNicmViVHo3NmdGRjlRNUVTTTd6dExwZWI1YXMyWXJjMU9KMk10SEN2WndaNGMxZTFUNUp4L0t6ZFovWG0zaFBUS0E3L3ZtY1lMUzA2NzNlZFhzK3dZWGY2UTkyL0ZmNTY3MTRrall0ZXFaM1JHT085N1IvOWV3OTFWdDhpb0VkYkkwY0tQZmVvckFoOHVQZnE4WFhGbGxKdTZXQWk2V2VCcDg0N2VlYmRVczZXT1ltT0VDbXZrWEc1WFBRZmNKcy8xUDBUL1BuT0xBWjNOeUZGOS9CcGYvdjlMR3gyMzVDeTVJMmZtbVM3dkVabTRxb2kvakV6bVRkMlZyQmxUelh0RXZWc210ZUt4emVkUjZOUjZkdTNuOS9GZzE5Yit1aVJBM1JNMWlHWnUzcmJLaXFyeVRsNDdJcjl6V0VTNjJhMHhLQzlkaTBiYjVZb0tIR1M4VmcrKzMrMHNXWmFJcDh1VGFIT3JsQjB3WWtrYVprNWE3WS90QUUvQlI4L2ZwS09LWEVJMmxCdjI2NDlPZWoxdWtaOWU3WTM4ZTlsS2R5UkZzWnQzVUliWGI4VW9VWU5UNDZQcDIyaW51ZW1KUERwMHRaa3BJVWpDUERLOW5JUW9NMk5iZWpUcDY4L3RBRS90clROWnFPeXVwYms1SlkrN1VlUG44SjVXV0V3ZmtnVUM4YkVlQk9JdTNwSHNEM240cS9hWGpRMmp2NWRRaG5ZUFl4TG9oamZIcTNqNEVrYkJvT0JCWTh0YkNwbEh6Ulo4Qy9aalRZMDFxZjk0QThuY01zZWJ4c1pKdkxjbEVRR2RQVmQwUUhkd2dnM2lkVFdOODZRMHJ1RWNrLy9TQzQvd1RsV1pPZXhsejBwcU1VU1RjYlFPNXBLMlFkTkZpeEpFb0lnNEpCOWg1NHRMdlYrdG9STGZKNWJTLzh1b1Y0Qmh3dHMvRkJvSXpGYVMyMlJyK0F3azRabEUrTjl4QmFYdTFqL2FUbnZmMVdOVzFZeEdvM01uNzhRamFaNTZYK1RCUnNNQmhMakxSU2NxYVJWbDRaMlJXNElyaWVMSFF4T0RmTVJzT1ROOHh3dXVQSnh6dHpNR0JLaVBMRlhWbFQrOHVwNVB2cW1CdmNsTmswbUV5UC9NS3FwZEJ2QnI1K3JhN2Z1NUh5Zjc5TW1pZzJtdEpMQWZZTWFEdHIrazJmMWl1MThnNUVuNzQvekdidjhuVkttcnozSGdaT2VlUDNMcXY0Q285SEk3RWZub05NMWRvcE5oVitDUjJlTzVmMGRKMUZrbDdldFRldUdTbWw0N3dqaXpRMmI1OVh0bGJSUDByTjJlaEtmUE5XYXdUZUgrOWh6dUZTMmZWZEw1bE9GWkQ1MTJzZGhBV2hFa1hIakh2Q0hhaVA0SlhoSXhsQU1wZ2hlV2prRFYvRU9WSmVWbmowNm85ZDV0dVV2cFNCNE1xWEVLQzJmTFcvRDczdDZRb3p1S2pmUzRRSWJ5aVdwcDhGb1lOcTBSd0wyQk1JdndWcXRsblViTnJKcVN3bjVCLzZGN2ZEVDNOV3REcGZiNDR4YXhUYmt3cHQyVlBEUXNDaWYrN21xVHJuYzVLOURoY21USC9LSDVoWGh0OHZyM3IwN0V5Wk5ZY0ZybGFpeWsxYkdrL1RxWUVRckNiendRUmtBbFJmZDJKMnF0eGc0WCtubTZiZEtHYjY0NExybTBPdjFQRGhoSXBHUmtmN1NiSVJtSGVJNW5RNEc5ZS9OL2VsTzdoc1l5VTlWYmdiTnphZmVvYkJvck1jeHBiVTNFZHRDWXNPL3l0bjhaWFdqdXZacTBHcTE3RDl3bUxpNHVHdDN2azQwKzlSeWYyNHVZektIczIxWlN4S2l0R3pkVzgzaTEzN0M1VmFJaVpTNHBWTUlPNzZyeGU1cTJqUmFyWlpSbzBhelp1Mkx6YUhYQ0FFNXBsMjRZQzRGQno1aDR4eFA5alZtNldrT25MVGhrdjAzTFVrU1gzK3pqNVNVTnMybDU0T0FITVEvL3RlbktDelQ4ZkUzTlFBODkzQWk0cFdQb3E0TG9paHkrKzFEQWk0V0FpVFlaREx4L0pyMUxIbW5rdklhbWNSb0xRditHSXRCNTkralRZMUd3NXk1OHdKQnJiSHRRQm5xMXkrZG9SbDNzdVJ0endIZC9VUE10RTAwSUYyZVJWd0Rna1lnTFMyTkxsMjZYcnV6SHdpWVlJQ2x6NnhrZjRIQ2pweGFOQUtzbnBaSVUzTjluYVRqc1FXTEFrbkxCd0VWSEI0ZXpvcm4xdkw0RzVYVVdHVmF4K21ZTWRLQ1FYZjkwN1J1azBMdjNyY0drcFlQQWlvWUlDTmpLTDF1VFdmWnUxVUFUTGt6aXBZV3JjKzU5Sy9CWURTd2VQRmZBMDNKQndFWERMRHkrYlY4Y2RqT1Z6OVlrVVNCTlk5YzM5YTJSRnNZUFBqMllGRHlJaWlDemVZb2xqejlOeFp0cXNCcVYralEwc0RrTzh4WDlkb0dvNEdGaXhZM3U4Qy9Gb0w2RnMrOTk0eWdwZTRFVDl3ZmpkT3RNSGgrQWNWbExwOXE2QmRZTERFYy92NklYOCtMbW9LZy9welByOTdBeC91czVKeW9SeWRwV0RNMUNWRnN2TXFTSkRGbnp0eWdpNFVnQzQ2UGoyZmhvaWRZOEZvRmRwZEt0eHVOakJuUW9wSFgxdW4wakwxdlhEQ3BlQkhjR3dZWVAyRWlzWW50V1AyUkp5RlpPRGFXQ0pQb1V4OVBuejREZzhFUWJDckFiL1RxNGFsVEJZeS9QeE5KdnNpOTZYcml6Q0pUVjUvRDZWWVJSWkhqSi9LSmlJZ0lOZzBneUlKVlp6VnlSUzVLMVdFVWF5RzVCL1BZL1BrWmRoK29KZFFnVUZUbUlyMWJGRzh1dnhOTldCdEVjM2MwNWg3ZWQwU0NnYUFJVnFxUDREejlEdktGYjBGMWd5RGhFT09vdGh1cHM0dVUxYnJZOWUxcDN0bWV4OFluKzlHak5XamxNbEFWQk1tRUdEY1FiZXR4YUV4SjE1NnNpUWlzWU5tQjQ5Z3EzQ1ZacUlMRWlRb0xtM2VYOHNIT1BPcHM3cXNPdGJRd2N0K3czekVxUFpLa2tQTWdpT2hTSGtEYjVrR2dlUytVWG9yQUNWWVY3TG16a0NzUGNMUWtoQ2tyRDFOYzVxUmp4MDcwNjVkT3QrN2RTVWxwUTFTVW1mRHdDQlJGcHE2dWpwS1NFazZkT3NYKzNCeXlzN001ZTdhSWJqZUdzV0Z1QjJKRHJXaGJaYUxyTURNZ0ZEMDhBd1RYdWMvVXVxdys2cmFWcVdwQ1hMVDZ5Q05UMWFOSGp6UjBVRnlxcy9CZHRmNC9ENnZXTDBlbzFqMGpWVnZPYk5WVm5OWFFSVkhVcjcvZXE0NGVQVks5SVNsS3pYdXJ0MXFYMVZlVmEwNEVpcVlhc0VoZmUrNWI5TURtUGJXOHUza3I2ZjM3KzF4MzVtL0VkZXAxbnpiWmZnRzU0anZRU0VoeGd4QUVnVDU5K3RLblQxOWUzN1NSelYvOGpYbjNXSENVNVdJTWJ4Y1FuZ0dMdzkvbm5RRmc0dGlNUm1JQkNpcWpLSzl0ZkdKNXVneks3SlpHN2VNZm5NQ2dXOXNDY09qWW1VRFJETngvSHI0OFpxU3pXYUZIMUZIa2lsekVxSnQ5cm4rOE80KzFhMDdRSmNWQWNvd090NnhTVU9Ja3I4ak9TeThYY1BjTlhYejZ1ODkrVEkra0dzNlVPamxxQzZOM2dIZ0diSVU3OWhqQWxMK2Z4ZVYyWWQvL0tJNGp5MUV1Tmh5NHo1MDNuOFdQTDBFVCtUdjI1UnM0VUJSS1RFb3ZYbnh4UFhmZlBmTG5YaXB5NVNIc3VZL2lPTGFLMGhxRnljK2ZKYTJYLzAvOEwwZkF2TFNpS0l3ZU5aS2lILy9MMzJmZFJQZGtPNkQrbkZDa29vbm9pTWFVNkhrWFV3b0RWVVoxVzFFZFphajF4Y2pWUjVBcmNsRnQ1MUVSMmJaZllmSEx4OG04ZHpMTGxqOFRDSXBBZ09PdzNXNW4zcnc1dkxkbE0rMlNRNW4vWUNxOTJvbVlLQVgxR2s4Y05GcXEzWEhzUGxqSGlrM2ZVVzBWbURYN1VlYk1tZGZzUDNaY2lxQmtXams1MzdGdTNWcDJmYjRUbDh1Rk9jTEFvTjd0Nkh4akZERm1FNkZHait1b3NUb3BLYk55S0srVTdQL21VKytRQ1FrSlljU0l1NWt4YzFaUXpxV0Rta3RYVkpTVG5aM052bjNmOHVPSkV4UVducUtxcWdxSHcvTXVsOGxrSWpyYVF1dVUxblRxMklrK2ZmdlJ0MisvZ1A4NTYxTDhKdFhTNVZCVk5hRGJ0Q240SDdUUUNLUzRiOFJRQUFBQU5YUkZXSFJEYjIxdFpXNTBBRU52Ym5abGNuUmxaQ0IzYVhSb0lHVjZaMmxtTG1OdmJTQlRWa2NnZEc4Z1VFNUhJR052Ym5abGNuUmxjaXdwNHlNQUFBQUFTVVZPUks1Q1lJST0iLCJtZWRpYXR5cGUiOiJpbWFnZS9wbmcifV0sImluc3RhbGwiOnsic3BlYyI6eyJjbHVzdGVyUGVybWlzc2lvbnMiOlt7InJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiY29uZmlnLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsic2NoZWR1bGVycyJdLCJ2ZXJicyI6WyJnZXQiLCJ3YXRjaCIsImxpc3QiXX0seyJhcGlHcm91cHMiOlsibW9uaXRvcmluZy5jb3Jlb3MuY29tIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlbW9uaXRvcnMiXSwidmVyYnMiOlsiKiJdfSx7ImFwaUdyb3VwcyI6WyJvcGVyYXRvci5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImt1YmVkZXNjaGVkdWxlcnMiLCJrdWJlZGVzY2hlZHVsZXJzL3N0YXR1cyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsic2VydmljZXMiLCJjb25maWdtYXBzIiwic2VjcmV0cyIsImV2ZW50cyIsInNlcnZpY2VhY2NvdW50cyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsibmFtZXNwYWNlcyIsInBvZHMiXSwidmVyYnMiOlsiZ2V0Iiwid2F0Y2giLCJsaXN0Il19LHsiYXBpR3JvdXBzIjpbInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImNsdXN0ZXJyb2xlcyIsImNsdXN0ZXJyb2xlYmluZGluZ3MiLCJyb2xlcyIsInJvbGViaW5kaW5ncyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbImFwcHMiXSwicmVzb3VyY2VzIjpbInJlcGxpY2FzZXRzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCJdfSx7ImFwaUdyb3VwcyI6WyJhcHBzIl0sInJlc291cmNlcyI6WyJkZXBsb3ltZW50cyIsImRlcGxveW1lbnRzL3NjYWxlIl0sInZlcmJzIjpbIioiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCIsImNyZWF0ZSIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJjb25maWcub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJpbmZyYXN0cnVjdHVyZXMiLCJhcGlzZXJ2ZXJzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCJdfV0sInNlcnZpY2VBY2NvdW50TmFtZSI6Im9wZW5zaGlmdC1kZXNjaGVkdWxlciJ9XSwiZGVwbG95bWVudHMiOlt7Im5hbWUiOiJkZXNjaGVkdWxlci1vcGVyYXRvciIsInNwZWMiOnsicmVwbGljYXMiOjEsInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7Im5hbWUiOiJkZXNjaGVkdWxlci1vcGVyYXRvciJ9fSwidGVtcGxhdGUiOnsibWV0YWRhdGEiOnsibGFiZWxzIjp7Im5hbWUiOiJkZXNjaGVkdWxlci1vcGVyYXRvciJ9fSwic3BlYyI6eyJjb250YWluZXJzIjpbeyJhcmdzIjpbIm9wZXJhdG9yIl0sImNvbW1hbmQiOlsiY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yIl0sImVudiI6W3sibmFtZSI6IldBVENIX05BTUVTUEFDRSIsInZhbHVlRnJvbSI6eyJmaWVsZFJlZiI6eyJmaWVsZFBhdGgiOiJtZXRhZGF0YS5uYW1lc3BhY2UifX19LHsibmFtZSI6Ik9QRVJBVE9SX05BTUUiLCJ2YWx1ZSI6ImRlc2NoZWR1bGVyLW9wZXJhdG9yIn0seyJuYW1lIjoiSU1BR0UiLCJ2YWx1ZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQ0L29zZS1kZXNjaGVkdWxlckBzaGEyNTY6ODlmY2FmMWQ5Zjg0MjZhZDJjOWY5Y2QyMjk0MmE3ODE3MmVkOTlhYmQ1NDI1OWUxMWFlYjAwMTY0MWRkNjE3OSJ9XSwiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0NC9vc2UtY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yQHNoYTI1NjoyMWNkOTU3YzVmNTA2M2Q1OWY5YjNkNjljY2E4ZWEyYjhhOGU2MjU4MWUzODU3MjNmYmI5MDM1ZjEyOWY1NDJhIiwiaW1hZ2VQdWxsUG9saWN5IjoiQWx3YXlzIiwibmFtZSI6ImRlc2NoZWR1bGVyLW9wZXJhdG9yIiwicG9ydHMiOlt7ImNvbnRhaW5lclBvcnQiOjYwMDAwLCJuYW1lIjoibWV0cmljcyJ9XSwicmVzb3VyY2VzIjp7InJlcXVlc3RzIjp7ImNwdSI6IjEwbSIsIm1lbW9yeSI6IjUwTWkifX0sInNlY3VyaXR5Q29udGV4dCI6eyJhbGxvd1ByaXZpbGVnZUVzY2FsYXRpb24iOmZhbHNlLCJjYXBhYmlsaXRpZXMiOnsiZHJvcCI6WyJBTEwiXX19fV0sInNlY3VyaXR5Q29udGV4dCI6eyJydW5Bc05vblJvb3QiOnRydWUsInNlY2NvbXBQcm9maWxlIjp7InR5cGUiOiJSdW50aW1lRGVmYXVsdCJ9fSwic2VydmljZUFjY291bnROYW1lIjoib3BlbnNoaWZ0LWRlc2NoZWR1bGVyIn19fX1dfSwic3RyYXRlZ3kiOiJkZXBsb3ltZW50In0sImluc3RhbGxNb2RlcyI6W3sic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiT3duTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOnRydWUsInR5cGUiOiJTaW5nbGVOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJNdWx0aU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6IkFsbE5hbWVzcGFjZXMifV0sImtleXdvcmRzIjpbInNjaGVkdWxpbmciLCJkZXNjaGVkdWxlciIsIndvcmtsb2FkIl0sImxhYmVscyI6eyJvbG0tb3duZXItZW50ZXJwcmlzZS1hcHAiOiJjbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IiLCJvbG0tc3RhdHVzLWRlc2NyaXB0b3JzIjoiY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yLnY0LjE0LjAifSwibGlua3MiOlt7Im5hbWUiOiJTb3VyY2UgQ29kZSIsInVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuc2hpZnQvY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yIn1dLCJtYWludGFpbmVycyI6W3siZW1haWwiOiJzdXBwb3J0QHJlZGhhdC5jb20iLCJuYW1lIjoiUmVkIEhhdCJ9XSwibWF0dXJpdHkiOiJiZXRhIiwibWluS3ViZVZlcnNpb24iOiIxLjI3LjAiLCJwcm92aWRlciI6eyJuYW1lIjoiUmVkIEhhdCwgSW5jLiJ9LCJyZWxhdGVkSW1hZ2VzIjpbeyJpbWFnZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQ0L29zZS1jbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3JAc2hhMjU2OjIxY2Q5NTdjNWY1MDYzZDU5ZjliM2Q2OWNjYThlYTJiOGE4ZTYyNTgxZTM4NTcyM2ZiYjkwMzVmMTI5ZjU0MmEiLCJuYW1lIjoib3NlLWNsdXN0ZXIta3ViZS1kZXNjaGVkdWxlci1vcGVyYXRvciJ9LHsiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0NC9vc2UtZGVzY2hlZHVsZXJAc2hhMjU2Ojg5ZmNhZjFkOWY4NDI2YWQyYzlmOWNkMjI5NDJhNzgxNzJlZDk5YWJkNTQyNTllMTFhZWIwMDE2NDFkZDYxNzkiLCJuYW1lIjoib3NlLWRlc2NoZWR1bGVyIn1dLCJza2lwcyI6WyJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjMwODI4MTU0NCIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNDA2MjkwNjA5IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDUwNzA3NDEiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQwODI2MDkxMCIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyMzA5MTgxNDAyIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDIzMDkyODAxNDkiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQwODE1MTAzOSIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyMzExMDIxNjUwIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDcwMjE1MDkiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQwODEzMjAxMyIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNDAzMDgwOTQwIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDIzMTAyMDEwMjciLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQwODE5MTA0MSIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNDAxMjkyMTExIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDMwNTE2MDkiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQwMTI2MTM1MyIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyMzA0MjQxNTMxIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDUxNDE2MzkiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQwNDI1MTczNyIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyMzA1MTgwMTQxIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDIwODE4MDkiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjMxMTIxMTEzMyIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNDA4MTkwMTQxIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDYxODA3MDgiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjMxMDA5MTAyNyIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyMzEwMTAxNjI3IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDgyMTE5NDAiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQwMzIyMjIzNyIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNDA1MjIyMjM3IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDIzMDcwNDE1MzAiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQwNDE2MTU0NCIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyMzA2MDcwODE2IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDExNjExNTIiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQwODA3MDMzMiIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyMzA3MjQxNzAxIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDQwMzAzMDkiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQwODIwMTg0MiIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNDA5MjQwMTA4Il0sInZlcnNpb24iOiI0LjE0LjAtMjAyNDEwMDkxMjM5In19"
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:a55aaae65c9f0f37e360bb9d13d26155ec6d3003880d65081938284aed5baf84"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:21cd957c5f5063d59f9b3d69cca8ea2b8a8e62581e385723fbb9035f129f542a"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:89fcaf1d9f8426ad2c9f9cd22942a78172ed99abd54259e11aeb001641dd6179"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202410182001",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:c4653355c26cd4690cf9f75616bb1796f7cdc73b5e61dcabea38874a9621aec5",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202410182001"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6Imt1YmVkZXNjaGVkdWxlcnMub3BlcmF0b3Iub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJvcGVyYXRvci5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiS3ViZURlc2NoZWR1bGVyIiwibGlzdEtpbmQiOiJLdWJlRGVzY2hlZHVsZXJMaXN0IiwicGx1cmFsIjoia3ViZWRlc2NoZWR1bGVycyIsInNpbmd1bGFyIjoia3ViZWRlc2NoZWR1bGVyIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiS3ViZURlc2NoZWR1bGVyIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBkZXNjaGVkdWxlcnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJzcGVjIGhvbGRzIHVzZXIgc2V0dGFibGUgdmFsdWVzIGZvciBjb25maWd1cmF0aW9uIiwicHJvcGVydGllcyI6eyJkZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMgaXMgdGhlIG51bWJlciBvZiBzZWNvbmRzIGJldHdlZW4gZGVzY2hlZHVsZXIgcnVucyIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwibG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoibG9nTGV2ZWwgaXMgYW4gaW50ZW50IGJhc2VkIGxvZ2dpbmcgZm9yIGFuIG92ZXJhbGwgY29tcG9uZW50LiAgSXQgZG9lcyBub3QgZ2l2ZSBmaW5lIGdyYWluZWQgY29udHJvbCwgYnV0IGl0IGlzIGEgc2ltcGxlIHdheSB0byBtYW5hZ2UgY29hcnNlIGdyYWluZWQgbG9nZ2luZyBjaG9pY2VzIHRoYXQgb3BlcmF0b3JzIGhhdmUgdG8gaW50ZXJwcmV0IGZvciB0aGVpciBvcGVyYW5kcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sIm1hbmFnZW1lbnRTdGF0ZSI6eyJkZXNjcmlwdGlvbiI6Im1hbmFnZW1lbnRTdGF0ZSBpbmRpY2F0ZXMgd2hldGhlciBhbmQgaG93IHRoZSBvcGVyYXRvciBzaG91bGQgbWFuYWdlIHRoZSBjb21wb25lbnQiLCJwYXR0ZXJuIjoiXihNYW5hZ2VkfFVubWFuYWdlZHxGb3JjZXxSZW1vdmVkKSQiLCJ0eXBlIjoic3RyaW5nIn0sIm1vZGUiOnsiZGVmYXVsdCI6IlByZWRpY3RpdmUiLCJkZXNjcmlwdGlvbiI6Ik1vZGUgY29uZmlndXJlcyB0aGUgZGVzY2hlZHVsZXIgdG8gZWl0aGVyIGV2aWN0IHBvZHMgKEF1dG9tYXRpYykgb3IgdG8gc2ltdWxhdGUgdGhlIGV2aWN0aW9uIChQcmVkaWN0aXZlKSIsImVudW0iOlsiQXV0b21hdGljIiwiUHJlZGljdGl2ZSJdLCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkQ29uZmlnIjp7ImRlc2NyaXB0aW9uIjoib2JzZXJ2ZWRDb25maWcgaG9sZHMgYSBzcGFyc2UgY29uZmlnIHRoYXQgY29udHJvbGxlciBoYXMgb2JzZXJ2ZWQgZnJvbSB0aGUgY2x1c3RlciBzdGF0ZS4gIEl0IGV4aXN0cyBpbiBzcGVjIGJlY2F1c2UgaXQgaXMgYW4gaW5wdXQgdG8gdGhlIGxldmVsIGZvciB0aGUgb3BlcmF0b3IiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sIm9wZXJhdG9yTG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoib3BlcmF0b3JMb2dMZXZlbCBpcyBhbiBpbnRlbnQgYmFzZWQgbG9nZ2luZyBmb3IgdGhlIG9wZXJhdG9yIGl0c2VsZi4gIEl0IGRvZXMgbm90IGdpdmUgZmluZSBncmFpbmVkIGNvbnRyb2wsIGJ1dCBpdCBpcyBhIHNpbXBsZSB3YXkgdG8gbWFuYWdlIGNvYXJzZSBncmFpbmVkIGxvZ2dpbmcgY2hvaWNlcyB0aGF0IG9wZXJhdG9ycyBoYXZlIHRvIGludGVycHJldCBmb3IgdGhlbXNlbHZlcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sInByb2ZpbGVDdXN0b21pemF0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVDdXN0b21pemF0aW9ucyBjb250YWlucyB2YXJpb3VzIHBhcmFtZXRlcnMgZm9yIG1vZGlmeWluZyB0aGUgZGVmYXVsdCBiZWhhdmlvciBvZiBjZXJ0YWluIHByb2ZpbGVzIiwicHJvcGVydGllcyI6eyJkZXZMb3dOb2RlVXRpbGl6YXRpb25UaHJlc2hvbGRzIjp7ImRlZmF1bHQiOiJNZWRpdW0iLCJkZXNjcmlwdGlvbiI6Ikxvd05vZGVVdGlsaXphdGlvblRocmVzaG9sZHMgZW51bWVyYXRlcyBwcmVkZWZpbmVkIGV4cGVyaW1lbnRhbCB0aHJlc2hvbGRzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlcyBvdmVycmlkZXMgaW5jbHVkZWQgYW5kIGV4Y2x1ZGVkIG5hbWVzcGFjZXMgd2hpbGUga2VlcGluZyB0aGUgZGVmYXVsdCBleGNsdXNpb24gb2YgYWxsIG9wZW5zaGlmdC0qLCBrdWJlLXN5c3RlbSBhbmQgaHlwZXJzaGlmdCBuYW1lc3BhY2VzIiwicHJvcGVydGllcyI6eyJleGNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJpbmNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwb2RMaWZldGltZSI6eyJkZXNjcmlwdGlvbiI6IlBvZExpZmV0aW1lIGlzIHRoZSBsZW5ndGggb2YgdGltZSBhZnRlciB3aGljaCBwb2RzIHNob3VsZCBiZSBldmljdGVkIFRoaXMgZmllbGQgc2hvdWxkIGJlIHVzZWQgd2l0aCBwcm9maWxlcyB0aGF0IGVuYWJsZSB0aGUgUG9kTGlmZXRpbWUgc3RyYXRlZ3ksIHN1Y2ggYXMgTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJmb3JtYXQiOiJkdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwidGhyZXNob2xkUHJpb3JpdHkiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidGhyZXNob2xkUHJpb3JpdHlDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eSIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicHJvZmlsZXMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlcyBzZXRzIHdoaWNoIGRlc2NoZWR1bGVyIHN0cmF0ZWd5IHByb2ZpbGVzIGFyZSBlbmFibGVkIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxlclByb2ZpbGUgYWxsb3dzIGNvbmZpZ3VyaW5nIHRoZSBlbmFibGVkIHN0cmF0ZWd5IHByb2ZpbGVzIGZvciB0aGUgZGVzY2hlZHVsZXIgaXQgYWxsb3dzIG11bHRpcGxlIHByb2ZpbGVzIHRvIGJlIGVuYWJsZWQgYXQgb25jZSwgd2hpY2ggd2lsbCBoYXZlIGN1bXVsYXRpdmUgZWZmZWN0cyBvbiB0aGUgY2x1c3Rlci4iLCJlbnVtIjpbIkFmZmluaXR5QW5kVGFpbnRzIiwiVG9wb2xvZ3lBbmREdXBsaWNhdGVzIiwiTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJEZXZQcmV2aWV3TG9uZ0xpZmVjeWNsZSIsIlNvZnRUb3BvbG9neUFuZER1cGxpY2F0ZXMiLCJFdmljdFBvZHNXaXRoTG9jYWxTdG9yYWdlIiwiRXZpY3RQb2RzV2l0aFBWQyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ1bnN1cHBvcnRlZENvbmZpZ092ZXJyaWRlcyI6eyJkZXNjcmlwdGlvbiI6InVuc3VwcG9ydGVkQ29uZmlnT3ZlcnJpZGVzIGhvbGRzIGEgc3BhcnNlIGNvbmZpZyB0aGF0IHdpbGwgb3ZlcnJpZGUgYW55IHByZXZpb3VzbHkgc2V0IG9wdGlvbnMuICBJdCBvbmx5IG5lZWRzIHRvIGJlIHRoZSBmaWVsZHMgdG8gb3ZlcnJpZGUgaXQgd2lsbCBlbmQgdXAgb3ZlcmxheWluZyBpbiB0aGUgZm9sbG93aW5nIG9yZGVyOiAxLiBoYXJkY29kZWQgZGVmYXVsdHMgMi4gb2JzZXJ2ZWRDb25maWcgMy4gdW5zdXBwb3J0ZWRDb25maWdPdmVycmlkZXMiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBob2xkcyBvYnNlcnZlZCB2YWx1ZXMgZnJvbSB0aGUgY2x1c3Rlci4gVGhleSBtYXkgbm90IGJlIG92ZXJyaWRkZW4uIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiY29uZGl0aW9ucyBpcyBhIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlaXIgc3RhdHVzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvckNvbmRpdGlvbiBpcyBqdXN0IHRoZSBzdGFuZGFyZCBjb25kaXRpb24gZmllbGRzLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiZ2VuZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJnZW5lcmF0aW9ucyBhcmUgdXNlZCB0byBkZXRlcm1pbmUgd2hlbiBhbiBpdGVtIG5lZWRzIHRvIGJlIHJlY29uY2lsZWQgb3IgaGFzIGNoYW5nZWQgaW4gYSB3YXkgdGhhdCBuZWVkcyBhIHJlYWN0aW9uLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiR2VuZXJhdGlvblN0YXR1cyBrZWVwcyB0cmFjayBvZiB0aGUgZ2VuZXJhdGlvbiBmb3IgYSBnaXZlbiByZXNvdXJjZSBzbyB0aGF0IGRlY2lzaW9ucyBhYm91dCBmb3JjZWQgdXBkYXRlcyBjYW4gYmUgbWFkZS4iLCJwcm9wZXJ0aWVzIjp7Imdyb3VwIjp7ImRlc2NyaXB0aW9uIjoiZ3JvdXAgaXMgdGhlIGdyb3VwIG9mIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmciLCJ0eXBlIjoic3RyaW5nIn0sImhhc2giOnsiZGVzY3JpcHRpb24iOiJoYXNoIGlzIGFuIG9wdGlvbmFsIGZpZWxkIHNldCBmb3IgcmVzb3VyY2VzIHdpdGhvdXQgZ2VuZXJhdGlvbiB0aGF0IGFyZSBjb250ZW50IHNlbnNpdGl2ZSBsaWtlIHNlY3JldHMgYW5kIGNvbmZpZ21hcHMiLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoibGFzdEdlbmVyYXRpb24gaXMgdGhlIGxhc3QgZ2VuZXJhdGlvbiBvZiB0aGUgd29ya2xvYWQgY29udHJvbGxlciBpbnZvbHZlZCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlIGlzIHdoZXJlIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmcgaXMiLCJ0eXBlIjoic3RyaW5nIn0sInJlc291cmNlIjp7ImRlc2NyaXB0aW9uIjoicmVzb3VyY2UgaXMgdGhlIHJlc291cmNlIHR5cGUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiBpcyB0aGUgbGFzdCBnZW5lcmF0aW9uIGNoYW5nZSB5b3UndmUgZGVhbHQgd2l0aCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwicmVhZHlSZXBsaWNhcyI6eyJkZXNjcmlwdGlvbiI6InJlYWR5UmVwbGljYXMgaW5kaWNhdGVzIGhvdyBtYW55IHJlcGxpY2FzIGFyZSByZWFkeSBhbmQgYXQgdGhlIGRlc2lyZWQgc3RhdGUiLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJ2ZXJzaW9uIGlzIHRoZSBsZXZlbCB0aGlzIGF2YWlsYWJpbGl0eSBhcHBsaWVzIHRvIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:c4653355c26cd4690cf9f75616bb1796f7cdc73b5e61dcabea38874a9621aec5"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:681f4e3ad0cd8e8da96348fa67ecf41c66eaad63e9f7dc2c2654d7657b8f1b70"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:7c6f5694491c0e0c464eb109e4347ea07d0a12741cb3935a676fe8de3c376905"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202411130434",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:0a8751418b051e22d3b17292367e0cffe1479b83e387d4d4d1770e155a4a8e9d",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202411130434"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:0a8751418b051e22d3b17292367e0cffe1479b83e387d4d4d1770e155a4a8e9d"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:cc25948e36323c28c6041af5d290fc8f7385bc082086d937b1b32ebf1c12c946"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:7684a3b0003d9c3021c7af65e3505889c70f3562132dd9c5f8f35d878d22bd90"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202411261536",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:53cd6778c8fda0e011a9e9e1e9da7f9b6b29c0bee1be24090b5764a364555a04",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202411261536"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:53cd6778c8fda0e011a9e9e1e9da7f9b6b29c0bee1be24090b5764a364555a04"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:9f4f6b1586ada7c564d9d587af6563a85b7746f0df5988a68f833db8ccfae40f"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:339302979e6145b0e1cddfe679c6fccdb76d71f1aea63f29bbd3636ef7948172"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202412040905",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:808f54e5ebfb6e9dee0ae2fef31a70750e5b4be4479eb8c7ea522675196dbe67",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202412040905"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:808f54e5ebfb6e9dee0ae2fef31a70750e5b4be4479eb8c7ea522675196dbe67"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:8ea98265d3d69658c3679477a185b4e7b8a552261f593b6a115044a26e7f02b4"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:3777dad0253a3da762d93967c45740eaf4dec71a95912c71d8b8f191ee2101bd"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202412170209",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:e90cb07d715e3cd614a9651626b55319275747ac5caef6e242c340c8b3388885",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202412170209"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6Imt1YmVkZXNjaGVkdWxlcnMub3BlcmF0b3Iub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJvcGVyYXRvci5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiS3ViZURlc2NoZWR1bGVyIiwibGlzdEtpbmQiOiJLdWJlRGVzY2hlZHVsZXJMaXN0IiwicGx1cmFsIjoia3ViZWRlc2NoZWR1bGVycyIsInNpbmd1bGFyIjoia3ViZWRlc2NoZWR1bGVyIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiS3ViZURlc2NoZWR1bGVyIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBkZXNjaGVkdWxlcnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJzcGVjIGhvbGRzIHVzZXIgc2V0dGFibGUgdmFsdWVzIGZvciBjb25maWd1cmF0aW9uIiwicHJvcGVydGllcyI6eyJkZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHMgaXMgdGhlIG51bWJlciBvZiBzZWNvbmRzIGJldHdlZW4gZGVzY2hlZHVsZXIgcnVucyIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwibG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoibG9nTGV2ZWwgaXMgYW4gaW50ZW50IGJhc2VkIGxvZ2dpbmcgZm9yIGFuIG92ZXJhbGwgY29tcG9uZW50LiAgSXQgZG9lcyBub3QgZ2l2ZSBmaW5lIGdyYWluZWQgY29udHJvbCwgYnV0IGl0IGlzIGEgc2ltcGxlIHdheSB0byBtYW5hZ2UgY29hcnNlIGdyYWluZWQgbG9nZ2luZyBjaG9pY2VzIHRoYXQgb3BlcmF0b3JzIGhhdmUgdG8gaW50ZXJwcmV0IGZvciB0aGVpciBvcGVyYW5kcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sIm1hbmFnZW1lbnRTdGF0ZSI6eyJkZXNjcmlwdGlvbiI6Im1hbmFnZW1lbnRTdGF0ZSBpbmRpY2F0ZXMgd2hldGhlciBhbmQgaG93IHRoZSBvcGVyYXRvciBzaG91bGQgbWFuYWdlIHRoZSBjb21wb25lbnQiLCJwYXR0ZXJuIjoiXihNYW5hZ2VkfFVubWFuYWdlZHxGb3JjZXxSZW1vdmVkKSQiLCJ0eXBlIjoic3RyaW5nIn0sIm1vZGUiOnsiZGVmYXVsdCI6IlByZWRpY3RpdmUiLCJkZXNjcmlwdGlvbiI6Ik1vZGUgY29uZmlndXJlcyB0aGUgZGVzY2hlZHVsZXIgdG8gZWl0aGVyIGV2aWN0IHBvZHMgKEF1dG9tYXRpYykgb3IgdG8gc2ltdWxhdGUgdGhlIGV2aWN0aW9uIChQcmVkaWN0aXZlKSIsImVudW0iOlsiQXV0b21hdGljIiwiUHJlZGljdGl2ZSJdLCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkQ29uZmlnIjp7ImRlc2NyaXB0aW9uIjoib2JzZXJ2ZWRDb25maWcgaG9sZHMgYSBzcGFyc2UgY29uZmlnIHRoYXQgY29udHJvbGxlciBoYXMgb2JzZXJ2ZWQgZnJvbSB0aGUgY2x1c3RlciBzdGF0ZS4gIEl0IGV4aXN0cyBpbiBzcGVjIGJlY2F1c2UgaXQgaXMgYW4gaW5wdXQgdG8gdGhlIGxldmVsIGZvciB0aGUgb3BlcmF0b3IiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sIm9wZXJhdG9yTG9nTGV2ZWwiOnsiZGVmYXVsdCI6Ik5vcm1hbCIsImRlc2NyaXB0aW9uIjoib3BlcmF0b3JMb2dMZXZlbCBpcyBhbiBpbnRlbnQgYmFzZWQgbG9nZ2luZyBmb3IgdGhlIG9wZXJhdG9yIGl0c2VsZi4gIEl0IGRvZXMgbm90IGdpdmUgZmluZSBncmFpbmVkIGNvbnRyb2wsIGJ1dCBpdCBpcyBhIHNpbXBsZSB3YXkgdG8gbWFuYWdlIGNvYXJzZSBncmFpbmVkIGxvZ2dpbmcgY2hvaWNlcyB0aGF0IG9wZXJhdG9ycyBoYXZlIHRvIGludGVycHJldCBmb3IgdGhlbXNlbHZlcy4gXG4gVmFsaWQgdmFsdWVzIGFyZTogXCJOb3JtYWxcIiwgXCJEZWJ1Z1wiLCBcIlRyYWNlXCIsIFwiVHJhY2VBbGxcIi4gRGVmYXVsdHMgdG8gXCJOb3JtYWxcIi4iLCJlbnVtIjpbIiIsIk5vcm1hbCIsIkRlYnVnIiwiVHJhY2UiLCJUcmFjZUFsbCJdLCJ0eXBlIjoic3RyaW5nIn0sInByb2ZpbGVDdXN0b21pemF0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IlByb2ZpbGVDdXN0b21pemF0aW9ucyBjb250YWlucyB2YXJpb3VzIHBhcmFtZXRlcnMgZm9yIG1vZGlmeWluZyB0aGUgZGVmYXVsdCBiZWhhdmlvciBvZiBjZXJ0YWluIHByb2ZpbGVzIiwicHJvcGVydGllcyI6eyJkZXZMb3dOb2RlVXRpbGl6YXRpb25UaHJlc2hvbGRzIjp7ImRlZmF1bHQiOiJNZWRpdW0iLCJkZXNjcmlwdGlvbiI6Ikxvd05vZGVVdGlsaXphdGlvblRocmVzaG9sZHMgZW51bWVyYXRlcyBwcmVkZWZpbmVkIGV4cGVyaW1lbnRhbCB0aHJlc2hvbGRzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlcyBvdmVycmlkZXMgaW5jbHVkZWQgYW5kIGV4Y2x1ZGVkIG5hbWVzcGFjZXMgd2hpbGUga2VlcGluZyB0aGUgZGVmYXVsdCBleGNsdXNpb24gb2YgYWxsIG9wZW5zaGlmdC0qLCBrdWJlLXN5c3RlbSBhbmQgaHlwZXJzaGlmdCBuYW1lc3BhY2VzIiwicHJvcGVydGllcyI6eyJleGNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJpbmNsdWRlZCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwb2RMaWZldGltZSI6eyJkZXNjcmlwdGlvbiI6IlBvZExpZmV0aW1lIGlzIHRoZSBsZW5ndGggb2YgdGltZSBhZnRlciB3aGljaCBwb2RzIHNob3VsZCBiZSBldmljdGVkIFRoaXMgZmllbGQgc2hvdWxkIGJlIHVzZWQgd2l0aCBwcm9maWxlcyB0aGF0IGVuYWJsZSB0aGUgUG9kTGlmZXRpbWUgc3RyYXRlZ3ksIHN1Y2ggYXMgTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJmb3JtYXQiOiJkdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwidGhyZXNob2xkUHJpb3JpdHkiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidGhyZXNob2xkUHJpb3JpdHlDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQcmlvcml0eUNsYXNzTmFtZSB3aGVuIHNldCB3aWxsIHJlamVjdCBldmljdGlvbiBvZiBhbnkgcG9kIHdpdGggcHJpb3JpdHkgZXF1YWwgb3IgaGlnaGVyIEl0IGlzIGludmFsaWQgdG8gc2V0IGl0IGFsb25nc2lkZSBUaHJlc2hvbGRQcmlvcml0eSIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicHJvZmlsZXMiOnsiZGVzY3JpcHRpb24iOiJQcm9maWxlcyBzZXRzIHdoaWNoIGRlc2NoZWR1bGVyIHN0cmF0ZWd5IHByb2ZpbGVzIGFyZSBlbmFibGVkIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJEZXNjaGVkdWxlclByb2ZpbGUgYWxsb3dzIGNvbmZpZ3VyaW5nIHRoZSBlbmFibGVkIHN0cmF0ZWd5IHByb2ZpbGVzIGZvciB0aGUgZGVzY2hlZHVsZXIgaXQgYWxsb3dzIG11bHRpcGxlIHByb2ZpbGVzIHRvIGJlIGVuYWJsZWQgYXQgb25jZSwgd2hpY2ggd2lsbCBoYXZlIGN1bXVsYXRpdmUgZWZmZWN0cyBvbiB0aGUgY2x1c3Rlci4iLCJlbnVtIjpbIkFmZmluaXR5QW5kVGFpbnRzIiwiVG9wb2xvZ3lBbmREdXBsaWNhdGVzIiwiTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb24iLCJEZXZQcmV2aWV3TG9uZ0xpZmVjeWNsZSIsIlNvZnRUb3BvbG9neUFuZER1cGxpY2F0ZXMiLCJFdmljdFBvZHNXaXRoTG9jYWxTdG9yYWdlIiwiRXZpY3RQb2RzV2l0aFBWQyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ1bnN1cHBvcnRlZENvbmZpZ092ZXJyaWRlcyI6eyJkZXNjcmlwdGlvbiI6InVuc3VwcG9ydGVkQ29uZmlnT3ZlcnJpZGVzIGhvbGRzIGEgc3BhcnNlIGNvbmZpZyB0aGF0IHdpbGwgb3ZlcnJpZGUgYW55IHByZXZpb3VzbHkgc2V0IG9wdGlvbnMuICBJdCBvbmx5IG5lZWRzIHRvIGJlIHRoZSBmaWVsZHMgdG8gb3ZlcnJpZGUgaXQgd2lsbCBlbmQgdXAgb3ZlcmxheWluZyBpbiB0aGUgZm9sbG93aW5nIG9yZGVyOiAxLiBoYXJkY29kZWQgZGVmYXVsdHMgMi4gb2JzZXJ2ZWRDb25maWcgMy4gdW5zdXBwb3J0ZWRDb25maWdPdmVycmlkZXMiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBob2xkcyBvYnNlcnZlZCB2YWx1ZXMgZnJvbSB0aGUgY2x1c3Rlci4gVGhleSBtYXkgbm90IGJlIG92ZXJyaWRkZW4uIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiY29uZGl0aW9ucyBpcyBhIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlaXIgc3RhdHVzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvckNvbmRpdGlvbiBpcyBqdXN0IHRoZSBzdGFuZGFyZCBjb25kaXRpb24gZmllbGRzLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInJlYXNvbiI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiZ2VuZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJnZW5lcmF0aW9ucyBhcmUgdXNlZCB0byBkZXRlcm1pbmUgd2hlbiBhbiBpdGVtIG5lZWRzIHRvIGJlIHJlY29uY2lsZWQgb3IgaGFzIGNoYW5nZWQgaW4gYSB3YXkgdGhhdCBuZWVkcyBhIHJlYWN0aW9uLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiR2VuZXJhdGlvblN0YXR1cyBrZWVwcyB0cmFjayBvZiB0aGUgZ2VuZXJhdGlvbiBmb3IgYSBnaXZlbiByZXNvdXJjZSBzbyB0aGF0IGRlY2lzaW9ucyBhYm91dCBmb3JjZWQgdXBkYXRlcyBjYW4gYmUgbWFkZS4iLCJwcm9wZXJ0aWVzIjp7Imdyb3VwIjp7ImRlc2NyaXB0aW9uIjoiZ3JvdXAgaXMgdGhlIGdyb3VwIG9mIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmciLCJ0eXBlIjoic3RyaW5nIn0sImhhc2giOnsiZGVzY3JpcHRpb24iOiJoYXNoIGlzIGFuIG9wdGlvbmFsIGZpZWxkIHNldCBmb3IgcmVzb3VyY2VzIHdpdGhvdXQgZ2VuZXJhdGlvbiB0aGF0IGFyZSBjb250ZW50IHNlbnNpdGl2ZSBsaWtlIHNlY3JldHMgYW5kIGNvbmZpZ21hcHMiLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RHZW5lcmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoibGFzdEdlbmVyYXRpb24gaXMgdGhlIGxhc3QgZ2VuZXJhdGlvbiBvZiB0aGUgd29ya2xvYWQgY29udHJvbGxlciBpbnZvbHZlZCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlIGlzIHdoZXJlIHRoZSB0aGluZyB5b3UncmUgdHJhY2tpbmcgaXMiLCJ0eXBlIjoic3RyaW5nIn0sInJlc291cmNlIjp7ImRlc2NyaXB0aW9uIjoicmVzb3VyY2UgaXMgdGhlIHJlc291cmNlIHR5cGUgb2YgdGhlIHRoaW5nIHlvdSdyZSB0cmFja2luZyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiBpcyB0aGUgbGFzdCBnZW5lcmF0aW9uIGNoYW5nZSB5b3UndmUgZGVhbHQgd2l0aCIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwicmVhZHlSZXBsaWNhcyI6eyJkZXNjcmlwdGlvbiI6InJlYWR5UmVwbGljYXMgaW5kaWNhdGVzIGhvdyBtYW55IHJlcGxpY2FzIGFyZSByZWFkeSBhbmQgYXQgdGhlIGRlc2lyZWQgc3RhdGUiLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJ2ZXJzaW9uIGlzIHRoZSBsZXZlbCB0aGlzIGF2YWlsYWJpbGl0eSBhcHBsaWVzIHRvIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:e90cb07d715e3cd614a9651626b55319275747ac5caef6e242c340c8b3388885"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:c979f9f42a2fd47c1ab20a6470fcc1696a9f231c9e7dbf2cb6bb6b14c49ae704"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:33cc697a1172f6b0227be3cbb7edb5f58f9850ab849d073ea16dc3f2a2895369"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202501150635",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:6f1602fc08f75abf19eae450c0c3d1fd8fac2f346cbc88908dbf0bfcc52c6e4d",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202501150635"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:6f1602fc08f75abf19eae450c0c3d1fd8fac2f346cbc88908dbf0bfcc52c6e4d"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:36195f22839cfadc30587bb6d73ec6fecd4963a80655f34d8cb6fa1a3b122e93"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:8b7fa02c050fef472027eadfd3a8a96c32857100ebb2f0930dfbf109df835acd"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202501280211",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:def5aa7bc82a819ed103d627b66408f43f2cfa56c78c6ff858059204b47d7825",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202501280211"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwib3BlcmF0b3Iub3BlbnNoaWZ0LmlvL3YxXCIsXG4gICAgXCJraW5kXCI6IFwiS3ViZURlc2NoZWR1bGVyXCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJjbHVzdGVyXCIsXG4gICAgICBcIm5hbWVzcGFjZVwiOiBcIm9wZW5zaGlmdC1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yXCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImRlc2NoZWR1bGluZ0ludGVydmFsU2Vjb25kc1wiOiAzNjAwLFxuICAgICAgXCJtYW5hZ2VtZW50U3RhdGVcIjogXCJNYW5hZ2VkXCIsXG4gICAgICBcIm1vZGVcIjogXCJQcmVkaWN0aXZlXCIsXG4gICAgICBcInByb2ZpbGVzXCI6IFtcIkFmZmluaXR5QW5kVGFpbnRzXCJdXG4gICAgfVxuICB9XG5dXG4iLCJjYXBhYmlsaXRpZXMiOiJCYXNpYyBJbnN0YWxsIiwiY2F0ZWdvcmllcyI6Ik9wZW5TaGlmdCBPcHRpb25hbCIsImNlcnRpZmllZCI6ImZhbHNlIiwiY29udGFpbmVySW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0NC9vc2UtY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yQHNoYTI1NjpiODBkZTQ4YTJhODE0NDU4Y2U5Yjk4YmRhOWZkZTZkMDEyMTA3ZDVhNDEyZjcwOTViZmRkZjgxMDdlMTRkMGFkIiwiY3JlYXRlZEF0IjoiMjAyMS8xMC8xMyIsImRlc2NyaXB0aW9uIjoiQW4gb3BlcmF0b3IgdG8gcnVuIGRlc2NoZWR1bGVyIGluIE9wZW5zaGlmdCBjbHVzdGVyLiIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vY25mIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL2NuaSI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9jc2kiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vZGlzY29ubmVjdGVkIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL2ZpcHMtY29tcGxpYW50IjoidHJ1ZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vcHJveHktYXdhcmUiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdGxzLXByb2ZpbGVzIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3Rva2VuLWF1dGgtYXdzIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3Rva2VuLWF1dGgtYXp1cmUiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdG9rZW4tYXV0aC1nY3AiOiJmYWxzZSIsIm9sbS5za2lwUmFuZ2UiOiJcdTAwM2U9NC4xMS4wIFx1MDAzYzQuMTQuMC0yMDI1MDEyODAyMTEiLCJvcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3ZhbGlkLXN1YnNjcmlwdGlvbiI6IltcIk9wZW5TaGlmdCBLdWJlcm5ldGVzIEVuZ2luZVwiLCBcIk9wZW5TaGlmdCBDb250YWluZXIgUGxhdGZvcm1cIiwgXCJPcGVuU2hpZnQgUGxhdGZvcm0gUGx1c1wiXSIsInJlcG9zaXRvcnkiOiJodHRwczovL2dpdGh1Yi5jb20vb3BlbnNoaWZ0L2NsdXN0ZXIta3ViZS1kZXNjaGVkdWxlci1vcGVyYXRvciIsInN1cHBvcnQiOiJSZWQgSGF0LCBJbmMuIn0sImxhYmVscyI6eyJvcGVyYXRvcmZyYW1ld29yay5pby9hcmNoLmFtZDY0Ijoic3VwcG9ydGVkIiwib3BlcmF0b3JmcmFtZXdvcmsuaW8vYXJjaC5hcm02NCI6InN1cHBvcnRlZCIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2gucHBjNjRsZSI6InN1cHBvcnRlZCIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2guczM5MHgiOiJzdXBwb3J0ZWQifSwibmFtZSI6ImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNTAxMjgwMjExIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IifSwic3BlYyI6eyJjdXN0b21yZXNvdXJjZWRlZmluaXRpb25zIjp7Im93bmVkIjpbeyJkZXNjcmlwdGlvbiI6Ikt1YmVEZXNjaGVkdWxlciBpcyB0aGUgU2NoZW1hIGZvciB0aGUgZGVzY2hlZHVsZXJzIEFQSSIsImRpc3BsYXlOYW1lIjoiS3ViZSBEZXNjaGVkdWxlciIsImdyb3VwIjoib3BlcmF0b3Iub3BlbnNoaWZ0LmlvIiwia2luZCI6Ikt1YmVEZXNjaGVkdWxlciIsIm5hbWUiOiJrdWJlZGVzY2hlZHVsZXJzLm9wZXJhdG9yLm9wZW5zaGlmdC5pbyIsInZlcnNpb24iOiJ2MSJ9XX0sImRlc2NyaXB0aW9uIjoiVGhlIEt1YmUgRGVzY2hlZHVsZXIgT3BlcmF0b3IgcHJvdmlkZXMgdGhlIGFiaWxpdHkgdG8gZXZpY3QgYSBydW5uaW5nIHBvZCBzbyB0aGF0IHRoZSBwb2QgY2FuIGJlIHJlc2NoZWR1bGVkIG9udG8gYSBtb3JlIHN1aXRhYmxlIG5vZGUuXG5cblRoZXJlIGFyZSBzZXZlcmFsIHNpdHVhdGlvbnMgd2hlcmUgZGVzY2hlZHVsaW5nIGNhbiBiZW5lZml0IHlvdXIgY2x1c3RlcjpcblxuKiBOb2RlcyBhcmUgdW5kZXJ1dGlsaXplZCBvciBvdmVydXRpbGl6ZWQuXG4qIFBvZCBhbmQgbm9kZSBhZmZpbml0eSByZXF1aXJlbWVudHMsIHN1Y2ggYXMgdGFpbnRzIG9yIGxhYmVscywgaGF2ZSBjaGFuZ2VkIGFuZCB0aGUgb3JpZ2luYWwgc2NoZWR1bGluZyBkZWNpc2lvbnMgYXJlIG5vIGxvbmdlciBhcHByb3ByaWF0ZSBmb3IgY2VydGFpbiBub2Rlcy5cbiogTm9kZSBmYWlsdXJlIHJlcXVpcmVzIHBvZHMgdG8gYmUgbW92ZWQuXG4qIE5ldyBub2RlcyBhcmUgYWRkZWQgdG8gY2x1c3RlcnMuXG5cbiMjIERlc2NoZWR1bGVyIFByb2ZpbGVzXG5cbk9uY2UgdGhlIG9wZXJhdG9yIGlzIGluc3RhbGxlZCwgeW91IGNhbiBjb25maWd1cmUgb25lIG9yIG1vcmUgcHJvZmlsZXMgdG8gaWRlbnRpZnkgcG9kcyB0byBldmljdC4gVGhlIHNjaGVkdWxlciB3aWxsIHNjaGVkdWxlIHRoZSByZXBsYWNlbWVudCBvZiB0aGUgZXZpY3RlZCBwb2RzLlxuXG5UaGUgZm9sbG93aW5nIHByb2ZpbGVzIGFyZSBhdmFpbGFibGU6XG5cbiogQWZmaW5pdHlBbmRUYWludHNcbiogVG9wb2xvZ3lBbmREdXBsaWNhdGVzXG4qIFNvZnRUb3BvbG9neUFuZER1cGxpY2F0ZXNcbiogTGlmZWN5Y2xlQW5kVXRpbGl6YXRpb25cbiogRXZpY3RQb2RzV2l0aFBWQ1xuKiBFdmljdFBvZHNXaXRoTG9jYWxTdG9yYWdlXG5cblRoZXNlIHByb2ZpbGVzIGFyZSBkb2N1bWVudGVkIGluIGRldGFpbCBpbiB0aGUgW2Rlc2NoZWR1bGVyIG9wZXJhdG9yIFJFQURNRV0oaHR0cHM6Ly9naXRodWIuY29tL29wZW5zaGlmdC9jbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IjcHJvZmlsZXMpLlxuXG4jIyBBZGRpdGlvbmFsIFBhcmFtZXRlcnNcblxuSW4gYWRkaXRpb24gdG8gdGhlIHByb2ZpbGVzLCB0aGUgZm9sbG93aW5nIHBhcmFtZXRlcnMgY2FuIGJlIGNvbmZpZ3VyZWQ6XG5cbiogYGRlc2NoZWR1bGluZ0ludGVydmFsU2Vjb25kc2AgLSBTZXQgdGhlIG51bWJlciBvZiBzZWNvbmRzIGJldHdlZW4gZGVzY2hlZHVsZXIgcnVucy4gQSB2YWx1ZSBvZiBgMGAgaW4gdGhpcyBmaWVsZCBydW5zIHRoZSBkZXNjaGVkdWxlciBvbmNlIGFuZCBleGl0cy5cbiogYHByb2ZpbGVDdXN0b21pemF0aW9uc2AgLSBBbGxvd3MgY2VydGFpbiBwcm9maWxlIHBhcmFtZXRlcnMgdG8gYmUgdHdlYWtlZCwgc3VjaCBhcyBgcG9kTGlmZXRpbWVgIChzZWUgW1JFQURNRV0oaHR0cHM6Ly9naXRodWIuY29tL29wZW5zaGlmdC9jbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IjcHJvZmlsZS1jdXN0b21pemF0aW9ucykgZm9yIG1vcmUgaW5mbykuXG4iLCJkaXNwbGF5TmFtZSI6Ikt1YmUgRGVzY2hlZHVsZXIgT3BlcmF0b3IiLCJpY29uIjpbeyJiYXNlNjRkYXRhIjoiaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUR3QUFBQThDQVlBQUFBNi9ObHlBQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUdFUUFBQmhFQkZtdXRBZ0FBQUJKMFJWaDBVMjltZEhkaGNtVUFaWHBuYVdZdVkyOXRvTU96V0FBQURqQkpSRUZVYUlIRm0zbGdGTlVkeHorek0zdm1aSlBOVFpBZ2QrV0tRUkFJQ0Vpd0tFZ2hGaEZGam9vRnVlUVFLRlpSd0FxbzViQlFML0FHeGJNVkFvSVNVV2xOdUJRSVNFSWdrR0RJSGJMWmMyYjZ4K3FHSlFoa3MydS9mKzIrZWUvM3Z0OTliMzdIbTFsQlZWV1YveE9xS2l1cHJLcENWVlVNQmdPeHNiRm90ZHFnemlrRjFmcGxxSzJ0WmV0N1c4ajZiQ3RIamg0bklsUWlNa3lIVmhTNFdDOVRXbWtuTER5VXRMU2VETTRZenBBaEdaaE1wb0J5RUg2TEZiNXc0UUwvWEwrYWQ5OStpeUdwSVF4TDAzTnpleU02clJaQkY0RWc2a0VRUVhaU1dIU2VYZnRyeUQ2cWNPUlVQWDhjY3crUHpKeFBURXhNUUxnRVZiQ2lLTHo2eWdaZVdQVXNtZW1oVEJ3U2pzVWNpaFRkRTQzNUpzU1FaQlEwN01yTzRkUHRlOW1kbllQRDZVUW5pU2lxak94MllYZktDSUxJQStQSHMzejVDZ1JCYUJhbm9Ba3VLanJEakttVFVLeG5XREdwQmNrSlVVaHgvWkZpYmtVUURUaWRUalovdUl1VmE5L0NacmR6OFdMOXI5clNBSUpHSURvNm11eTkrekNielg3ekNvcmcvYm01akIrWHlVTjNoREFoSXhLZHBTZmFWaU1RUkNNQWUvY2Q0cytQUGt1OXpZYTEzbjdkZGtXTmdERWtoQjkreUNNa0pNUXZiZ0VYbkpXMWpkblRIK2JaU1MwWTNETWVYY3E5aUJFZEFhaTMyZm5MMGcxODhsazIxbnFiWC9ZMUdvR3VYYnV4WStkdXY4WUhWUERPblR1WU9XMHlyOHlPcFVmbmx1amEvUW1OSVJxQUMrVlYvR0hjZklxS1MzRTRuTDRrQkdnYUM0RnQyN080K2VhMEpuUFVOSG5FcitEUW9ZTk1uenFKOWRNdDlPamFIbjNIR1Y2eCtZWG5HRGg4S3FlTHp2dUlGUVFZMVMrU3IxNW95NnR6azlGS0hvZVVFSDMxV0N4cVlObXlwL3ppR1pBVkxpNHVadWpnZml3ZUU4YncyOXFpN3pUZGU3K2VMaXJoOXBIVHFiUGFVQlRGTzZaVEt3TlBqbzhqdFcxRG5OMzZWVFU3Y2k5aWlSRFpzcWY2cW5PR21Fd1Vuam5YWks3TlhtRlZWWmsrYlRJamV1dTVLejBKZmZ1SHZHSXJxMm9ZT1c0KzFubzdpcUl3ZG1BTG9pTkVBRG9rRytpYVl2U3hOVG85a2hkbkpGRlE0bXcweitXb3QvdnBBL3dhZFFsZWZlV2ZYRGlYeDV4TUMvcTJreEIwa1FBNG5TNUdqMTlJV1hrMXNpd3pvR3NvVDArSTU4M0hic0FjSnZIaDNtcWUySFMra1QyZEpKQmY0cmptdktxaTRzL21iSmJnNHVKaWxpOWR3dk1QUlJPU1BCUk5TSkwzMnJPcjM2U2c4Qnd1dHh1QWNZTTlzYk5kU3owYjU3VUVZUE9lYWpidXFQQ3hXVmJqcHJwT0J2RGUwMWVDSUlBc3kwM20zQ3pCTDZ4NmhxRnA0ZHpVdVFQYStFSGU5djJIanZQUzZ4OWgvOWxCSlVSclNlL1NFRGZQbGJ1OW41OTU1d0tIOGh1MjU4bGl6K3FtZHdubHd5V3RDVGVKVjV4YnJ6Y2dTVTB2QmZ3dUhzNmNPYzM3Vzk4bmEva042RnFOOHZ6a2dOc3Q4NmRaeTNDNkdrVGRON0FGb3FaaHRkN2VYZW45ZkZPS2daUUVIVjhjdk1nWEIrdllkZUFpYlpQMHJKbVdSSmhKdy9wWlNVeFljUmFudThIaEFTUWtKUHJGMjIvQkc5YXY0ODVlRWFSMFNFVVQwakQ1ZTUvc3BxS3ExaHRZZFpMQTZQUVczdXVuZjNLdzc1alYrOTN1VUxsbDJrbXZvSmhJaWRmbUpCTm04bXkrWGgxRFdERWxnZG4vT09lTjFhSkdRMnBxcWwrOC9kclNicmViVHo3NmdGRjlRNUVTTTd6dExwZWI1YXMyWXJjMU9KMk10SEN2WndaNGMxZTFUNUp4L0t6ZFovWG0zaFBUS0E3L3ZtY1lMUzA2NzNlZFhzK3dZWGY2UTkyL0ZmNTY3MTRrall0ZXFaM1JHT085N1IvOWV3OTFWdDhpb0VkYkkwY0tQZmVvckFoOHVQZnE4WFhGbGxKdTZXQWk2V2VCcDg0N2VlYmRVczZXT1ltT0VDbXZrWEc1WFBRZmNKcy8xUDBUL1BuT0xBWjNOeUZGOS9CcGYvdjlMR3gyMzVDeTVJMmZtbVM3dkVabTRxb2kvakV6bVRkMlZyQmxUelh0RXZWc210ZUt4emVkUjZOUjZkdTNuOS9GZzE5Yit1aVJBM1JNMWlHWnUzcmJLaXFyeVRsNDdJcjl6V0VTNjJhMHhLQzlkaTBiYjVZb0tIR1M4VmcrKzMrMHNXWmFJcDh1VGFIT3JsQjB3WWtrYVprNWE3WS90QUUvQlI4L2ZwS09LWEVJMmxCdjI2NDlPZWoxdWtaOWU3WTM4ZTlsS2R5UkZzWnQzVUliWGI4VW9VWU5UNDZQcDIyaW51ZW1KUERwMHRaa3BJVWpDUERLOW5JUW9NMk5iZWpUcDY4L3RBRS90clROWnFPeXVwYms1SlkrN1VlUG44SjVXV0V3ZmtnVUM4YkVlQk9JdTNwSHNEM240cS9hWGpRMmp2NWRRaG5ZUFl4TG9oamZIcTNqNEVrYkJvT0JCWTh0YkNwbEh6Ulo4Qy9aalRZMDFxZjk0QThuY01zZWJ4c1pKdkxjbEVRR2RQVmQwUUhkd2dnM2lkVFdOODZRMHJ1RWNrLy9TQzQvd1RsV1pPZXhsejBwcU1VU1RjYlFPNXBLMlFkTkZpeEpFb0lnNEpCOWg1NHRMdlYrdG9STGZKNWJTLzh1b1Y0Qmh3dHMvRkJvSXpGYVMyMlJyK0F3azRabEUrTjl4QmFYdTFqL2FUbnZmMVdOVzFZeEdvM01uNzhRamFaNTZYK1RCUnNNQmhMakxSU2NxYVJWbDRaMlJXNElyaWVMSFF4T0RmTVJzT1ROOHh3dXVQSnh6dHpNR0JLaVBMRlhWbFQrOHVwNVB2cW1CdmNsTmswbUV5UC9NS3FwZEJ2QnI1K3JhN2Z1NUh5Zjc5TW1pZzJtdEpMQWZZTWFEdHIrazJmMWl1MThnNUVuNzQvekdidjhuVkttcnozSGdaT2VlUDNMcXY0Q285SEk3RWZub05NMWRvcE5oVitDUjJlTzVmMGRKMUZrbDdldFRldUdTbWw0N3dqaXpRMmI1OVh0bGJSUDByTjJlaEtmUE5XYXdUZUgrOWh6dUZTMmZWZEw1bE9GWkQ1MTJzZGhBV2hFa1hIakh2Q0hhaVA0SlhoSXhsQU1wZ2hlV2prRFYvRU9WSmVWbmowNm85ZDV0dVV2cFNCNE1xWEVLQzJmTFcvRDczdDZRb3p1S2pmUzRRSWJ5aVdwcDhGb1lOcTBSd0wyQk1JdndWcXRsblViTnJKcVN3bjVCLzZGN2ZEVDNOV3REcGZiNDR4YXhUYmt3cHQyVlBEUXNDaWYrN21xVHJuYzVLOURoY21USC9LSDVoWGh0OHZyM3IwN0V5Wk5ZY0ZybGFpeWsxYkdrL1RxWUVRckNiendRUmtBbFJmZDJKMnF0eGc0WCtubTZiZEtHYjY0NExybTBPdjFQRGhoSXBHUmtmN1NiSVJtSGVJNW5RNEc5ZS9OL2VsTzdoc1l5VTlWYmdiTnphZmVvYkJvck1jeHBiVTNFZHRDWXNPL3l0bjhaWFdqdXZacTBHcTE3RDl3bUxpNHVHdDN2azQwKzlSeWYyNHVZektIczIxWlN4S2l0R3pkVzgzaTEzN0M1VmFJaVpTNHBWTUlPNzZyeGU1cTJqUmFyWlpSbzBhelp1Mkx6YUhYQ0FFNXBsMjRZQzRGQno1aDR4eFA5alZtNldrT25MVGhrdjAzTFVrU1gzK3pqNVNVTnMybDU0T0FITVEvL3RlbktDelQ4ZkUzTlFBODkzQWk0cFdQb3E0TG9paHkrKzFEQWk0V0FpVFlaREx4L0pyMUxIbW5rdklhbWNSb0xRditHSXRCNTkralRZMUd3NXk1OHdKQnJiSHRRQm5xMXkrZG9SbDNzdVJ0endIZC9VUE10RTAwSUYyZVJWd0Rna1lnTFMyTkxsMjZYcnV6SHdpWVlJQ2x6NnhrZjRIQ2pweGFOQUtzbnBaSVUzTjluYVRqc1FXTEFrbkxCd0VWSEI0ZXpvcm4xdkw0RzVYVVdHVmF4K21ZTWRLQ1FYZjkwN1J1azBMdjNyY0drcFlQQWlvWUlDTmpLTDF1VFdmWnUxVUFUTGt6aXBZV3JjKzU5Sy9CWURTd2VQRmZBMDNKQndFWERMRHkrYlY4Y2RqT1Z6OVlrVVNCTlk5YzM5YTJSRnNZUFBqMllGRHlJaWlDemVZb2xqejlOeFp0cXNCcVYralEwc0RrTzh4WDlkb0dvNEdGaXhZM3U4Qy9Gb0w2RnMrOTk0eWdwZTRFVDl3ZmpkT3RNSGgrQWNWbExwOXE2QmRZTERFYy92NklYOCtMbW9LZy9welByOTdBeC91czVKeW9SeWRwV0RNMUNWRnN2TXFTSkRGbnp0eWdpNFVnQzQ2UGoyZmhvaWRZOEZvRmRwZEt0eHVOakJuUW9wSFgxdW4wakwxdlhEQ3BlQkhjR3dZWVAyRWlzWW50V1AyUkp5RlpPRGFXQ0pQb1V4OVBuejREZzhFUWJDckFiL1RxNGFsVEJZeS9QeE5KdnNpOTZYcml6Q0pUVjUvRDZWWVJSWkhqSi9LSmlJZ0lOZzBneUlKVlp6VnlSUzVLMVdFVWF5RzVCL1BZL1BrWmRoK29KZFFnVUZUbUlyMWJGRzh1dnhOTldCdEVjM2MwNWg3ZWQwU0NnYUFJVnFxUDREejlEdktGYjBGMWd5RGhFT09vdGh1cHM0dVUxYnJZOWUxcDN0bWV4OFluKzlHak5XamxNbEFWQk1tRUdEY1FiZXR4YUV4SjE1NnNpUWlzWU5tQjQ5Z3EzQ1ZacUlMRWlRb0xtM2VYOHNIT1BPcHM3cXNPdGJRd2N0K3czekVxUFpLa2tQTWdpT2hTSGtEYjVrR2dlUytVWG9yQUNWWVY3TG16a0NzUGNMUWtoQ2tyRDFOYzVxUmp4MDcwNjVkT3QrN2RTVWxwUTFTVW1mRHdDQlJGcHE2dWpwS1NFazZkT3NYKzNCeXlzN001ZTdhSWJqZUdzV0Z1QjJKRHJXaGJaYUxyTURNZ0ZEMDhBd1RYdWMvVXVxdys2cmFWcVdwQ1hMVDZ5Q05UMWFOSGp6UjBVRnlxcy9CZHRmNC9ENnZXTDBlbzFqMGpWVnZPYk5WVm5OWFFSVkhVcjcvZXE0NGVQVks5SVNsS3pYdXJ0MXFYMVZlVmEwNEVpcVlhc0VoZmUrNWI5TURtUGJXOHUza3I2ZjM3KzF4MzVtL0VkZXAxbnpiWmZnRzU0anZRU0VoeGd4QUVnVDU5K3RLblQxOWUzN1NSelYvOGpYbjNXSENVNVdJTWJ4Y1FuZ0dMdzkvbm5RRmc0dGlNUm1JQkNpcWpLSzl0ZkdKNXVneks3SlpHN2VNZm5NQ2dXOXNDY09qWW1VRFJETngvSHI0OFpxU3pXYUZIMUZIa2lsekVxSnQ5cm4rOE80KzFhMDdRSmNWQWNvd090NnhTVU9Ja3I4ak9TeThYY1BjTlhYejZ1ODkrVEkra0dzNlVPamxxQzZOM2dIZ0diSVU3OWhqQWxMK2Z4ZVYyWWQvL0tJNGp5MUV1Tmh5NHo1MDNuOFdQTDBFVCtUdjI1UnM0VUJSS1RFb3ZYbnh4UFhmZlBmTG5YaXB5NVNIc3VZL2lPTGFLMGhxRnljK2ZKYTJYLzAvOEwwZkF2TFNpS0l3ZU5aS2lILy9MMzJmZFJQZGtPNkQrbkZDa29vbm9pTWFVNkhrWFV3b0RWVVoxVzFFZFphajF4Y2pWUjVBcmNsRnQ1MUVSMmJaZllmSEx4OG04ZHpMTGxqOFRDSXBBZ09PdzNXNW4zcnc1dkxkbE0rMlNRNW4vWUNxOTJvbVlLQVgxR2s4Y05GcXEzWEhzUGxqSGlrM2ZVVzBWbURYN1VlYk1tZGZzUDNaY2lxQmtXams1MzdGdTNWcDJmYjRUbDh1Rk9jTEFvTjd0Nkh4akZERm1FNkZHait1b3NUb3BLYk55S0srVTdQL21VKytRQ1FrSlljU0l1NWt4YzFaUXpxV0Rta3RYVkpTVG5aM052bjNmOHVPSkV4UVducUtxcWdxSHcvTXVsOGxrSWpyYVF1dVUxblRxMklrK2ZmdlJ0MisvZ1A4NTYxTDhKdFhTNVZCVk5hRGJ0Q240SDdUUUNLUzRiOFJRQUFBQU5YUkZXSFJEYjIxdFpXNTBBRU52Ym5abGNuUmxaQ0IzYVhSb0lHVjZaMmxtTG1OdmJTQlRWa2NnZEc4Z1VFNUhJR052Ym5abGNuUmxjaXdwNHlNQUFBQUFTVVZPUks1Q1lJST0iLCJtZWRpYXR5cGUiOiJpbWFnZS9wbmcifV0sImluc3RhbGwiOnsic3BlYyI6eyJjbHVzdGVyUGVybWlzc2lvbnMiOlt7InJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiY29uZmlnLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsic2NoZWR1bGVycyJdLCJ2ZXJicyI6WyJnZXQiLCJ3YXRjaCIsImxpc3QiXX0seyJhcGlHcm91cHMiOlsibW9uaXRvcmluZy5jb3Jlb3MuY29tIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlbW9uaXRvcnMiXSwidmVyYnMiOlsiKiJdfSx7ImFwaUdyb3VwcyI6WyJvcGVyYXRvci5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImt1YmVkZXNjaGVkdWxlcnMiLCJrdWJlZGVzY2hlZHVsZXJzL3N0YXR1cyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsic2VydmljZXMiLCJjb25maWdtYXBzIiwic2VjcmV0cyIsImV2ZW50cyIsInNlcnZpY2VhY2NvdW50cyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsibmFtZXNwYWNlcyIsInBvZHMiXSwidmVyYnMiOlsiZ2V0Iiwid2F0Y2giLCJsaXN0Il19LHsiYXBpR3JvdXBzIjpbInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImNsdXN0ZXJyb2xlcyIsImNsdXN0ZXJyb2xlYmluZGluZ3MiLCJyb2xlcyIsInJvbGViaW5kaW5ncyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbImFwcHMiXSwicmVzb3VyY2VzIjpbInJlcGxpY2FzZXRzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCJdfSx7ImFwaUdyb3VwcyI6WyJhcHBzIl0sInJlc291cmNlcyI6WyJkZXBsb3ltZW50cyIsImRlcGxveW1lbnRzL3NjYWxlIl0sInZlcmJzIjpbIioiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCIsImNyZWF0ZSIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJjb25maWcub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJpbmZyYXN0cnVjdHVyZXMiLCJhcGlzZXJ2ZXJzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCJdfV0sInNlcnZpY2VBY2NvdW50TmFtZSI6Im9wZW5zaGlmdC1kZXNjaGVkdWxlciJ9XSwiZGVwbG95bWVudHMiOlt7Im5hbWUiOiJkZXNjaGVkdWxlci1vcGVyYXRvciIsInNwZWMiOnsicmVwbGljYXMiOjEsInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7Im5hbWUiOiJkZXNjaGVkdWxlci1vcGVyYXRvciJ9fSwidGVtcGxhdGUiOnsibWV0YWRhdGEiOnsibGFiZWxzIjp7Im5hbWUiOiJkZXNjaGVkdWxlci1vcGVyYXRvciJ9fSwic3BlYyI6eyJjb250YWluZXJzIjpbeyJhcmdzIjpbIm9wZXJhdG9yIl0sImNvbW1hbmQiOlsiY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yIl0sImVudiI6W3sibmFtZSI6IldBVENIX05BTUVTUEFDRSIsInZhbHVlRnJvbSI6eyJmaWVsZFJlZiI6eyJmaWVsZFBhdGgiOiJtZXRhZGF0YS5uYW1lc3BhY2UifX19LHsibmFtZSI6Ik9QRVJBVE9SX05BTUUiLCJ2YWx1ZSI6ImRlc2NoZWR1bGVyLW9wZXJhdG9yIn0seyJuYW1lIjoiSU1BR0UiLCJ2YWx1ZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQ0L29zZS1kZXNjaGVkdWxlckBzaGEyNTY6Zjc0ZTllNmM1ZjhiY2Q5ZWRkNDUzZGNkYTRiN2Y2YjNkODE1OWRhMjFjYjJhMzVjMWUxZGU5ZGQyYWU2NmRjYSJ9XSwiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0NC9vc2UtY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yQHNoYTI1NjpiODBkZTQ4YTJhODE0NDU4Y2U5Yjk4YmRhOWZkZTZkMDEyMTA3ZDVhNDEyZjcwOTViZmRkZjgxMDdlMTRkMGFkIiwiaW1hZ2VQdWxsUG9saWN5IjoiQWx3YXlzIiwibmFtZSI6ImRlc2NoZWR1bGVyLW9wZXJhdG9yIiwicG9ydHMiOlt7ImNvbnRhaW5lclBvcnQiOjYwMDAwLCJuYW1lIjoibWV0cmljcyJ9XSwicmVzb3VyY2VzIjp7InJlcXVlc3RzIjp7ImNwdSI6IjEwbSIsIm1lbW9yeSI6IjUwTWkifX0sInNlY3VyaXR5Q29udGV4dCI6eyJhbGxvd1ByaXZpbGVnZUVzY2FsYXRpb24iOmZhbHNlLCJjYXBhYmlsaXRpZXMiOnsiZHJvcCI6WyJBTEwiXX19fV0sInNlY3VyaXR5Q29udGV4dCI6eyJydW5Bc05vblJvb3QiOnRydWUsInNlY2NvbXBQcm9maWxlIjp7InR5cGUiOiJSdW50aW1lRGVmYXVsdCJ9fSwic2VydmljZUFjY291bnROYW1lIjoib3BlbnNoaWZ0LWRlc2NoZWR1bGVyIn19fX1dfSwic3RyYXRlZ3kiOiJkZXBsb3ltZW50In0sImluc3RhbGxNb2RlcyI6W3sic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiT3duTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOnRydWUsInR5cGUiOiJTaW5nbGVOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJNdWx0aU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6IkFsbE5hbWVzcGFjZXMifV0sImtleXdvcmRzIjpbInNjaGVkdWxpbmciLCJkZXNjaGVkdWxlciIsIndvcmtsb2FkIl0sImxhYmVscyI6eyJvbG0tb3duZXItZW50ZXJwcmlzZS1hcHAiOiJjbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IiLCJvbG0tc3RhdHVzLWRlc2NyaXB0b3JzIjoiY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yLnY0LjE0LjAifSwibGlua3MiOlt7Im5hbWUiOiJTb3VyY2UgQ29kZSIsInVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuc2hpZnQvY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yIn1dLCJtYWludGFpbmVycyI6W3siZW1haWwiOiJzdXBwb3J0QHJlZGhhdC5jb20iLCJuYW1lIjoiUmVkIEhhdCJ9XSwibWF0dXJpdHkiOiJiZXRhIiwibWluS3ViZVZlcnNpb24iOiIxLjI3LjAiLCJwcm92aWRlciI6eyJuYW1lIjoiUmVkIEhhdCwgSW5jLiJ9LCJyZWxhdGVkSW1hZ2VzIjpbeyJpbWFnZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQ0L29zZS1jbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3JAc2hhMjU2OmI4MGRlNDhhMmE4MTQ0NThjZTliOThiZGE5ZmRlNmQwMTIxMDdkNWE0MTJmNzA5NWJmZGRmODEwN2UxNGQwYWQiLCJuYW1lIjoib3NlLWNsdXN0ZXIta3ViZS1kZXNjaGVkdWxlci1vcGVyYXRvciJ9LHsiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0NC9vc2UtZGVzY2hlZHVsZXJAc2hhMjU2OmY3NGU5ZTZjNWY4YmNkOWVkZDQ1M2RjZGE0YjdmNmIzZDgxNTlkYTIxY2IyYTM1YzFlMWRlOWRkMmFlNjZkY2EiLCJuYW1lIjoib3NlLWRlc2NoZWR1bGVyIn1dLCJza2lwcyI6WyJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQxMjE3MDIwOSIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyMzA1MTgwMTQxIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDIwODE4MDkiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQxMDA5MTIzOSIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyMzA3MDQxNTMwIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDIzMDQyNDE1MzEiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQwNjE4MDcwOCIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNDExMTMwNDM0IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDUxNDE2MzkiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjMxMDIwMTAyNyIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNDExMjYxNTM2IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDUyMjIyMzciLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQwMzIyMjIzNyIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNDAxMjkyMTExIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI1MDExNTA2MzUiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjMwNjA3MDgxNiIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyMzA3MjQxNzAxIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDIzMDgyODE1NDQiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQxMDE4MjAwMSIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNDA0MjUxNzM3IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDMwNTE2MDkiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQwODA3MDMzMiIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNDExMDYwMDM3IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDcwMjE1MDkiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjMxMTAyMTY1MCIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyMzEwMTAxNjI3IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDEyNjEzNTMiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQwODI2MDkxMCIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNDA1MDcwNzQxIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDkyNDAxMDgiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQwMTE2MTE1MiIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNDAzMDgwOTQwIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI0MDQwMzAzMDkiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjMwOTE4MTQwMiIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyMzExMjExMTMzIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDI1MDEwMjE1MDkiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjMwOTI4MDE0OSIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNDA0MTYxNTQ0IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLjQuMTQuMC0yMDIzMTAwOTEwMjciLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IuNC4xNC4wLTIwMjQxMjA0MDkwNSIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci40LjE0LjAtMjAyNDA2MjkwNjA5Il0sInZlcnNpb24iOiI0LjE0LjAtMjAyNTAxMjgwMjExIn19"
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:def5aa7bc82a819ed103d627b66408f43f2cfa56c78c6ff858059204b47d7825"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:b80de48a2a814458ce9b98bda9fde6d012107d5a412f7095bfddf8107e14d0ad"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:f74e9e6c5f8bcd9edd453dcda4b7f6b3d8159da21cb2a35c1e1de9dd2ae66dca"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202502111935",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:199de0c72e0609cda34af6e4995ae16f93a57eaf1d0aa38e8ae216ca25ce5ae2",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202502111935"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:199de0c72e0609cda34af6e4995ae16f93a57eaf1d0aa38e8ae216ca25ce5ae2"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:0c5b1268c81e7e2704abfff389c2ac342790a6588cb8dcb9eab74c1be8888b23"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:fe3d198fcf8e00442140a59a25d47922bca4f83541d21ef72be4f1cbe3854ebb"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202502191335",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:e6d05ec961cb59f4ee63cd8f67809e1b67108f9873220b03c953d91928aa6c3b",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202502191335"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:e6d05ec961cb59f4ee63cd8f67809e1b67108f9873220b03c953d91928aa6c3b"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:646bd87c208cc8d6e895111453ee19b8407a24ab075cf32d620370122604ec7e"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:b15f0b35ff9febe83a662fb46ad02a0476aa897cad2224ca706135b47207a94d"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202503310335",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:24b525acbde09168094c475d9eb129031b31355c7d1653c3dc531bc6520fd892",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202503310335"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:24b525acbde09168094c475d9eb129031b31355c7d1653c3dc531bc6520fd892"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:952105d782a7523f05eb0d446a3c8cbb4b0f7ec1a0aafbf386875e284e46d91d"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:0edaa160313ac27404464c36adbf542ef2a32e7deb2ce4f7a90fda3127358cb6"
        }
    ]
}
