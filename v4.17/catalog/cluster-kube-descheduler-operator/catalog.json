{
    "schema": "olm.package",
    "name": "cluster-kube-descheduler-operator",
    "defaultChannel": "stable",
    "icon": {
        "base64data": "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",
        "mediatype": "image/png"
    }
}
{
    "schema": "olm.channel",
    "name": "4.13",
    "package": "cluster-kube-descheduler-operator",
    "entries": [
        {
            "name": "clusterkubedescheduleroperator.4.13.0-202309181427",
            "skips": [
                "clusterkubedescheduleroperator.4.13.0-202303231342",
                "clusterkubedescheduleroperator.4.13.0-202309161326",
                "clusterkubedescheduleroperator.4.13.0-202307242035",
                "clusterkubedescheduleroperator.4.13.0-202308281305",
                "clusterkubedescheduleroperator.4.13.0-202307131743",
                "clusterkubedescheduleroperator.4.13.0-202307100954",
                "clusterkubedescheduleroperator.4.13.0-202305220955",
                "clusterkubedescheduleroperator.4.13.0-202302061816",
                "clusterkubedescheduleroperator.4.13.0-202303301516",
                "clusterkubedescheduleroperator.4.13.0-202302091829",
                "clusterkubedescheduleroperator.4.13.0-202308221627",
                "clusterkubedescheduleroperator.4.13.0-202303180002",
                "clusterkubedescheduleroperator.4.13.0-202304190216",
                "clusterkubedescheduleroperator.4.13.0-202305262054",
                "clusterkubedescheduleroperator.4.13.0-202303281554",
                "clusterkubedescheduleroperator.4.13.0-202307072116",
                "clusterkubedescheduleroperator.4.13.0-202307170916",
                "clusterkubedescheduleroperator.4.13.0-202306261929",
                "clusterkubedescheduleroperator.4.13.0-202306070816"
            ],
            "skipRange": ">=4.10.0 <4.13.0-202309181427"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "stable",
    "package": "cluster-kube-descheduler-operator",
    "entries": [
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202310201027",
            "skipRange": ">=4.11.0 <4.14.0-202310201027"
        },
        {
            "name": "clusterkubedescheduleroperator.4.14.0-202311021650",
            "skips": [
                "clusterkubedescheduleroperator.4.14.0-202310201027",
                "clusterkubedescheduleroperator.4.14.0-202310271927",
                "clusterkubedescheduleroperator.4.14.0-202305180141",
                "clusterkubedescheduleroperator.4.14.0-202309181402",
                "clusterkubedescheduleroperator.4.14.0-202308221627",
                "clusterkubedescheduleroperator.4.14.0-202307041530",
                "clusterkubedescheduleroperator.4.14.0-202310091027",
                "clusterkubedescheduleroperator.4.14.0-202304241531",
                "clusterkubedescheduleroperator.4.14.0-202308310706",
                "clusterkubedescheduleroperator.4.14.0-202310061344",
                "clusterkubedescheduleroperator.4.14.0-202309280149",
                "clusterkubedescheduleroperator.4.14.0-202307241701",
                "clusterkubedescheduleroperator.4.14.0-202309161326",
                "clusterkubedescheduleroperator.4.14.0-202310180027",
                "clusterkubedescheduleroperator.4.14.0-202310170859",
                "clusterkubedescheduleroperator.4.14.0-202310170045",
                "clusterkubedescheduleroperator.4.14.0-202308230726",
                "clusterkubedescheduleroperator.4.14.0-202310101627",
                "clusterkubedescheduleroperator.4.14.0-202306070816",
                "clusterkubedescheduleroperator.4.14.0-202308281544"
            ],
            "skipRange": ">=4.11.0 <4.14.0-202311021650"
        },
        {
            "name": "clusterkubedescheduleroperator.v5.0.1",
            "replaces": "clusterkubedescheduleroperator.4.14.0-202311021650",
            "skipRange": ">=4.12.0 <5.0.1"
        },
        {
            "name": "clusterkubedescheduleroperator.v5.1.0",
            "skipRange": ">=5.0.0 <5.1.0"
        },
        {
            "name": "clusterkubedescheduleroperator.v5.1.1",
            "replaces": "clusterkubedescheduleroperator.v5.0.1",
            "skips": [
                "clusterkubedescheduleroperator.v5.0.3",
                "clusterkubedescheduleroperator.v5.0.4",
                "clusterkubedescheduleroperator.v5.0.5",
                "clusterkubedescheduleroperator.v5.0.6",
                "clusterkubedescheduleroperator.v5.1.0",
                "clusterkubedescheduleroperator.v5.0.1",
                "clusterkubedescheduleroperator.v5.0.2"
            ],
            "skipRange": ">=5.0.0 <5.1.1"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.13.0-202309181427",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:b473fba287414d3ccb09aaabc64f463af2c912c322ca2c41723020b216d98d14",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.13.0-202309181427"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:b473fba287414d3ccb09aaabc64f463af2c912c322ca2c41723020b216d98d14"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:ba0b71ff2a30a069b4a8a8f3c1e0898aaadc6db112e4cc12aff7c77ced7a0405"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:45dc69ad93ab50bdf9ce1bb79f6d98f849e320db68af30475b10b7f5497a1b13"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202310201027",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:3c58df18403c681b637ecb7032c9c925298edf0e8e015dfac4ce10446f54b769",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202310201027"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:3c58df18403c681b637ecb7032c9c925298edf0e8e015dfac4ce10446f54b769"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:ec6d6074ff8275540bbffd0df4eedd30c4b93c6d2f7e3f9eeb920d23bd8ef9a6"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:fa2b5e5668344c76d48330c53f148fe87fd5714afff11460ceb066f971d44431"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.4.14.0-202311021650",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:ea86b2d5414480f9907a7536e01f3a0f21445a43f93ec47e3378457b94e4b8ca",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "4.14.0-202311021650"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator-bundle@sha256:ea86b2d5414480f9907a7536e01f3a0f21445a43f93ec47e3378457b94e4b8ca"
        },
        {
            "name": "ose-cluster-kube-descheduler-operator",
            "image": "registry.redhat.io/openshift4/ose-cluster-kube-descheduler-operator@sha256:526ed7be811dcf033156aa6baaf00eca00979a8ff9a459a50954b0c70aa707ad"
        },
        {
            "name": "ose-descheduler",
            "image": "registry.redhat.io/openshift4/ose-descheduler@sha256:dd695ce3ef3aaf78ca87fee7ac1b985136da4b640305d0bd85324319e7c08c94"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.v5.0.1",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/kube-descheduler-operator/kube-descheduler-operator-bundle@sha256:b26e5ebec8ffcfaf18c8c4acb8c25a71318ea7d3b372c9e3e170b6026a681a89",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "5.0.1"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "operand_image",
            "image": "registry.redhat.io/kube-descheduler-operator/descheduler-rhel9@sha256:4b372afe7ed1096a84c3328cbe6a061fedb05919a2d2b26c2520766b91bda4eb"
        },
        {
            "name": "",
            "image": "registry.redhat.io/kube-descheduler-operator/kube-descheduler-operator-bundle@sha256:b26e5ebec8ffcfaf18c8c4acb8c25a71318ea7d3b372c9e3e170b6026a681a89"
        },
        {
            "name": "kube-descheduler-rhel9-operator-30b01e212a57502c009647832ec1bbb47ac4c058c15be9ab19fc584c224e5fd9-annotation",
            "image": "registry.redhat.io/kube-descheduler-operator/kube-descheduler-rhel9-operator@sha256:30b01e212a57502c009647832ec1bbb47ac4c058c15be9ab19fc584c224e5fd9"
        },
        {
            "name": "descheduler-operator",
            "image": "registry.redhat.io/kube-descheduler-operator/kube-descheduler-rhel9-operator@sha256:30b01e212a57502c009647832ec1bbb47ac4c058c15be9ab19fc584c224e5fd9"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.v5.1.0",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/kube-descheduler-operator/kube-descheduler-operator-bundle@sha256:d8ccfec899fbd543a076c28bce386e9ec764bada413350ae53132863ebddaa71",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "5.1.0"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "operand_image",
            "image": "registry.redhat.io/kube-descheduler-operator/descheduler-rhel9@sha256:c1ea7a9aa29127b0266278c42ffcec65698c73f2f171e1e75942fc8a3488adf5"
        },
        {
            "name": "",
            "image": "registry.redhat.io/kube-descheduler-operator/kube-descheduler-operator-bundle@sha256:d8ccfec899fbd543a076c28bce386e9ec764bada413350ae53132863ebddaa71"
        },
        {
            "name": "kube-descheduler-rhel9-operator-37064b9aed587dcc3d8532f366871be2976f70a106bf49e7b866bdc9f444de58-annotation",
            "image": "registry.redhat.io/kube-descheduler-operator/kube-descheduler-rhel9-operator@sha256:37064b9aed587dcc3d8532f366871be2976f70a106bf49e7b866bdc9f444de58"
        },
        {
            "name": "descheduler-operator",
            "image": "registry.redhat.io/kube-descheduler-operator/kube-descheduler-rhel9-operator@sha256:37064b9aed587dcc3d8532f366871be2976f70a106bf49e7b866bdc9f444de58"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "clusterkubedescheduleroperator.v5.1.1",
    "package": "cluster-kube-descheduler-operator",
    "image": "registry.redhat.io/kube-descheduler-operator/kube-descheduler-operator-bundle@sha256:618345991268504019c4fac34d09f3ea7225ffcee2aec48479f9f7e9189b16fc",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "KubeDescheduler",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cluster-kube-descheduler-operator",
                "version": "5.1.1"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwib3BlcmF0b3Iub3BlbnNoaWZ0LmlvL3YxXCIsXG4gICAgXCJraW5kXCI6IFwiS3ViZURlc2NoZWR1bGVyXCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJjbHVzdGVyXCIsXG4gICAgICBcIm5hbWVzcGFjZVwiOiBcIm9wZW5zaGlmdC1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yXCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImRlc2NoZWR1bGluZ0ludGVydmFsU2Vjb25kc1wiOiAzNjAwLFxuICAgICAgXCJtYW5hZ2VtZW50U3RhdGVcIjogXCJNYW5hZ2VkXCIsXG4gICAgICBcIm1vZGVcIjogXCJQcmVkaWN0aXZlXCIsXG4gICAgICBcInByb2ZpbGVzXCI6IFtcIkFmZmluaXR5QW5kVGFpbnRzXCJdXG4gICAgfVxuICB9XG5dXG4iLCJjYXBhYmlsaXRpZXMiOiJCYXNpYyBJbnN0YWxsIiwiY2F0ZWdvcmllcyI6Ik9wZW5TaGlmdCBPcHRpb25hbCIsImNlcnRpZmllZCI6ImZhbHNlIiwiY29udGFpbmVySW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8va3ViZS1kZXNjaGVkdWxlci1vcGVyYXRvci9rdWJlLWRlc2NoZWR1bGVyLXJoZWw5LW9wZXJhdG9yQHNoYTI1NjpjN2Q1Y2QxYzM3MDUxYjhkZjAyMDljOWQxOWZiMTNmZGY2YzMzNGFmM2E2ZDU5MmRjMmNmMDQ2ZDMwYTgwM2RmIiwiY3JlYXRlZEF0IjoiMjAyNC8xMi8wMSIsImRlc2NyaXB0aW9uIjoiQW4gb3BlcmF0b3IgdG8gcnVuIGRlc2NoZWR1bGVyIGluIE9wZW5zaGlmdCBjbHVzdGVyLiIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vY25mIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL2NuaSI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9jc2kiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vZGlzY29ubmVjdGVkIjoidHJ1ZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vZmlwcy1jb21wbGlhbnQiOiJ0cnVlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9wcm94eS1hd2FyZSI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby90bHMtcHJvZmlsZXMiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdG9rZW4tYXV0aC1hd3MiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdG9rZW4tYXV0aC1henVyZSI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby90b2tlbi1hdXRoLWdjcCI6ImZhbHNlIiwib2xtLnNraXBSYW5nZSI6Ilx1MDAzZT01LjAuMCBcdTAwM2M1LjEuMSIsIm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdmFsaWQtc3Vic2NyaXB0aW9uIjoiW1wiT3BlblNoaWZ0IEt1YmVybmV0ZXMgRW5naW5lXCIsIFwiT3BlblNoaWZ0IENvbnRhaW5lciBQbGF0Zm9ybVwiLCBcIk9wZW5TaGlmdCBQbGF0Zm9ybSBQbHVzXCJdIiwicmVwb3NpdG9yeSI6Imh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuc2hpZnQvY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yIiwic3VwcG9ydCI6IlJlZCBIYXQsIEluYy4ifSwibGFiZWxzIjp7Im9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2guYW1kNjQiOiJzdXBwb3J0ZWQiLCJvcGVyYXRvcmZyYW1ld29yay5pby9hcmNoLmFybTY0Ijoic3VwcG9ydGVkIiwib3BlcmF0b3JmcmFtZXdvcmsuaW8vYXJjaC5wcGM2NGxlIjoic3VwcG9ydGVkIiwib3BlcmF0b3JmcmFtZXdvcmsuaW8vYXJjaC5zMzkweCI6InN1cHBvcnRlZCJ9LCJuYW1lIjoiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLnY1LjEuMSIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yIn0sInNwZWMiOnsiY3VzdG9tcmVzb3VyY2VkZWZpbml0aW9ucyI6eyJvd25lZCI6W3siZGVzY3JpcHRpb24iOiJLdWJlRGVzY2hlZHVsZXIgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGRlc2NoZWR1bGVycyBBUEkiLCJkaXNwbGF5TmFtZSI6Ikt1YmUgRGVzY2hlZHVsZXIiLCJncm91cCI6Im9wZXJhdG9yLm9wZW5zaGlmdC5pbyIsImtpbmQiOiJLdWJlRGVzY2hlZHVsZXIiLCJuYW1lIjoia3ViZWRlc2NoZWR1bGVycy5vcGVyYXRvci5vcGVuc2hpZnQuaW8iLCJ2ZXJzaW9uIjoidjEifV19LCJkZXNjcmlwdGlvbiI6IlRoZSBLdWJlIERlc2NoZWR1bGVyIE9wZXJhdG9yIHByb3ZpZGVzIHRoZSBhYmlsaXR5IHRvIGV2aWN0IGEgcnVubmluZyBwb2Qgc28gdGhhdCB0aGUgcG9kIGNhbiBiZSByZXNjaGVkdWxlZCBvbnRvIGEgbW9yZSBzdWl0YWJsZSBub2RlLlxuXG5UaGVyZSBhcmUgc2V2ZXJhbCBzaXR1YXRpb25zIHdoZXJlIGRlc2NoZWR1bGluZyBjYW4gYmVuZWZpdCB5b3VyIGNsdXN0ZXI6XG5cbiogTm9kZXMgYXJlIHVuZGVydXRpbGl6ZWQgb3Igb3ZlcnV0aWxpemVkLlxuKiBQb2QgYW5kIG5vZGUgYWZmaW5pdHkgcmVxdWlyZW1lbnRzLCBzdWNoIGFzIHRhaW50cyBvciBsYWJlbHMsIGhhdmUgY2hhbmdlZCBhbmQgdGhlIG9yaWdpbmFsIHNjaGVkdWxpbmcgZGVjaXNpb25zIGFyZSBubyBsb25nZXIgYXBwcm9wcmlhdGUgZm9yIGNlcnRhaW4gbm9kZXMuXG4qIE5vZGUgZmFpbHVyZSByZXF1aXJlcyBwb2RzIHRvIGJlIG1vdmVkLlxuKiBOZXcgbm9kZXMgYXJlIGFkZGVkIHRvIGNsdXN0ZXJzLlxuXG4jIyBEZXNjaGVkdWxlciBQcm9maWxlc1xuXG5PbmNlIHRoZSBvcGVyYXRvciBpcyBpbnN0YWxsZWQsIHlvdSBjYW4gY29uZmlndXJlIG9uZSBvciBtb3JlIHByb2ZpbGVzIHRvIGlkZW50aWZ5IHBvZHMgdG8gZXZpY3QuIFRoZSBzY2hlZHVsZXIgd2lsbCBzY2hlZHVsZSB0aGUgcmVwbGFjZW1lbnQgb2YgdGhlIGV2aWN0ZWQgcG9kcy5cblxuVGhlIGZvbGxvd2luZyBwcm9maWxlcyBhcmUgYXZhaWxhYmxlOlxuXG4qIEFmZmluaXR5QW5kVGFpbnRzXG4qIFRvcG9sb2d5QW5kRHVwbGljYXRlc1xuKiBTb2Z0VG9wb2xvZ3lBbmREdXBsaWNhdGVzXG4qIExpZmVjeWNsZUFuZFV0aWxpemF0aW9uXG4qIExvbmdMaWZlY3ljbGVcbiogQ29tcGFjdEFuZFNjYWxlXG4qIEV2aWN0UG9kc1dpdGhQVkNcbiogRXZpY3RQb2RzV2l0aExvY2FsU3RvcmFnZVxuXG5UaGVzZSBwcm9maWxlcyBhcmUgZG9jdW1lbnRlZCBpbiBkZXRhaWwgaW4gdGhlIFtkZXNjaGVkdWxlciBvcGVyYXRvciBSRUFETUVdKGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuc2hpZnQvY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yI3Byb2ZpbGVzKS5cblxuIyMgQWRkaXRpb25hbCBQYXJhbWV0ZXJzXG5cbkluIGFkZGl0aW9uIHRvIHRoZSBwcm9maWxlcywgdGhlIGZvbGxvd2luZyBwYXJhbWV0ZXJzIGNhbiBiZSBjb25maWd1cmVkOlxuXG4qIGBkZXNjaGVkdWxpbmdJbnRlcnZhbFNlY29uZHNgIC0gU2V0IHRoZSBudW1iZXIgb2Ygc2Vjb25kcyBiZXR3ZWVuIGRlc2NoZWR1bGVyIHJ1bnMuIEEgdmFsdWUgb2YgYDBgIGluIHRoaXMgZmllbGQgcnVucyB0aGUgZGVzY2hlZHVsZXIgb25jZSBhbmQgZXhpdHMuXG4qIGBtb2RlYCAtIENvbmZpZ3VyZXMgdGhlIGRlc2NoZWR1bGVyIHRvIGVpdGhlciBldmljdCBwb2RzIG9yIHRvIHNpbXVsYXRlIHRoZSBldmljdGlvbi5cbiogYHByb2ZpbGVDdXN0b21pemF0aW9uc2AgLSBBbGxvd3MgY2VydGFpbiBwcm9maWxlIHBhcmFtZXRlcnMgdG8gYmUgdHdlYWtlZCwgc3VjaCBhcyBgcG9kTGlmZXRpbWVgIChzZWUgW1JFQURNRV0oaHR0cHM6Ly9naXRodWIuY29tL29wZW5zaGlmdC9jbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IjcHJvZmlsZS1jdXN0b21pemF0aW9ucykgZm9yIG1vcmUgaW5mbykuXG4qIGBldmljdGlvbkxpbWl0c2AgLSBSZXN0cmljdHMgdGhlIG51bWJlciBvZiBldmljdGlvbnMgZHVyaW5nIGVhY2ggZGVzY2hlZHVsaW5nIHJ1bi5cbiIsImRpc3BsYXlOYW1lIjoiS3ViZSBEZXNjaGVkdWxlciBPcGVyYXRvciIsImljb24iOlt7ImJhc2U2NGRhdGEiOiJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBRHdBQUFBOENBWUFBQUE2L05seUFBQUFCSE5DU1ZRSUNBZ0lmQWhraUFBQUFBbHdTRmx6QUFBR0VRQUFCaEVCRm11dEFnQUFBQkowUlZoMFUyOW1kSGRoY21VQVpYcG5hV1l1WTI5dG9NT3pXQUFBRGpCSlJFRlVhSUhGbTNsZ0ZOVWR4eit6TTN2bVpKUE5UWkFnZCtXS1FSQUlDRWl3S0VnaEZoRkZqb29GdWVRUUtGWlJ3QXFvNWJCUUwvQUd4Yk1WQW9JU1VXbE51QlFJU0VJZ2tHRElIYkxaYzJiNngrcUdKUWhrczJ1L2YrMitlZS8zdnQ5OWIzN0htMWxCVlZXVi94T3FLaXVwcktwQ1ZWVU1CZ094c2JGb3RkcWd6aWtGMWZwbHFLMnRaZXQ3VzhqNmJDdEhqaDRuSWxRaU1reUhWaFM0V0M5VFdta25MRHlVdExTZURNNFl6cEFoR1poTXBvQnlFSDZMRmI1dzRRTC9YTCthZDk5K2l5R3BJUXhMMDNOemV5TTZyUlpCRjRFZzZrRVFRWFpTV0hTZVhmdHJ5RDZxY09SVVBYOGNjdytQekp4UFRFeE1RTGdFVmJDaUtMejZ5Z1plV1BVc21lbWhUQndTanNVY2loVGRFNDM1SnNTUVpCUTA3TXJPNGRQdGU5bWRuWVBENlVRbmlTaXFqT3gyWVhmS0NJTElBK1BIczN6NUNnUkJhQmFub0FrdUtqckRqS21UVUt4bldER3BCY2tKVVVoeC9aRmlia1VRRFRpZFRqWi91SXVWYTkvQ1pyZHo4V0w5cjlyU0FJSkdJRG82bXV5OSt6Q2J6WDd6Q29yZy9ibTVqQitYeVVOM2hEQWhJeEtkcFNmYVZpTVFSQ01BZS9jZDRzK1BQa3U5ellhMTNuN2Rka1dOZ0RFa2hCOSt5Q01rSk1RdmJnRVhuSlcxamRuVEgrYlpTUzBZM0RNZVhjcTlpQkVkQWFpMzJmbkwwZzE4OGxrMjFucWJYL1kxR29HdVhidXhZK2R1djhZSFZQRE9uVHVZT1cweXI4eU9wVWZubHVqYS9RbU5JUnFBQytWVi9HSGNmSXFLUzNFNG5MNGtCR2dhQzRGdDI3TzQrZWEwSm5QVU5IbkVyK0RRb1lOTW56cUo5ZE10OU9qYUhuM0hHVjZ4K1lYbkdEaDhLcWVMenZ1SUZRUVkxUytTcjE1b3k2dHprOUZLSG9lVUVIMzFXQ3hxWU5teXAvemlHWkFWTGk0dVp1amdmaXdlRThidzI5cWk3elRkZTcrZUxpcmg5cEhUcWJQYVVCVEZPNlpUS3dOUGpvOGp0VzFEbk4zNlZUVTdjaTlpaVJEWnNxZjZxbk9HbUV3VW5qblhaSzdOWG1GVlZaaytiVElqZXV1NUt6MEpmZnVIdkdJcnEyb1lPVzQrMW5vN2lxSXdkbUFMb2lORUFEb2tHK2lhWXZTeE5UbzlraGRuSkZGUTRtdzB6K1dvdC92cEEvd2FkUWxlZmVXZlhEaVh4NXhNQy9xMmt4QjBrUUE0blM1R2oxOUlXWGsxc2l3em9Hc29UMCtJNTgzSGJzQWNKdkhoM21xZTJIUytrVDJkSkpCZjRyam12S3FpNHMvbWJKYmc0dUppbGk5ZHd2TVBSUk9TUEJSTlNKTDMyck9yMzZTZzhCd3V0eHVBY1lNOXNiTmRTejBiNTdVRVlQT2VhamJ1cVBDeFdWYmpwcnBPQnZEZTAxZUNJSUFzeTAzbTNDekJMNng2aHFGcDRkelV1UVBhK0VIZTl2MkhqdlBTNng5aC85bEJKVVJyU2UvU0VEZlBsYnU5bjU5NTV3S0g4aHUyNThsaXorcW1kd25sd3lXdENUZUpWNXhicnpjZ1NVMHZCZnd1SHM2Y09jMzdXOThuYS9rTjZGcU44dnprZ05zdDg2ZFp5M0M2R2tUZE43QUZvcVpodGQ3ZVhlbjlmRk9LZ1pRRUhWOGN2TWdYQit2WWRlQWliWlAwckptV1JKaEp3L3BaU1V4WWNSYW51OEhoQVNRa0pQckYyMi9CRzlhdjQ4NWVFYVIwU0VVVDBqRDVlNS9zcHFLcTFodFlkWkxBNlBRVzN1dW5mM0t3NzVqVis5M3VVTGxsMmttdm9KaElpZGZtSkJObThteStYaDFEV0RFbGdkbi9PT2VOMWFKR1EycHFxbCs4L2RyU2JyZWJUejc2Z0ZGOVE1RVNNN3p0THBlYjVhczJZcmMxT0oyTXRIQ3Zad1o0YzFlMVQ1SngvS3pkWi9YbTNoUFRLQTcvdm1jWUxTMDY3M2VkWHMrd1lYZjZROTIvRmY1NjcxNGtqWXRlcVozUkdPTzk3Ui85ZXc5MVZ0OGlvRWRiSTBjS1BmZW9yQWg4dVBmcThYWEZsbEp1NldBaTZXZUJwODQ3ZWViZFVzNldPWW1PRUNtdmtYRzVYUFFmY0pzLzFQMFQvUG5PTEFaM055RkY5L0JwZi92OUxHeDIzNUN5NUkyZm1tUzd2RVptNHFvaS9qRXptVGQyVnJCbFR6WHRFdlZzbXRlS3h6ZWRSNk5SNmR1M245L0ZnMTliK3VpUkEzUk0xaUdadTNyYktpcXJ5VGw0N0lyOXpXRVM2MmEweEtDOWRpMGJiNVlvS0hHUzhWZysrMyswc1daYUlwOHVUYUhPcmxCMHdZa2thWms1YTdZL3RBRS9CUjgvZnBLT0tYRUkybEJ2MjY0OU9lajF1a1o5ZTdZMzhlOWxLZHlSRnNadDNVSWJYYjhVb1VZTlQ0NlBwMjJpbnVlbUpQRHAwdFprcElVakNQREs5bklRb00yTmJlalRwNjgvdEFFL3RyVE5acU95dXBiazVKWSs3VWVQbjhKNVdXRXdma2dVQzhiRWVCT0l1M3BIc0QzbjRxL2FYalEyanY1ZFFobllQWXhMb2hqZkhxM2o0RWtiQm9PQkJZOHRiQ3BsSHpSWjhDL1pqVFkwMXFmOTRBOG5jTXNlYnhzWkp2TGNsRVFHZFBWZDBRSGR3Z2czaWRUV044NlEwcnVFY2svL1NDNC93VGxXWk9leGx6MHBxTVVTVGNiUU81cEsyUWRORml4SkVvSWc0SkI5aDU0dEx2Vit0b1JMZko1YlMvOHVvVjRCaHd0cy9GQm9JekZhUzIyUnIrQXdrNFpsRStOOXhCYVh1MWovYVRudmYxV05XMVl4R28zTW43OFFqYVo1NlgrVEJSc01CaExqTFJTY3FhUlZsNFoyUlc0SXJpZUxIUXhPRGZNUnNPVE44eHd1dVBKeHp0ek1HQktpUExGWFZsVCs4dXA1UHZxbUJ2Y2xOazBtRXlQL01LcXBkQnZCcjUrcmE3ZnU1SHlmNzlNbWlnMm10SkxBZllNYUR0citrMmYxaXUxOGc1RW43NC96R2J2OG5WS21yejNIZ1pPZWVQM0xxdjRDbzlISTdFZm5vTk0xZG9wTmhWK0NSMmVPNWYwZEoxRmtsN2V0VGV1R1NtbDQ3d2ppelEyYjU5WHRsYlJQMHJOMmVoS2ZQTldhd1RlSCs5aHp1RlMyZlZkTDVsT0ZaRDUxMnNkaEFXaEVrWEhqSHZDSGFpUDRKWGhJeGxBTXBnaGVXamtEVi9FT1ZKZVZuajA2bzlkNXR1VXZwU0I0TXFYRUtDMmZMVy9ENzN0NlFvenVLamZTNFFJYnlpV3BwOEZvWU5xMFJ3TDJCTUl2d1ZxdGxuVWJOckpxU3duNUIvNkY3ZkRUM05XdERwZmI0NHhheFRia3dwdDJWUERRc0NpZis3bXFUcm5jNUs5RGhjbVRIL0tINWhYaHQ4dnIzcjA3RXlaTlljRnJsYWl5azFiR2svVHFZRVFyQ2J6d1FSa0FsUmZkMkoycXR4ZzRYK25tNmJkS0diNjQ0THJtME92MVBEaGhJcEdSa2Y3U2JJUm1IZUk1blE0RzllL04vZWxPN2hzWXlVOVZiZ2JOemFmZW9iQm9yTWN4cGJVM0VkdENZc08veXRuOFpYV2p1dlpxMEdxMTdEOXdtTGk0dUd0M3ZrNDArOVJ5ZjI0dVl6S0hzMjFaU3hLaXRHemRXODNpMTM3QzVWYUlpWlM0cFZNSU83NnJ4ZTVxMmpSYXJaWlJvMGF6WnUyTHphSFhDQUU1cGwyNFlDNEZCejVoNHh4UDlqVm02V2tPbkxUaGt2MDNMVWtTWDMremo1U1VOczJsNTRPQUhNUS8vdGVuS0N6VDhmRTNOUUE4OTNBaTRwV1BvcTRMb2loeSsrMURBaTRXQWlUWVpETHgvSnIxTEhtbmt2SWFtY1JvTFF2K0dJdEI1OStqVFkxR3c1eTU4d0pCcmJIdFFCbnExeStkb1JsM3N1UnR6d0hkL1VQTXRFMDBJRjJlUlZ3RGdrWWdMUzJOTGwyNlhydXpId2lZWUlDbHo2eGtmNEhDanB4YU5BS3NucFpJVTNOOW5hVGpzUVdMQWtuTEJ3RVZIQjRlem9ybjF2TDRHNVhVV0dWYXgrbVlNZEtDUVhmOTA3UnVrMEx2M3JjR2twWVBBaW9ZSUNOaktMMXVUV2ZadTFVQVRMa3ppcFlXcmMrNTlLL0JZRFN3ZVBGZkEwM0pCd0VYRExEeStiVjhjZGpPVno5WWtVU0JOWTljMzlhMlJGc1lQUGoyWUZEeUlpaUN6ZVlvbGp6OU54WnRxc0JxVitqUTBzRGtPOHhYOWRvR280R0ZpeFkzdThDL0ZvTDZGcys5OTR5Z3BlNEVUOXdmamRPdE1IaCtBY1ZsTHA5cTZCZFlMREVjL3Y2SVg4K0xtb0tnL3B6UHI5N0F4L3VzNUp5b1J5ZHBXRE0xQ1ZGc3ZNcVNKREZuenR5Z2k0VWdDNDZQajJmaG9pZFk4Rm9GZHBkS3R4dU5qQm5Rb3BIWDF1bjBqTDF2WERDcGVCSGNHd1lZUDJFaXNZbnRXUDJSSnlGWk9EYVdDSlBvVXg5UG56NERnOEVRYkNyQWIvVHE0YWxUQll5L1B4Tkp2c2k5NlhyaXpDSlRWNS9ENlZZUlJaSGpKL0tKaUlnSU5nMGd5SUpWWnpWeVJTNUsxV0VVYXlHNUIvUFkvUGtaZGgrb0pkUWdVRlRtSXIxYkZHOHV2eE5OV0J0RWMzYzA1aDdlZDBTQ2dhQUlWcXFQNER6OUR2S0ZiMEYxZ3lEaEVPT290aHVwczR1VTFiclk5ZTFwM3RtZXg4WW4rOUdqTldqbE1sQVZCTW1FR0RjUWJldHhhRXhKMTU2c2lRaXNZTm1CNDlncTNDVlpxSUxFaVFvTG0zZVg4c0hPUE9wczdxc090YlF3Y3QrdzN6RXFQWktra1BNZ2lPaFNIa0RiNWtHZ2VTK1VYb3JBQ1ZZVjdMbXprQ3NQY0xRa2hDa3JEMU5jNXFSangwNzA2NWRPdCs3ZFNVbHBRMVNVbWZEd0NCUkZwcTZ1anBLU0VrNmRPc1grM0J5eXM3TTVlN2FJYmplR3NXRnVCMkpEcldoYlphTHJNRE1nRkQwOEF3VFh1Yy9VdXF3KzZyYVZxV3BDWExUNnlDTlQxYU5IanpSMFVGeXFzL0JkdGY0L0Q2dldMMGVvMWowalZWdk9iTlZWbk5YUVJWSFVyNy9lcTQ0ZVBWSzlJU2xLelh1cnQxcVgxVmVWYTA0RWlxWWFzRWhmZSs1YjlNRG1QYlc4dTNrcjZmMzcrMXgzNW0vRWRlcDFuemJaZmdHNTRqdlFTRWh4Z3hBRWdUNTkrdEtuVDE5ZTM3U1J6Vi84alhuM1dIQ1U1V0lNYnhjUW5nR0x3OS9ublFGZzR0aU1SbUlCQ2lxaktLOXRmR0o1dWd6SzdKWkc3ZU1mbk1DZ1c5c0NjT2pZbVVEUkROeC9IcjQ4WnFTeldhRkgxRkhraWx6RXFKdDlybis4TzQrMWEwN1FKY1ZBY293T3Q2eFNVT0lrcjhqT1N5OFhjUGNOWFh6NnU4OStUSStrR3M2VU9qbHFDNk4zZ0hnR2JJVTc5aGpBbEwrZnhlVjJZZC8vS0k0ankxRXVOaHk0ejUwM244V1BMMEVUK1R2MjVSczRVQlJLVEVvdlhueHhQWGZmUGZMblhpcHk1U0hzdVkvaU9MYUswaHFGeWMrZkphMlgvMC84TDBmQXZMU2lLSXdlTlpLaUgvL0wzMmZkUlBka082RCtuRkNrb29ub2lNYVU2SGtYVXdvRFZVWjFXMUVkWmFqMXhjalZSNUFyY2xGdDUxRVIyYlpmWWZITHg4bThkekxMbGo4VENJcEFnT093M1c1bjNydzV2TGRsTSsyU1E1bi9ZQ3E5Mm9tWUtBWDFHazhjTkZxcTNYSHNQbGpIaWszZlVXMFZtRFg3VWViTW1kZnNQM1pjaXFCa1dqazUzN0Z1M1ZwMmZiNFRsOHVGT2NMQW9ON3Q2SHhqRkRGbUU2RkdqK3Vvc1RvcEtiTnlLSytVN1AvbVUrK1FDUWtKWWNTSXU1a3hjMVpRenFXRG1rdFhWSlNUblozTnZuM2Y4dU9KRXhRV25xS3FxZ3FIdy9NdWw4bGtJanJhUXV1VTFuVHEySWsrZmZ2UnQyKy9nUDg1NjFMOEp0WFM1VkJWTmFEYnRDbjRIN1RRQ0tTNGI4UlFBQUFBTlhSRldIUkRiMjF0Wlc1MEFFTnZiblpsY25SbFpDQjNhWFJvSUdWNloybG1MbU52YlNCVFZrY2dkRzhnVUU1SElHTnZiblpsY25SbGNpd3A0eU1BQUFBQVNVVk9SSzVDWUlJPSIsIm1lZGlhdHlwZSI6ImltYWdlL3BuZyJ9XSwiaW5zdGFsbCI6eyJzcGVjIjp7ImNsdXN0ZXJQZXJtaXNzaW9ucyI6W3sicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJjb25maWcub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJzY2hlZHVsZXJzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCJdfSx7ImFwaUdyb3VwcyI6WyJtb25pdG9yaW5nLmNvcmVvcy5jb20iXSwicmVzb3VyY2VzIjpbInNlcnZpY2Vtb25pdG9ycyJdLCJ2ZXJicyI6WyJnZXQiLCJ3YXRjaCIsImxpc3QiLCJjcmVhdGUiLCJ1cGRhdGUiLCJwYXRjaCIsImRlbGV0ZSIsImRlbGV0ZWNvbGxlY3Rpb24iXX0seyJhcGlHcm91cHMiOlsibW9uaXRvcmluZy5jb3Jlb3MuY29tIl0sInJlc291cmNlTmFtZXMiOlsiazhzIl0sInJlc291cmNlcyI6WyJwcm9tZXRoZXVzZXMvYXBpIl0sInZlcmJzIjpbImdldCIsImNyZWF0ZSIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJvcGVyYXRvci5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImt1YmVkZXNjaGVkdWxlcnMiLCJrdWJlZGVzY2hlZHVsZXJzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiLCJ3YXRjaCIsImxpc3QiLCJjcmVhdGUiLCJ1cGRhdGUiLCJwYXRjaCIsImRlbGV0ZSIsImRlbGV0ZWNvbGxlY3Rpb24iXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlcyIsImNvbmZpZ21hcHMiLCJzZWNyZXRzIiwiZXZlbnRzIiwic2VydmljZWFjY291bnRzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIiwiZGVsZXRlY29sbGVjdGlvbiJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbIm5hbWVzcGFjZXMiLCJwb2RzIiwibm9kZXMiXSwidmVyYnMiOlsiZ2V0Iiwid2F0Y2giLCJsaXN0Il19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcy9ldmljdGlvbiJdLCJ2ZXJicyI6WyJjcmVhdGUiXX0seyJhcGlHcm91cHMiOlsicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsiY2x1c3RlcnJvbGVzIiwiY2x1c3RlcnJvbGViaW5kaW5ncyIsInJvbGVzIiwicm9sZWJpbmRpbmdzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIiwiZGVsZXRlY29sbGVjdGlvbiJdfSx7ImFwaUdyb3VwcyI6WyJzY2hlZHVsaW5nLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsicHJpb3JpdHljbGFzc2VzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCJdfSx7ImFwaUdyb3VwcyI6WyJwb2xpY3kiXSwicmVzb3VyY2VzIjpbInBvZGRpc3J1cHRpb25idWRnZXRzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCJdfSx7ImFwaUdyb3VwcyI6WyJhcHBzIl0sInJlc291cmNlcyI6WyJyZXBsaWNhc2V0cyJdLCJ2ZXJicyI6WyJnZXQiLCJ3YXRjaCIsImxpc3QiXX0seyJhcGlHcm91cHMiOlsiYXBwcyJdLCJyZXNvdXJjZXMiOlsiZGVwbG95bWVudHMiLCJkZXBsb3ltZW50cy9zY2FsZSJdLCJ2ZXJicyI6WyJnZXQiLCJ3YXRjaCIsImxpc3QiLCJjcmVhdGUiLCJ1cGRhdGUiLCJwYXRjaCIsImRlbGV0ZSIsImRlbGV0ZWNvbGxlY3Rpb24iXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbImV2ZW50cy5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImV2ZW50cyJdLCJ2ZXJicyI6WyJnZXQiLCJ3YXRjaCIsImxpc3QiLCJjcmVhdGUiLCJ1cGRhdGUiLCJwYXRjaCIsImRlbGV0ZSJdfSx7ImFwaUdyb3VwcyI6WyJjb25maWcub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJpbmZyYXN0cnVjdHVyZXMiLCJhcGlzZXJ2ZXJzIl0sInZlcmJzIjpbImdldCIsIndhdGNoIiwibGlzdCJdfSx7ImFwaUdyb3VwcyI6WyJyb3V0ZS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInJvdXRlcyJdLCJ2ZXJicyI6WyJnZXQiLCJ3YXRjaCIsImxpc3QiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJlbmRwb2ludHMiXSwidmVyYnMiOlsiZ2V0Iiwid2F0Y2giLCJsaXN0Il19XSwic2VydmljZUFjY291bnROYW1lIjoib3BlbnNoaWZ0LWRlc2NoZWR1bGVyIn1dLCJkZXBsb3ltZW50cyI6W3sibmFtZSI6ImRlc2NoZWR1bGVyLW9wZXJhdG9yIiwic3BlYyI6eyJyZXBsaWNhcyI6MSwic2VsZWN0b3IiOnsibWF0Y2hMYWJlbHMiOnsibmFtZSI6ImRlc2NoZWR1bGVyLW9wZXJhdG9yIn19LCJ0ZW1wbGF0ZSI6eyJtZXRhZGF0YSI6eyJsYWJlbHMiOnsibmFtZSI6ImRlc2NoZWR1bGVyLW9wZXJhdG9yIn19LCJzcGVjIjp7ImNvbnRhaW5lcnMiOlt7ImFyZ3MiOlsib3BlcmF0b3IiXSwiY29tbWFuZCI6WyJjbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IiXSwiZW52IjpbeyJuYW1lIjoiT1BFUkFUT1JfUE9EX05BTUVTUEFDRSIsInZhbHVlRnJvbSI6eyJmaWVsZFJlZiI6eyJmaWVsZFBhdGgiOiJtZXRhZGF0YS5uYW1lc3BhY2UifX19LHsibmFtZSI6Ik9QRVJBTkRfTkFNRVNQQUNFIiwidmFsdWVGcm9tIjp7ImZpZWxkUmVmIjp7ImZpZWxkUGF0aCI6Im1ldGFkYXRhLm5hbWVzcGFjZSJ9fX0seyJuYW1lIjoiUkVMQVRFRF9JTUFHRV9PUEVSQU5EX0lNQUdFIiwidmFsdWUiOiJyZWdpc3RyeS5yZWRoYXQuaW8va3ViZS1kZXNjaGVkdWxlci1vcGVyYXRvci9kZXNjaGVkdWxlci1yaGVsOUBzaGEyNTY6ZDE1YWNlZjJkOWIzNmNlOGQ1Y2U5NGU0OWFmZWEzMmJjMGNlZWU0MTAzNjk2NDAyZjM1MWViZTdlMjRjZTExOCJ9LHsibmFtZSI6Ik9QRVJBTkRfVkVSU0lPTiIsInZhbHVlIjoiNS4xLjEifV0sImltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvL2t1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3Iva3ViZS1kZXNjaGVkdWxlci1yaGVsOS1vcGVyYXRvckBzaGEyNTY6YzdkNWNkMWMzNzA1MWI4ZGYwMjA5YzlkMTlmYjEzZmRmNmMzMzRhZjNhNmQ1OTJkYzJjZjA0NmQzMGE4MDNkZiIsImltYWdlUHVsbFBvbGljeSI6IkFsd2F5cyIsIm5hbWUiOiJkZXNjaGVkdWxlci1vcGVyYXRvciIsInBvcnRzIjpbeyJjb250YWluZXJQb3J0Ijo2MDAwMCwibmFtZSI6Im1ldHJpY3MifV0sInJlc291cmNlcyI6eyJyZXF1ZXN0cyI6eyJjcHUiOiIxMG0iLCJtZW1vcnkiOiI1ME1pIn19LCJzZWN1cml0eUNvbnRleHQiOnsiYWxsb3dQcml2aWxlZ2VFc2NhbGF0aW9uIjpmYWxzZSwiY2FwYWJpbGl0aWVzIjp7ImRyb3AiOlsiQUxMIl19LCJyZWFkT25seVJvb3RGaWxlc3lzdGVtIjp0cnVlfSwidm9sdW1lTW91bnRzIjpbeyJtb3VudFBhdGgiOiIvdG1wIiwibmFtZSI6InRtcCJ9XX1dLCJzZWN1cml0eUNvbnRleHQiOnsicnVuQXNOb25Sb290Ijp0cnVlLCJzZWNjb21wUHJvZmlsZSI6eyJ0eXBlIjoiUnVudGltZURlZmF1bHQifX0sInNlcnZpY2VBY2NvdW50TmFtZSI6Im9wZW5zaGlmdC1kZXNjaGVkdWxlciIsInZvbHVtZXMiOlt7ImVtcHR5RGlyIjp7fSwibmFtZSI6InRtcCJ9XX19fX1dfSwic3RyYXRlZ3kiOiJkZXBsb3ltZW50In0sImluc3RhbGxNb2RlcyI6W3sic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiT3duTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOnRydWUsInR5cGUiOiJTaW5nbGVOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJNdWx0aU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6IkFsbE5hbWVzcGFjZXMifV0sImtleXdvcmRzIjpbInNjaGVkdWxpbmciLCJkZXNjaGVkdWxlciIsIndvcmtsb2FkIl0sImxhYmVscyI6eyJvbG0tb3duZXItZW50ZXJwcmlzZS1hcHAiOiJjbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IiLCJvbG0tc3RhdHVzLWRlc2NyaXB0b3JzIjoiY2x1c3Rlci1rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yLnY1LjEuMSJ9LCJsaW5rcyI6W3sibmFtZSI6IlNvdXJjZSBDb2RlIiwidXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL29wZW5zaGlmdC9jbHVzdGVyLWt1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3IifV0sIm1haW50YWluZXJzIjpbeyJlbWFpbCI6InN1cHBvcnRAcmVkaGF0LmNvbSIsIm5hbWUiOiJSZWQgSGF0In1dLCJtYXR1cml0eSI6ImJldGEiLCJtaW5LdWJlVmVyc2lvbiI6IjEuMzAuMCIsInByb3ZpZGVyIjp7Im5hbWUiOiJSZWQgSGF0LCBJbmMuIn0sInJlbGF0ZWRJbWFnZXMiOlt7ImltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvL2t1YmUtZGVzY2hlZHVsZXItb3BlcmF0b3Iva3ViZS1kZXNjaGVkdWxlci1yaGVsOS1vcGVyYXRvckBzaGEyNTY6YzdkNWNkMWMzNzA1MWI4ZGYwMjA5YzlkMTlmYjEzZmRmNmMzMzRhZjNhNmQ1OTJkYzJjZjA0NmQzMGE4MDNkZiIsIm5hbWUiOiJrdWJlLWRlc2NoZWR1bGVyLXJoZWw5LW9wZXJhdG9yLWM3ZDVjZDFjMzcwNTFiOGRmMDIwOWM5ZDE5ZmIxM2ZkZjZjMzM0YWYzYTZkNTkyZGMyY2YwNDZkMzBhODAzZGYtYW5ub3RhdGlvbiJ9LHsiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8va3ViZS1kZXNjaGVkdWxlci1vcGVyYXRvci9rdWJlLWRlc2NoZWR1bGVyLXJoZWw5LW9wZXJhdG9yQHNoYTI1NjpjN2Q1Y2QxYzM3MDUxYjhkZjAyMDljOWQxOWZiMTNmZGY2YzMzNGFmM2E2ZDU5MmRjMmNmMDQ2ZDMwYTgwM2RmIiwibmFtZSI6ImRlc2NoZWR1bGVyLW9wZXJhdG9yIn0seyJpbWFnZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9rdWJlLWRlc2NoZWR1bGVyLW9wZXJhdG9yL2Rlc2NoZWR1bGVyLXJoZWw5QHNoYTI1NjpkMTVhY2VmMmQ5YjM2Y2U4ZDVjZTk0ZTQ5YWZlYTMyYmMwY2VlZTQxMDM2OTY0MDJmMzUxZWJlN2UyNGNlMTE4IiwibmFtZSI6Im9wZXJhbmRfaW1hZ2UifV0sInJlcGxhY2VzIjoiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLnY1LjAuMSIsInNraXBzIjpbImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci52NS4wLjEiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IudjUuMC4yIiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLnY1LjAuMyIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci52NS4wLjQiLCJjbHVzdGVya3ViZWRlc2NoZWR1bGVyb3BlcmF0b3IudjUuMC41IiwiY2x1c3Rlcmt1YmVkZXNjaGVkdWxlcm9wZXJhdG9yLnY1LjAuNiIsImNsdXN0ZXJrdWJlZGVzY2hlZHVsZXJvcGVyYXRvci52NS4xLjAiXSwidmVyc2lvbiI6IjUuMS4xIn19"
            }
        }
    ],
    "relatedImages": [
        {
            "name": "operand_image",
            "image": "registry.redhat.io/kube-descheduler-operator/descheduler-rhel9@sha256:d15acef2d9b36ce8d5ce94e49afea32bc0ceee4103696402f351ebe7e24ce118"
        },
        {
            "name": "",
            "image": "registry.redhat.io/kube-descheduler-operator/kube-descheduler-operator-bundle@sha256:618345991268504019c4fac34d09f3ea7225ffcee2aec48479f9f7e9189b16fc"
        },
        {
            "name": "kube-descheduler-rhel9-operator-c7d5cd1c37051b8df0209c9d19fb13fdf6c334af3a6d592dc2cf046d30a803df-annotation",
            "image": "registry.redhat.io/kube-descheduler-operator/kube-descheduler-rhel9-operator@sha256:c7d5cd1c37051b8df0209c9d19fb13fdf6c334af3a6d592dc2cf046d30a803df"
        },
        {
            "name": "descheduler-operator",
            "image": "registry.redhat.io/kube-descheduler-operator/kube-descheduler-rhel9-operator@sha256:c7d5cd1c37051b8df0209c9d19fb13fdf6c334af3a6d592dc2cf046d30a803df"
        }
    ]
}
