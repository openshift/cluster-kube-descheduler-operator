// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// NamespacesApplyConfiguration represents a declarative configuration of the Namespaces type for use
// with apply.
type NamespacesApplyConfiguration struct {
	Included []string `json:"included,omitempty"`
	Excluded []string `json:"excluded,omitempty"`
}

// NamespacesApplyConfiguration constructs a declarative configuration of the Namespaces type for use with
// apply.
func Namespaces() *NamespacesApplyConfiguration {
	return &NamespacesApplyConfiguration{}
}

// WithIncluded adds the given value to the Included field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Included field.
func (b *NamespacesApplyConfiguration) WithIncluded(values ...string) *NamespacesApplyConfiguration {
	for i := range values {
		b.Included = append(b.Included, values[i])
	}
	return b
}

// WithExcluded adds the given value to the Excluded field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Excluded field.
func (b *NamespacesApplyConfiguration) WithExcluded(values ...string) *NamespacesApplyConfiguration {
	for i := range values {
		b.Excluded = append(b.Excluded, values[i])
	}
	return b
}
