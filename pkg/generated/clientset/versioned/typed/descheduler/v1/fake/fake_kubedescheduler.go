// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/cluster-kube-descheduler-operator/pkg/apis/descheduler/v1"
	deschedulerv1 "github.com/openshift/cluster-kube-descheduler-operator/pkg/generated/applyconfiguration/descheduler/v1"
	typeddeschedulerv1 "github.com/openshift/cluster-kube-descheduler-operator/pkg/generated/clientset/versioned/typed/descheduler/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeKubeDeschedulers implements KubeDeschedulerInterface
type fakeKubeDeschedulers struct {
	*gentype.FakeClientWithListAndApply[*v1.KubeDescheduler, *v1.KubeDeschedulerList, *deschedulerv1.KubeDeschedulerApplyConfiguration]
	Fake *FakeKubedeschedulersV1
}

func newFakeKubeDeschedulers(fake *FakeKubedeschedulersV1, namespace string) typeddeschedulerv1.KubeDeschedulerInterface {
	return &fakeKubeDeschedulers{
		gentype.NewFakeClientWithListAndApply[*v1.KubeDescheduler, *v1.KubeDeschedulerList, *deschedulerv1.KubeDeschedulerApplyConfiguration](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("kubedeschedulers"),
			v1.SchemeGroupVersion.WithKind("KubeDescheduler"),
			func() *v1.KubeDescheduler { return &v1.KubeDescheduler{} },
			func() *v1.KubeDeschedulerList { return &v1.KubeDeschedulerList{} },
			func(dst, src *v1.KubeDeschedulerList) { dst.ListMeta = src.ListMeta },
			func(list *v1.KubeDeschedulerList) []*v1.KubeDescheduler { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.KubeDeschedulerList, items []*v1.KubeDescheduler) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
